{"version":3,"file":"admin.js","sources":["../src/common/components/shared/ConfirmModal.tsx","../src/admin/components/shared/GenericManagementPage.tsx","../src/admin/components/sections/GeneralSettingsSection.tsx","../src/common/utils/formValidators.ts","../src/admin/components/forms/AddPlatformForm.tsx","../src/admin/components/shared/GenericPlatformListItem.tsx","../src/admin/components/sections/PlatformManagementSection.tsx","../src/admin/components/items/WithdrawalRequestItem.tsx","../src/admin/components/sections/RequestManagementSection.tsx","../src/admin/components/sections/DepositRecordManagementSection.tsx","../src/admin/components/forms/AddDepositPlatformForm.tsx","../src/admin/components/sections/DepositPlatformManagementSection.tsx","../src/common/utils/apiRequestUtils.ts","../src/admin/utils/platformOperations.ts","../src/common/types/api.ts","../src/admin/components/UnifiedManagementPage.tsx","../src/common/models/WithdrawalPlatform.ts","../src/common/types/index.ts","../src/common/models/WithdrawalRequest.ts","../src/common/models/DepositPlatform.ts","../src/common/models/DepositRecord.ts","../src/admin/index.ts"],"sourcesContent":["import Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport app from 'flarum/common/app';\r\n\r\nexport interface ConfirmModalAttrs extends IInternalModalAttrs {\r\n  title: string;\r\n  message: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  onConfirm: () => void;\r\n  onCancel: () => void;\r\n  dangerous?: boolean;\r\n  icon?: string;\r\n}\r\n\r\n/**\r\n * 通用确认模态框组件\r\n * 用于替代重复的删除确认、状态变更确认等模态框\r\n */\r\nexport default class ConfirmModal extends Modal<ConfirmModalAttrs> {\r\n  className() {\r\n    return 'ConfirmModal';\r\n  }\r\n\r\n  title() {\r\n    const { title, dangerous = false, icon: modalIcon = dangerous ? 'fas fa-exclamation-triangle' : 'fas fa-question-circle' } = this.attrs;\r\n    \r\n    return (\r\n      <span>\r\n        {modalIcon && (\r\n          <span className={`ConfirmModal-icon ${dangerous ? 'dangerous' : ''}`}>\r\n            {icon(modalIcon)}\r\n          </span>\r\n        )}\r\n        {title}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  content() {\r\n    const { \r\n      message, \r\n      confirmText = 'Confirm',\r\n      cancelText = 'Cancel',\r\n      onConfirm, \r\n      onCancel, \r\n      dangerous = false\r\n    } = this.attrs;\r\n\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <div className=\"ConfirmModal-message\">\r\n          {message}\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <div className=\"ButtonGroup\">\r\n            <Button\r\n              className=\"Button\"\r\n              onclick={() => {\r\n                onCancel();\r\n                app.modal.close();\r\n              }}\r\n            >\r\n              {cancelText}\r\n            </Button>\r\n            <Button\r\n              className={`Button Button--${dangerous ? 'danger' : 'primary'}`}\r\n              onclick={() => {\r\n                onConfirm();\r\n                app.modal.close();\r\n              }}\r\n            >\r\n              {confirmText}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\nimport ConfirmModal from '../../../common/components/shared/ConfirmModal';\r\n\r\n// Generic interfaces for platform management\r\nexport interface GenericPlatform {\r\n  id?: () => string | number;\r\n  name?: () => string;\r\n  isActive?: () => boolean;\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface GenericTransaction {\r\n  id?: () => string | number;\r\n  status?: () => string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface PlatformOperations<T extends GenericPlatform> {\r\n  create: (data: any) => Promise<T>;\r\n  toggleStatus: (platform: T) => Promise<void>;\r\n  delete: (platform: T) => Promise<void>;\r\n  load: () => Promise<T[]>;\r\n}\r\n\r\nexport interface TransactionOperations<T extends GenericTransaction> {\r\n  updateStatus: (transaction: T, status: string) => Promise<void>;\r\n  load: () => Promise<T[]>;\r\n}\r\n\r\nexport interface TabConfiguration {\r\n  key: string;\r\n  label: string;\r\n  component: Mithril.ComponentTypes<any>;\r\n  props?: () => any;\r\n}\r\n\r\nexport interface GenericManagementPageConfig<\r\n  TPlatform extends GenericPlatform,\r\n  TTransaction extends GenericTransaction\r\n> {\r\n  pageTitle: string;\r\n  extensionId: string;\r\n  \r\n  // Platform configuration\r\n  platformOperations: PlatformOperations<TPlatform>;\r\n  transactionOperations?: TransactionOperations<TTransaction>;\r\n  \r\n  // Tab configuration\r\n  tabs: TabConfiguration[];\r\n  \r\n  // Optional settings section\r\n  settingsComponent?: Mithril.ComponentTypes<any>;\r\n  \r\n  // Translation prefixes\r\n  translations: {\r\n    platformPrefix: string;\r\n    transactionPrefix?: string;\r\n  };\r\n}\r\n\r\nexport default abstract class GenericManagementPage<\r\n  TPlatform extends GenericPlatform,\r\n  TTransaction extends GenericTransaction\r\n> extends ExtensionPage {\r\n  \r\n  // State management\r\n  protected platforms: TPlatform[] = [];\r\n  protected transactions: TTransaction[] = [];\r\n  loading = true;\r\n  protected submittingPlatform = false;\r\n  protected activeTab: string;\r\n  \r\n  // Abstract configuration - must be implemented by subclasses\r\n  protected abstract getConfig(): GenericManagementPageConfig<TPlatform, TTransaction>;\r\n  \r\n  constructor() {\r\n    super();\r\n    const config = this.getConfig();\r\n    this.activeTab = config.tabs[0]?.key || '';\r\n  }\r\n\r\n  oninit(vnode: Mithril.VnodeDOM) {\r\n    super.oninit(vnode);\r\n    this.loadData();\r\n  }\r\n\r\n  content() {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    const config = this.getConfig();\r\n\r\n    return (\r\n      <div className={`${config.extensionId}ManagementPage`}>\r\n        <div className=\"container\">\r\n          <h2>{config.pageTitle}</h2>\r\n          \r\n          {config.settingsComponent && (\r\n            <div className=\"SettingsSection\">\r\n              {m(config.settingsComponent, { \r\n                onSettingChange: this.saveSetting.bind(this) \r\n              })}\r\n            </div>\r\n          )}\r\n          \r\n          {config.tabs.length > 1 && (\r\n            <div className=\"AdminTabs\">\r\n              <div className=\"AdminTabs-nav\">\r\n                {config.tabs.map(tab => (\r\n                  <button \r\n                    key={tab.key}\r\n                    className={`AdminTabs-tab ${this.activeTab === tab.key ? 'active' : ''}`}\r\n                    onclick={() => { this.activeTab = tab.key; }}\r\n                  >\r\n                    {tab.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"AdminTabs-content\">\r\n                {this.renderActiveTabContent()}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {config.tabs.length === 1 && (\r\n            <div className=\"SingleTabContent\">\r\n              {this.renderActiveTabContent()}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected renderActiveTabContent(): Mithril.Children {\r\n    const config = this.getConfig();\r\n    const activeTab = config.tabs.find(tab => tab.key === this.activeTab);\r\n    \r\n    if (!activeTab) return null;\r\n\r\n    const props = {\r\n      // Common platform management props\r\n      platforms: this.platforms,\r\n      transactions: this.transactions,\r\n      submittingPlatform: this.submittingPlatform,\r\n      \r\n      // Platform management callbacks\r\n      onAddPlatform: this.addPlatform.bind(this),\r\n      onTogglePlatformStatus: this.togglePlatformStatus.bind(this),\r\n      onDeletePlatform: this.deletePlatform.bind(this),\r\n      \r\n      // Transaction management callbacks\r\n      ...(config.transactionOperations && {\r\n        onUpdateTransactionStatus: this.updateTransactionStatus.bind(this),\r\n      }),\r\n      \r\n      // Additional props from tab configuration\r\n      ...(activeTab.props ? activeTab.props() : {})\r\n    };\r\n\r\n    return m(activeTab.component, props);\r\n  }\r\n\r\n  // Generic platform management methods\r\n  protected async addPlatform(formData: any): Promise<void> {\r\n    if (this.submittingPlatform) return;\r\n\r\n    this.submittingPlatform = true;\r\n    const config = this.getConfig();\r\n\r\n    try {\r\n      await config.platformOperations.create(formData);\r\n      await this.loadPlatforms();\r\n    } catch (error) {\r\n      console.error('Error adding platform:', error);\r\n      // Error handling is done by the platform operations\r\n    } finally {\r\n      this.submittingPlatform = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  protected async togglePlatformStatus(platform: TPlatform): Promise<void> {\r\n    const config = this.getConfig();\r\n    try {\r\n      await config.platformOperations.toggleStatus(platform);\r\n      await this.loadPlatforms();\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error toggling platform status:', error);\r\n    }\r\n  }\r\n\r\n  protected deletePlatform(platform: TPlatform): void {\r\n    const config = this.getConfig();\r\n    const platformName = (typeof platform.name === 'function' ? platform.name() : platform.name) || 'Unknown Platform';\r\n    \r\n    app.modal.show(ConfirmModal, {\r\n      title: app.translator.trans(`${config.translations.platformPrefix}.delete_confirm_title`),\r\n      message: app.translator.trans(`${config.translations.platformPrefix}.delete_confirm_message`, { name: platformName }),\r\n      confirmText: app.translator.trans(`${config.translations.platformPrefix}.delete_confirm_button`),\r\n      cancelText: app.translator.trans(`${config.translations.platformPrefix}.delete_cancel_button`),\r\n      dangerous: true,\r\n      icon: 'fas fa-trash',\r\n      onConfirm: async () => {\r\n        try {\r\n          await config.platformOperations.delete(platform);\r\n          await this.loadPlatforms();\r\n          m.redraw();\r\n          \r\n          app.alerts.show(\r\n            { type: 'success', dismissible: true },\r\n            app.translator.trans(`${config.translations.platformPrefix}.delete_success`)\r\n          );\r\n        } catch (error) {\r\n          console.error('Error deleting platform:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans(`${config.translations.platformPrefix}.delete_error`)\r\n          );\r\n        }\r\n      },\r\n      onCancel: () => {\r\n        app.modal.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Generic transaction management methods\r\n  protected async updateTransactionStatus(transaction: TTransaction, status: string): Promise<void> {\r\n    const config = this.getConfig();\r\n    if (!config.transactionOperations) return;\r\n\r\n    try {\r\n      await config.transactionOperations.updateStatus(transaction, status);\r\n      await this.loadTransactions();\r\n      \r\n      const prefix = config.translations.transactionPrefix || config.translations.platformPrefix;\r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans(`${prefix}.${status}_success`)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating transaction:', error);\r\n      const prefix = config.translations.transactionPrefix || config.translations.platformPrefix;\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans(`${prefix}.update_error`)\r\n      );\r\n    }\r\n  }\r\n\r\n  // Data loading methods\r\n  protected async loadData(): Promise<void> {\r\n    try {\r\n      await this.loadPlatforms();\r\n      if (this.getConfig().transactionOperations) {\r\n        await this.loadTransactions();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  protected async loadPlatforms(): Promise<void> {\r\n    const config = this.getConfig();\r\n    try {\r\n      this.platforms = await config.platformOperations.load();\r\n      console.log('Loaded platforms:', this.platforms);\r\n    } catch (error) {\r\n      console.error('Error loading platforms:', error);\r\n      this.platforms = [];\r\n    }\r\n  }\r\n\r\n  protected async loadTransactions(): Promise<void> {\r\n    const config = this.getConfig();\r\n    if (!config.transactionOperations) return;\r\n\r\n    try {\r\n      this.transactions = await config.transactionOperations.load();\r\n      console.log('Loaded transactions:', this.transactions);\r\n    } catch (error) {\r\n      console.error('Error loading transactions:', error);\r\n      this.transactions = [];\r\n    }\r\n  }\r\n\r\n  // Settings management\r\n  protected async saveSetting(key: string, value: string): Promise<void> {\r\n    try {\r\n      await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/settings',\r\n        body: { [key]: value }\r\n      });\r\n      \r\n      // Update the forum attribute immediately so the UI reflects the change\r\n      app.forum.pushAttributes({ [key]: value });\r\n      \r\n    } catch (error) {\r\n      console.error('Error saving setting:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        'Failed to save setting'\r\n      );\r\n    }\r\n  }\r\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport type Mithril from 'mithril';\n\nexport interface GeneralSettingsSectionAttrs {\n  onSettingChange: (key: string, value: string) => void;\n}\n\nexport default class GeneralSettingsSection extends Component<GeneralSettingsSectionAttrs> {\n  view(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>General Settings</h3>\n        \n        <div className=\"Form\">\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('withdrawal.admin.settings.money_icon_url')}</label>\n            <input\n              type=\"url\"\n              className=\"FormControl\"\n              placeholder=\"https://i.mji.rip/2025/08/28/cd18932c68e9bbee9502b1fb6317cba9.png\"\n              value={app.forum.attribute('wusong8899-withdrawal.moneyIconUrl') || ''}\n              oninput={withAttr('value', (value: string) => \n                this.attrs.onSettingChange('wusong8899-withdrawal.moneyIconUrl', value)\n              )}\n            />\n            <small className=\"helpText\">{app.translator.trans('withdrawal.admin.settings.money_icon_url_help')}</small>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/common/app';\r\n\r\nexport interface ValidationError {\r\n  field: string;\r\n  message: string;\r\n}\r\n\r\nexport interface ValidationResult {\r\n  isValid: boolean;\r\n  errors: ValidationError[];\r\n  firstErrorMessage?: string;\r\n}\r\n\r\n/**\r\n * 通用表单验证工具\r\n * 统一提款和存款平台表单的验证逻辑\r\n */\r\nexport class FormValidator {\r\n  private errors: ValidationError[] = [];\r\n\r\n  /**\r\n   * 验证必填字段\r\n   */\r\n  required(value: any, fieldName: string, displayName?: string): this {\r\n    if (!value || (typeof value === 'string' && value.trim() === '')) {\r\n      this.errors.push({\r\n        field: fieldName,\r\n        message: `${displayName || fieldName} is required`\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 验证最小长度\r\n   */\r\n  minLength(value: string, minLength: number, fieldName: string, displayName?: string): this {\r\n    if (value && value.length < minLength) {\r\n      this.errors.push({\r\n        field: fieldName,\r\n        message: `${displayName || fieldName} must be at least ${minLength} characters`\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 验证数字范围\r\n   */\r\n  numberRange(value: string | number, min?: number, max?: number, fieldName?: string, displayName?: string): this {\r\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\r\n    \r\n    if (isNaN(numValue)) {\r\n      this.errors.push({\r\n        field: fieldName || 'number',\r\n        message: `${displayName || 'Value'} must be a valid number`\r\n      });\r\n      return this;\r\n    }\r\n\r\n    if (min !== undefined && numValue < min) {\r\n      this.errors.push({\r\n        field: fieldName || 'number',\r\n        message: `${displayName || 'Value'} must be at least ${min}`\r\n      });\r\n    }\r\n\r\n    if (max !== undefined && numValue > max) {\r\n      this.errors.push({\r\n        field: fieldName || 'number',\r\n        message: `${displayName || 'Value'} must be at most ${max}`\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 验证URL格式\r\n   */\r\n  url(value: string, fieldName: string, displayName?: string): this {\r\n    if (value && value.trim()) {\r\n      try {\r\n        const _url = new URL(value);\r\n        // URL is valid, no action needed\r\n        void _url; // Explicit void to indicate we don't need the result\r\n      } catch {\r\n        this.errors.push({\r\n          field: fieldName,\r\n          message: `${displayName || fieldName} must be a valid URL`\r\n        });\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 自定义验证规则\r\n   */\r\n  custom(condition: boolean, fieldName: string, message: string): this {\r\n    if (!condition) {\r\n      this.errors.push({\r\n        field: fieldName,\r\n        message\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 获取验证结果\r\n   */\r\n  getResult(): ValidationResult {\r\n    const isValid = this.errors.length === 0;\r\n    return {\r\n      isValid,\r\n      errors: this.errors,\r\n      firstErrorMessage: this.errors.length > 0 ? this.errors[0].message : undefined\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 重置验证状态\r\n   */\r\n  reset(): this {\r\n    this.errors = [];\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * 提款平台表单验证\r\n */\r\nexport function validateWithdrawalPlatform(data: {\r\n  name: string;\r\n  symbol: string;\r\n  network?: string;\r\n  minAmount: string;\r\n  maxAmount: string;\r\n  fee: string;\r\n  iconUrl?: string;\r\n}): ValidationResult {\r\n  const validator = new FormValidator();\r\n\r\n  validator\r\n    .required(data.name, 'name', 'Platform Name')\r\n    .required(data.symbol, 'symbol', 'Currency Symbol')\r\n    .minLength(data.symbol, 1, 'symbol', 'Currency Symbol')\r\n    .numberRange(data.minAmount, 0, undefined, 'minAmount', 'Minimum Amount')\r\n    .numberRange(data.fee, 0, undefined, 'fee', 'Fee');\r\n\r\n  if (data.maxAmount) {\r\n    validator.numberRange(data.maxAmount, parseFloat(data.minAmount) || 0, undefined, 'maxAmount', 'Maximum Amount');\r\n  }\r\n\r\n  if (data.iconUrl) {\r\n    validator.url(data.iconUrl, 'iconUrl', 'Icon URL');\r\n  }\r\n\r\n  return validator.getResult();\r\n}\r\n\r\n/**\r\n * 存款平台表单验证\r\n */\r\nexport function validateDepositPlatform(data: {\r\n  name: string;\r\n  symbol: string;\r\n  network?: string;\r\n  address: string;\r\n  minAmount: string;\r\n  maxAmount: string;\r\n  qrCodeImageUrl?: string;\r\n  iconUrl?: string;\r\n}): ValidationResult {\r\n  const validator = new FormValidator();\r\n\r\n  validator\r\n    .required(data.name, 'name', 'Platform Name')\r\n    .required(data.symbol, 'symbol', 'Currency Symbol')\r\n    .required(data.address, 'address', 'Deposit Address')\r\n    .minLength(data.symbol, 1, 'symbol', 'Currency Symbol')\r\n    .minLength(data.address, 10, 'address', 'Deposit Address');\r\n\r\n  if (data.minAmount) {\r\n    validator.numberRange(data.minAmount, 0, undefined, 'minAmount', 'Minimum Amount');\r\n  }\r\n\r\n  if (data.maxAmount) {\r\n    const minAmountNum = parseFloat(data.minAmount) || 0;\r\n    validator.numberRange(data.maxAmount, minAmountNum, undefined, 'maxAmount', 'Maximum Amount');\r\n  }\r\n\r\n  if (data.qrCodeImageUrl) {\r\n    validator.url(data.qrCodeImageUrl, 'qrCodeImageUrl', 'QR Code Image URL');\r\n  }\r\n\r\n  if (data.iconUrl) {\r\n    validator.url(data.iconUrl, 'iconUrl', 'Icon URL');\r\n  }\r\n\r\n  return validator.getResult();\r\n}\r\n\r\n/**\r\n * 显示验证错误警告\r\n */\r\nexport function showValidationErrors(result: ValidationResult): void {\r\n  if (!result.isValid && result.firstErrorMessage) {\r\n    app.alerts.show(\r\n      { type: 'error', dismissible: true },\r\n      result.firstErrorMessage\r\n    );\r\n  }\r\n}\r\n\r\n","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\nimport { PlatformFormData } from '../types/AdminTypes';\nimport { FormValidator } from '../../../common/utils/formValidators';\nimport m from 'mithril';\n\nexport interface AddPlatformFormAttrs {\n  onSubmit: (formData: PlatformFormData) => Promise<void>;\n  submitting: boolean;\n}\n\nexport default class AddPlatformForm extends Component<AddPlatformFormAttrs> {\n  private name = Stream('');\n  private symbol = Stream('');\n  private network = Stream('');\n  private minAmount = Stream('');\n  private maxAmount = Stream('');\n  private fee = Stream('');\n  private iconUrl = Stream('');\n  private iconClass = Stream('');\n\n  view(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalManagementPage-addPlatform\">\n        <div className=\"Form-group\">\n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.name')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder={app.translator.trans('withdrawal.admin.platforms.add_placeholder')}\n                bidi={this.name}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.symbol')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"BTC, ETH, USDT...\"\n                bidi={this.symbol}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.network')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"TRC20, ERC20, BSC... (optional)\"\n                bidi={this.network}\n              />\n              <small className=\"helpText\">{app.translator.trans('withdrawal.admin.platforms.network_help')}</small>\n            </div>\n          </div>\n          \n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.min_amount')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"0.001\"\n                bidi={this.minAmount}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.max_amount')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"10.0\"\n                bidi={this.maxAmount}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.fee')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"0.0005\"\n                bidi={this.fee}\n              />\n            </div>\n          </div>\n          \n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.icon_url')}</label>\n              <input\n                type=\"url\"\n                className=\"FormControl\"\n                placeholder=\"https://example.com/icon.png\"\n                bidi={this.iconUrl}\n              />\n              <small className=\"helpText\">{app.translator.trans('withdrawal.admin.platforms.icon_url_help')}</small>\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.icon_class')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"fas fa-coins\"\n                bidi={this.iconClass}\n              />\n              <small className=\"helpText\">{app.translator.trans('withdrawal.admin.platforms.icon_class_help')}</small>\n            </div>\n          </div>\n          \n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary\"\n              loading={this.attrs.submitting}\n              disabled={this.attrs.submitting}\n              onclick={this.handleSubmit.bind(this)}\n            >\n              {app.translator.trans('withdrawal.admin.platforms.add_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private validateForm(): boolean {\n    const validator = new FormValidator();\n    \n    try {\n      // Fixed: Convert NestedStringArray to string for FormValidator\n      const nameLabel = app.translator.trans('withdrawal.admin.platforms.name').toString();\n      const symbolLabel = app.translator.trans('withdrawal.admin.platforms.symbol').toString();\n      const minAmountLabel = app.translator.trans('withdrawal.admin.platforms.min_amount').toString();\n      const maxAmountLabel = app.translator.trans('withdrawal.admin.platforms.max_amount').toString();\n      const feeLabel = app.translator.trans('withdrawal.admin.platforms.fee').toString();\n      \n      validator\n        .required(this.name(), 'name', nameLabel)\n        .required(this.symbol(), 'symbol', symbolLabel)\n        .numberRange(this.minAmount(), 0, undefined, 'minAmount', minAmountLabel)\n        .numberRange(this.maxAmount(), 0, undefined, 'maxAmount', maxAmountLabel)\n        .numberRange(this.fee(), 0, undefined, 'fee', feeLabel);\n\n      // Custom validation for max >= min\n      const minVal = parseFloat(this.minAmount());\n      const maxVal = parseFloat(this.maxAmount());\n      if (maxVal < minVal) {\n        const errorMessage = app.translator.trans('withdrawal.admin.platforms.max_min_error').toString();\n        validator.custom(false, 'maxAmount', errorMessage);\n      }\n\n      // Optional URL validation\n      if (this.iconUrl() && this.iconUrl().trim()) {\n        const iconUrlLabel = app.translator.trans('withdrawal.admin.platforms.icon_url').toString();\n        validator.url(this.iconUrl(), 'iconUrl', iconUrlLabel);\n      }\n\n      const result = validator.getResult();\n      \n      if (!result.isValid && result.firstErrorMessage) {\n        app.alerts.show({ type: 'error', dismissible: true }, result.firstErrorMessage);\n      }\n\n      return result.isValid;\n    } catch (error) {\n      console.error('Form validation error:', error);\n      app.alerts.show({ type: 'error', dismissible: true }, 'Validation failed');\n      return false;\n    }\n  }\n\n  private async handleSubmit(): Promise<void> {\n    if (this.attrs.submitting) return;\n\n    if (!this.validateForm()) return;\n\n    const formData: PlatformFormData = {\n      name: this.name(),\n      symbol: this.symbol(),\n      network: this.network(),\n      minAmount: this.minAmount(),\n      maxAmount: this.maxAmount(),\n      fee: this.fee(),\n      iconUrl: this.iconUrl(),\n      iconClass: this.iconClass()\n    };\n\n    try {\n      await this.attrs.onSubmit(formData);\n      this.clearForm();\n    } catch {\n      // Error handling is done in parent component\n    }\n  }\n\n  private clearForm(): void {\n    this.name('');\n    this.symbol('');\n    this.network('');\n    this.minAmount('');\n    this.maxAmount('');\n    this.fee('');\n    this.iconUrl('');\n    this.iconClass('');\n    m.redraw();\n  }\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\n\r\n// Generic platform interface that can represent both withdrawal and deposit platforms\r\ninterface GenericPlatform {\r\n  id?: () => string | number;\r\n  name?: () => string;\r\n  symbol?: () => string;\r\n  network?: () => string;\r\n  displayName?: () => string;\r\n  minAmount?: () => number;\r\n  maxAmount?: () => number;\r\n  fee?: () => number;\r\n  address?: () => string;\r\n  iconUrl?: () => string;\r\n  iconClass?: () => string;\r\n  isActive?: () => boolean;\r\n  createdAt?: () => Date;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface GenericPlatformListItemAttrs {\r\n  platform: GenericPlatform;\r\n  type: 'withdrawal' | 'deposit';\r\n  onToggleStatus: (platform?: GenericPlatform) => Promise<void>;\r\n  onDelete: (platform?: GenericPlatform) => Promise<void>;\r\n  style?: 'card' | 'list';\r\n}\r\n\r\nexport default class GenericPlatformListItem extends Component<GenericPlatformListItemAttrs> {\r\n  view(vnode: Mithril.Vnode<GenericPlatformListItemAttrs>): Mithril.Children {\r\n    const { platform, type, onToggleStatus, onDelete, style = 'card' } = vnode.attrs;\r\n\r\n    if (style === 'card') {\r\n      return this.renderCardStyle(platform, type, onToggleStatus, onDelete);\r\n    } else {\r\n      return this.renderListStyle(platform, type, onToggleStatus, onDelete);\r\n    }\r\n  }\r\n\r\n  private renderCardStyle(\r\n    platform: GenericPlatform,\r\n    type: string,\r\n    onToggleStatus: (platform?: GenericPlatform) => Promise<void>,\r\n    onDelete: (platform?: GenericPlatform) => Promise<void>\r\n  ): Mithril.Children {\r\n    const platformData = this.extractPlatformData(platform);\r\n    const translationPrefix = type === 'withdrawal' ? 'withdrawal.admin.platforms' : 'withdrawal.admin.deposit.platforms';\r\n\r\n    return (\r\n      <div key={platformData.id} className={`${type}Platform`}>\r\n        <div className={`${type}Platform-info`}>\r\n          <div className={`${type}Platform-primary`}>\r\n            <span className={`${type}Platform-status ${platformData.isActive ? 'active' : 'inactive'}`}>\r\n              {platformData.isActive ? '🟢' : '🔴'}\r\n            </span>\r\n            <span className={`${type}Platform-name`}>{platformData.displayName}</span>\r\n            <span className=\"platform-id\">#{platformData.id}</span>\r\n            {platformData.network && <span className={`${type}Platform-network`}>({platformData.network})</span>}\r\n          </div>\r\n          <div className={`${type}Platform-details`}>\r\n            <span className={`${type}Platform-amounts`}>\r\n              Min: {platformData.minAmount} | Max: {platformData.maxAmount}\r\n              {` | Fee: ${platformData.fee}`}\r\n              {type === 'deposit' && ` | Address: ${platformData.address ? 'Static' : 'Template'}`}\r\n            </span>\r\n            {platformData.createdDate && (\r\n              <span className={`${type}Platform-date`}>{platformData.dateDisplay}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={`${type}Platform-actions`}>\r\n          <Button\r\n            className={`Button ${platformData.isActive ? 'Button--secondary' : 'Button--primary'}`}\r\n            onclick={() => onToggleStatus(platform)}\r\n          >\r\n            {app.translator.trans(`${translationPrefix}.${platformData.isActive ? 'disable' : 'enable'}`)}\r\n          </Button>\r\n          <Button\r\n            className=\"Button Button--danger\"\r\n            onclick={() => onDelete(platform)}\r\n          >\r\n            {app.translator.trans(`${translationPrefix}.delete`)}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderListStyle(\r\n    platform: GenericPlatform,\r\n    type: string,\r\n    onToggleStatus: (platform?: GenericPlatform) => Promise<void>,\r\n    onDelete: (platform?: GenericPlatform) => Promise<void>\r\n  ): Mithril.Children {\r\n    const platformData = this.extractPlatformData(platform);\r\n    const translationPrefix = type === 'withdrawal' ? 'withdrawal.admin.platforms' : 'withdrawal.admin.deposit.platforms';\r\n\r\n    return (\r\n      <div className={`${type}PlatformListItem`}>\r\n        <div className={`${type}PlatformListItem-content`}>\r\n          <div className={`${type}PlatformListItem-icon`}>\r\n            {this.renderPlatformIcon(platform)}\r\n          </div>\r\n          \r\n          <div className={`${type}PlatformListItem-info`}>\r\n            <div className={`${type}PlatformListItem-primary`}>\r\n              <strong>{platformData.name}</strong>\r\n              <span className={`${type}PlatformListItem-displayName`}>\r\n                {platformData.symbol}\r\n                {platformData.network && ` (${platformData.network})`}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={`${type}PlatformListItem-details`}>\r\n              <span className={`${type}PlatformListItem-detail`}>\r\n                Min: {platformData.minAmount} {platformData.symbol}\r\n              </span>\r\n              {platformData.maxAmount && (\r\n                <span className={`${type}PlatformListItem-detail`}>\r\n                  Max: {platformData.maxAmount} {platformData.symbol}\r\n                </span>\r\n              )}\r\n              {platformData.fee && (\r\n                <span className={`${type}PlatformListItem-detail`}>\r\n                  Fee: {platformData.fee} {platformData.symbol}\r\n                </span>\r\n              )}\r\n              {type === 'deposit' && (\r\n                <span className={`${type}PlatformListItem-detail`}>\r\n                  Address: {platformData.address ? 'Static' : 'Template'}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={`${type}PlatformListItem-actions`}>\r\n            <Switch \r\n              state={platformData.isActive} \r\n              onchange={async () => {\r\n                await onToggleStatus(platform);\r\n                m.redraw();\r\n              }}\r\n            >\r\n              {platformData.isActive \r\n                ? app.translator.trans(`${translationPrefix}.active`)\r\n                : app.translator.trans(`${translationPrefix}.inactive`)\r\n              }\r\n            </Switch>\r\n            \r\n            <Button\r\n              className=\"Button Button--icon Button--flat\"\r\n              icon=\"fas fa-trash\"\r\n              onclick={async () => {\r\n                await onDelete(platform);\r\n                m.redraw();\r\n              }}\r\n              title={app.translator.trans(`${translationPrefix}.delete`)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private extractPlatformData(platform: GenericPlatform) {\r\n    // Handle both Model instances and plain objects\r\n    const id = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n    const name = (typeof platform.name === 'function' ? platform.name() : platform.attributes?.name) || 'Unknown Platform';\r\n    const symbol = (typeof platform.symbol === 'function' ? platform.symbol() : platform.attributes?.symbol) || '';\r\n    const network = (typeof platform.network === 'function' ? platform.network() : platform.attributes?.network) || null;\r\n    const displayName = (typeof platform.displayName === 'function' ? platform.displayName() : platform.attributes?.displayName) || name;\r\n    const minAmount = (typeof platform.minAmount === 'function' ? platform.minAmount() : platform.attributes?.minAmount) || 'N/A';\r\n    const maxAmount = (typeof platform.maxAmount === 'function' ? platform.maxAmount() : platform.attributes?.maxAmount) || 'N/A';\r\n    const fee = (typeof platform.fee === 'function' ? platform.fee() : platform.attributes?.fee) || 'N/A';\r\n    const address = (typeof platform.address === 'function' ? platform.address() : platform.attributes?.address) || null;\r\n    const isActive = (typeof platform.isActive === 'function' ? platform.isActive() : platform.attributes?.isActive) ?? false;\r\n    const createdDate = (typeof platform.createdAt === 'function' ? platform.createdAt() : platform.attributes?.createdAt) || null;\r\n    \r\n    let dateDisplay: Mithril.Children = 'N/A';\r\n    if (createdDate) {\r\n      try {\r\n        dateDisplay = humanTime(createdDate);\r\n      } catch (e) {\r\n        console.error('Error formatting date:', e);\r\n        dateDisplay = 'Invalid Date';\r\n      }\r\n    }\r\n\r\n    return {\r\n      id,\r\n      name,\r\n      symbol,\r\n      network,\r\n      displayName,\r\n      minAmount,\r\n      maxAmount,\r\n      fee,\r\n      address,\r\n      isActive,\r\n      createdDate,\r\n      dateDisplay\r\n    };\r\n  }\r\n\r\n  private renderPlatformIcon(platform: GenericPlatform): Mithril.Children {\r\n    const iconUrl = typeof platform.iconUrl === 'function' ? platform.iconUrl() : platform.attributes?.iconUrl;\r\n    const iconClass = typeof platform.iconClass === 'function' ? platform.iconClass() : platform.attributes?.iconClass;\r\n    const symbol = typeof platform.symbol === 'function' ? platform.symbol() : platform.attributes?.symbol;\r\n\r\n    if (iconUrl) {\r\n      return <img src={iconUrl} alt={symbol} className=\"PlatformListItem-img\" />;\r\n    }\r\n\r\n    if (iconClass) {\r\n      return icon(iconClass);\r\n    }\r\n\r\n    // Default currency icons - now uses generic class names that work for both types\r\n    switch (symbol) {\r\n      case 'USDT':\r\n        return <span className=\"PlatformListItem-currencyIcon usdt\">₮</span>;\r\n      case 'USDC':\r\n        return <span className=\"PlatformListItem-currencyIcon usdc\">$</span>;\r\n      case 'BTC':\r\n        return <span className=\"PlatformListItem-currencyIcon btc\">₿</span>;\r\n      case 'ETH':\r\n        return <span className=\"PlatformListItem-currencyIcon eth\">Ξ</span>;\r\n      default:\r\n        return icon('fas fa-coins');\r\n    }\r\n  }\r\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport { WithdrawalPlatform, PlatformFormData } from '../types/AdminTypes';\nimport AddPlatformForm from '../forms/AddPlatformForm';\nimport GenericPlatformListItem from '../shared/GenericPlatformListItem';\n\nexport interface PlatformManagementSectionAttrs {\n  platforms: WithdrawalPlatform[];\n  submittingPlatform: boolean;\n  onAddPlatform: (formData: PlatformFormData) => Promise<void>;\n  onTogglePlatformStatus: (platform: WithdrawalPlatform) => Promise<void>;\n  onDeletePlatform: (platform: WithdrawalPlatform) => void;\n}\n\nexport default class PlatformManagementSection extends Component<PlatformManagementSectionAttrs> {\n  view(): Mithril.Children {\n    const { platforms, submittingPlatform, onAddPlatform, onTogglePlatformStatus, onDeletePlatform } = this.attrs;\n\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>{app.translator.trans('withdrawal.admin.platforms.title')}</h3>\n        \n        <AddPlatformForm \n          onSubmit={onAddPlatform}\n          submitting={submittingPlatform}\n        />\n\n        <div className=\"WithdrawalManagementPage-platformList\">\n          {platforms.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.platforms.empty')}</p>\n          ) : (\n            platforms.map((platform) => (\n              <GenericPlatformListItem\n                key={platform.id?.() ?? platform.id ?? Math.random()}\n                platform={platform}\n                type=\"withdrawal\"\n                style=\"card\"\n                onToggleStatus={onTogglePlatformStatus}\n                onDelete={onDeletePlatform}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport type Mithril from 'mithril';\nimport { WithdrawalRequest } from '../types/AdminTypes';\n\nexport interface WithdrawalRequestItemAttrs {\n  request: WithdrawalRequest;\n  showActions: boolean;\n  showDelete?: boolean;\n  onUpdateStatus?: (request: WithdrawalRequest, status: string) => Promise<void>;\n  onDelete?: (request: WithdrawalRequest) => void;\n}\n\nexport default class WithdrawalRequestItem extends Component<WithdrawalRequestItemAttrs> {\n  view(): Mithril.Children {\n    const request = this.attrs.request;\n    const { showActions, showDelete = false } = this.attrs;\n    \n    // Handle Flarum Model instances\n    const requestId = typeof request.id === 'function' ? request.id() : request.id;\n    const amount = typeof request.amount === 'function' ? request.amount() : (request.attributes?.amount || 0);\n    const status = typeof request.status === 'function' ? request.status() : (request.attributes?.status || 'pending');\n    const accountDetails = typeof request.accountDetails === 'function' ? request.accountDetails() : \n      (request.attributes?.accountDetails || request.attributes?.account_details || 'N/A');\n    const createdDate = typeof request.createdAt === 'function' ? request.createdAt() : (request.attributes?.createdAt || null);\n    \n    // Get user info\n    let userName = 'Unknown User';\n    if (typeof request.user === 'function') {\n      const userData = request.user();\n      if (userData && typeof userData.displayName === 'function') {\n        userName = userData.displayName();\n      } else if (userData && userData.attributes?.displayName) {\n        userName = userData.attributes.displayName;\n      }\n    }\n    \n    // Get platform info - simplified approach using Flarum Model relationships\n    let platformName = 'Unknown Platform';\n    let platformSymbol = 'N/A';\n    \n    if (typeof request.platform === 'function') {\n      const platform = request.platform();\n      if (platform) {\n        platformName = typeof platform.name === 'function' ? platform.name() : (platform.attributes?.name || 'Unknown Platform');\n        platformSymbol = typeof platform.symbol === 'function' ? platform.symbol() : (platform.attributes?.symbol || 'N/A');\n      }\n    }\n    \n    const statusClass = `status-${status}`;\n    \n    let dateDisplay: Mithril.Children = 'N/A';\n    if (createdDate) {\n      try {\n        dateDisplay = humanTime(createdDate);\n      } catch (e) {\n        console.error('Error formatting request date:', e);\n        dateDisplay = 'Invalid Date';\n      }\n    }\n\n    return (\n      <div key={requestId} className={`WithdrawalRequest ${statusClass}`}>\n        <div className=\"WithdrawalRequest-info\">\n          <div className=\"WithdrawalRequest-user\">\n            <strong>{userName}</strong>\n            <span className=\"request-id\">#{requestId}</span>\n          </div>\n          <div className=\"WithdrawalRequest-details\">\n            <span className=\"amount\">{amount}</span>\n            <span className=\"platform\">{platformName}</span>\n            <span className=\"symbol\">{platformSymbol}</span>\n            <span className=\"date\">{dateDisplay}</span>\n          </div>\n          <div className=\"WithdrawalRequest-account\">\n            <strong>{app.translator.trans('withdrawal.admin.requests.account_details')}:</strong>\n            <span>{accountDetails}</span>\n          </div>\n          <div className=\"WithdrawalRequest-status\">\n            <span className={`Badge Badge--${status}`}>\n              {app.translator.trans(`withdrawal.admin.requests.status.${status}`)}\n            </span>\n          </div>\n        </div>\n        \n        {(showActions || showDelete) && (\n          <div className=\"WithdrawalRequest-actions\">\n            {showActions && this.attrs.onUpdateStatus && (\n              <>\n                <Button\n                  className=\"Button Button--primary\"\n                  onclick={() => this.attrs.onUpdateStatus!(request, 'approved')}\n                >\n                  {app.translator.trans('withdrawal.admin.requests.approve')}\n                </Button>\n                <Button\n                  className=\"Button Button--danger\"\n                  onclick={() => this.attrs.onUpdateStatus!(request, 'rejected')}\n                >\n                  {app.translator.trans('withdrawal.admin.requests.reject')}\n                </Button>\n              </>\n            )}\n            {this.attrs.onDelete && (\n              <Button\n                className=\"Button Button--link\"\n                onclick={() => this.attrs.onDelete!(request)}\n              >\n                <i className=\"fas fa-trash\"></i>\n                {app.translator.trans('withdrawal.admin.requests.delete')}\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport { WithdrawalRequest } from '../types/AdminTypes';\nimport WithdrawalRequestItem from '../items/WithdrawalRequestItem';\n\nexport interface RequestManagementSectionAttrs {\n  requests: WithdrawalRequest[];\n  onUpdateRequestStatus: (request: WithdrawalRequest, status: string) => Promise<void>;\n  onDeleteRequest: (request: WithdrawalRequest) => void;\n}\n\nexport default class RequestManagementSection extends Component<RequestManagementSectionAttrs> {\n  view(): Mithril.Children {\n    const { requests, onUpdateRequestStatus, onDeleteRequest } = this.attrs;\n\n    const pendingRequests = requests.filter(r => {\n      const status = (typeof r.status === 'function' ? r.status() : r.attributes?.status) || 'pending';\n      return status === 'pending';\n    });\n    \n    const processedRequests = requests.filter(r => {\n      const status = (typeof r.status === 'function' ? r.status() : r.attributes?.status) || 'pending';\n      return status !== 'pending';\n    });\n\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>{app.translator.trans('withdrawal.admin.requests.title')}</h3>\n        \n        <div className=\"WithdrawalManagementPage-pendingRequests\">\n          <h4>{app.translator.trans('withdrawal.admin.requests.pending_title')}</h4>\n          {pendingRequests.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.requests.no_pending')}</p>\n          ) : (\n            pendingRequests.map((request) => (\n              <WithdrawalRequestItem\n                key={typeof request.id === 'function' ? request.id() : request.id}\n                request={request}\n                showActions={true}\n                showDelete={true}\n                onUpdateStatus={onUpdateRequestStatus}\n                onDelete={onDeleteRequest}\n              />\n            ))\n          )}\n        </div>\n\n        <div className=\"WithdrawalManagementPage-processedRequests\">\n          <h4>{app.translator.trans('withdrawal.admin.requests.processed_title')}</h4>\n          {processedRequests.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.requests.no_processed')}</p>\n          ) : (\n            processedRequests.map((request) => (\n              <WithdrawalRequestItem\n                key={typeof request.id === 'function' ? request.id() : request.id}\n                request={request}\n                showActions={false}\n                showDelete={true}\n                onDelete={onDeleteRequest}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\nimport ConfirmModal from '../../../common/components/shared/ConfirmModal';\r\n\r\ninterface DepositRecord {\r\n  id(): string | number;\r\n  userId(): number;\r\n  platformId(): number;\r\n  platformAccount(): string;\r\n  realName?(): string;\r\n  amount(): number;\r\n  depositTime(): Date;\r\n  screenshotUrl?(): string;\r\n  userMessage?(): string;\r\n  status(): string;\r\n  processedAt?(): Date;\r\n  processedBy?(): number;\r\n  adminNotes?(): string;\r\n  creditedAmount?(): number;\r\n  createdAt(): Date;\r\n  updatedAt(): Date;\r\n  user?(): any;\r\n  platform?(): any;\r\n  processedByUser?(): any;\r\n  isPending(): boolean;\r\n  isApproved(): boolean;\r\n  isRejected(): boolean;\r\n}\r\n\r\ninterface DepositRecordManagementSectionAttrs {\r\n  records: DepositRecord[];\r\n  platforms: any[];\r\n  loading?: boolean;\r\n  onApproveRecord: (record: DepositRecord, creditedAmount?: number, notes?: string) => Promise<void>;\r\n  onRejectRecord: (record: DepositRecord, reason: string) => Promise<void>;\r\n  onDeleteRecord: (record: DepositRecord) => Promise<void>;\r\n}\r\n\r\ninterface DepositRecordManagementSectionState {\r\n  processingRecords: Set<string | number>;\r\n}\r\n\r\nexport default class DepositRecordManagementSection extends Component<\r\n  DepositRecordManagementSectionAttrs,\r\n  DepositRecordManagementSectionState\r\n> {\r\n  public state: DepositRecordManagementSectionState = {\r\n    processingRecords: new Set()\r\n  };\r\n\r\n  view(vnode: Mithril.Vnode<DepositRecordManagementSectionAttrs>): Mithril.Children {\r\n    const { records, platforms, loading } = vnode.attrs;\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className=\"DepositRecordManagementSection\">\r\n          <div className=\"DepositRecordManagementSection-header\">\r\n            <h3>{app.translator.trans('withdrawal.admin.deposit.records.title')}</h3>\r\n          </div>\r\n          <LoadingIndicator />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"DepositRecordManagementSection\">\r\n        <div className=\"DepositRecordManagementSection-header\">\r\n          <h3>{app.translator.trans('withdrawal.admin.deposit.records.title')}</h3>\r\n          <div className=\"DepositRecordManagementSection-stats\">\r\n            <span className=\"DepositRecordManagementSection-count\">\r\n              {app.translator.trans('withdrawal.admin.deposit.records.total_count', {\r\n                count: records.length\r\n              })}\r\n            </span>\r\n            <span className=\"DepositRecordManagementSection-pending\">\r\n              {app.translator.trans('withdrawal.admin.deposit.records.pending_count', {\r\n                count: records.filter(r => r.isPending()).length\r\n              })}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"DepositRecordManagementSection-content\">\r\n          {records.length === 0 ? (\r\n            <div className=\"DepositRecordManagementSection-empty\">\r\n              <div className=\"DepositRecordManagementSection-emptyIcon\">\r\n                {icon('fas fa-receipt')}\r\n              </div>\r\n              <h4>{app.translator.trans('withdrawal.admin.deposit.records.empty.title')}</h4>\r\n              <p>{app.translator.trans('withdrawal.admin.deposit.records.empty.description')}</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"DepositRecordManagementSection-list\">\r\n              {records.map(record => this.renderRecord(record, platforms, vnode.attrs))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRecord(\r\n    record: DepositRecord,\r\n    platforms: any[],\r\n    attrs: DepositRecordManagementSectionAttrs\r\n  ): Mithril.Children {\r\n    const recordId = record.id();\r\n    const isProcessing = this.state.processingRecords.has(recordId);\r\n    const platform = this.findPlatform(platforms, record.platformId());\r\n    const user = record.user?.();\r\n    const status = record.status();\r\n    const depositTime = record.depositTime();\r\n    const createdAt = record.createdAt();\r\n\r\n    return (\r\n      <div key={`record-${recordId}`} className={`DepositRecordItem status-${status}`}>\r\n        <div className=\"DepositRecordItem-header\">\r\n          <div className=\"DepositRecordItem-user\">\r\n            <span className=\"DepositRecordItem-username\">\r\n              {user?.displayName?.() || 'Unknown User'}\r\n            </span>\r\n            <span className=\"DepositRecordItem-userId\">\r\n              ID: {record.userId()}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"DepositRecordItem-amount\">\r\n            <span className=\"DepositRecordItem-amountValue\">\r\n              {record.amount()} {platform?.symbol?.() || ''}\r\n            </span>\r\n            <div className={`DepositRecordItem-status status-${this.getStatusColor(status)}`}>\r\n              {this.renderStatusIcon(status)}\r\n              {this.getStatusText(status)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"DepositRecordItem-details\">\r\n          <div className=\"DepositRecordItem-row\">\r\n            <span className=\"DepositRecordItem-label\">Platform:</span>\r\n            <span className=\"DepositRecordItem-value\">\r\n              {platform?.name?.() || 'Unknown Platform'} {platform?.network?.() ? `(${platform.network()})` : ''}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"DepositRecordItem-row\">\r\n            <span className=\"DepositRecordItem-label\">Platform Account:</span>\r\n            <span className=\"DepositRecordItem-value\">{record.platformAccount()}</span>\r\n          </div>\r\n          \r\n          {record.realName?.() && (\r\n            <div className=\"DepositRecordItem-row\">\r\n              <span className=\"DepositRecordItem-label\">Real Name:</span>\r\n              <span className=\"DepositRecordItem-value\">{record.realName()}</span>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"DepositRecordItem-row\">\r\n            <span className=\"DepositRecordItem-label\">Deposit Time:</span>\r\n            <span className=\"DepositRecordItem-value\">\r\n              {depositTime.toLocaleDateString()} {depositTime.toLocaleTimeString()}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"DepositRecordItem-row\">\r\n            <span className=\"DepositRecordItem-label\">Submitted:</span>\r\n            <span className=\"DepositRecordItem-value\">\r\n              {humanTime(createdAt)}\r\n            </span>\r\n          </div>\r\n          \r\n          {record.userMessage?.() && (\r\n            <div className=\"DepositRecordItem-row\">\r\n              <span className=\"DepositRecordItem-label\">Message:</span>\r\n              <span className=\"DepositRecordItem-value\">{record.userMessage()}</span>\r\n            </div>\r\n          )}\r\n          \r\n          {record.screenshotUrl?.() && (\r\n            <div className=\"DepositRecordItem-row\">\r\n              <span className=\"DepositRecordItem-label\">Screenshot:</span>\r\n              <a\r\n                href={record.screenshotUrl()}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"DepositRecordItem-link\"\r\n              >\r\n                View Screenshot {icon('fas fa-external-link-alt')}\r\n              </a>\r\n            </div>\r\n          )}\r\n\r\n          {record.processedAt?.() && (\r\n            <div className=\"DepositRecordItem-processed\">\r\n              <div className=\"DepositRecordItem-row\">\r\n                <span className=\"DepositRecordItem-label\">Processed:</span>\r\n                <span className=\"DepositRecordItem-value\">\r\n                  {humanTime(record.processedAt())}\r\n                </span>\r\n              </div>\r\n              \r\n              {record.creditedAmount?.() && record.creditedAmount() !== record.amount() && (\r\n                <div className=\"DepositRecordItem-row\">\r\n                  <span className=\"DepositRecordItem-label\">Credited Amount:</span>\r\n                  <span className=\"DepositRecordItem-value\">\r\n                    {record.creditedAmount()} {platform?.symbol?.() || ''}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              \r\n              {record.adminNotes?.() && (\r\n                <div className=\"DepositRecordItem-row\">\r\n                  <span className=\"DepositRecordItem-label\">Admin Notes:</span>\r\n                  <span className=\"DepositRecordItem-value\">{record.adminNotes()}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {status === 'pending' && (\r\n          <div className=\"DepositRecordItem-actions\">\r\n            <Button\r\n              className=\"Button Button--primary DepositRecordItem-approveButton\"\r\n              onclick={() => this.handleApprove(record, attrs)}\r\n              loading={isProcessing}\r\n              disabled={isProcessing}\r\n            >\r\n              {app.translator.trans('withdrawal.admin.deposit.records.approve')}\r\n            </Button>\r\n            \r\n            <Button\r\n              className=\"Button Button--danger DepositRecordItem-rejectButton\"\r\n              onclick={() => this.handleReject(record, attrs)}\r\n              loading={isProcessing}\r\n              disabled={isProcessing}\r\n            >\r\n              {app.translator.trans('withdrawal.admin.deposit.records.reject')}\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"DepositRecordItem-adminActions\">\r\n          <Button\r\n            className=\"Button Button--link DepositRecordItem-deleteButton\"\r\n            onclick={() => this.handleDelete(record, attrs)}\r\n            disabled={isProcessing}\r\n          >\r\n            {icon('fas fa-trash')}\r\n            {app.translator.trans('withdrawal.admin.deposit.records.delete')}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private findPlatform(platforms: any[], platformId: number): any | null {\r\n    return platforms.find(p => {\r\n      const id = typeof p.id === 'function' ? p.id() : p.id;\r\n      return parseInt(id) === platformId;\r\n    }) || null;\r\n  }\r\n\r\n  private getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'warning';\r\n      case 'approved':\r\n        return 'success';\r\n      case 'rejected':\r\n        return 'danger';\r\n      default:\r\n        return 'secondary';\r\n    }\r\n  }\r\n\r\n  private renderStatusIcon(status: string): Mithril.Children {\r\n    switch (status) {\r\n      case 'pending':\r\n        return icon('fas fa-clock');\r\n      case 'approved':\r\n        return icon('fas fa-check-circle');\r\n      case 'rejected':\r\n        return icon('fas fa-times-circle');\r\n      default:\r\n        return icon('fas fa-question-circle');\r\n    }\r\n  }\r\n\r\n  private getStatusText(status: string): string {\r\n    switch (status) {\r\n      case 'pending':\r\n        return app.translator.trans('withdrawal.admin.deposit.records.status.pending').toString();\r\n      case 'approved':\r\n        return app.translator.trans('withdrawal.admin.deposit.records.status.approved').toString();\r\n      case 'rejected':\r\n        return app.translator.trans('withdrawal.admin.deposit.records.status.rejected').toString();\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n\r\n  private async handleApprove(record: DepositRecord, attrs: DepositRecordManagementSectionAttrs): Promise<void> {\r\n    const recordId = record.id();\r\n    const defaultAmount = record.amount();\r\n\r\n    // Simple approval - could be enhanced with a modal for custom amounts/notes\r\n    const creditedAmount = parseFloat(\r\n      prompt(\r\n        app.translator.trans('withdrawal.admin.deposit.records.approve_prompt', {\r\n          amount: defaultAmount\r\n        }).toString(),\r\n        defaultAmount.toString()\r\n      ) || defaultAmount.toString()\r\n    );\r\n\r\n    const notes = prompt(\r\n      app.translator.trans('withdrawal.admin.deposit.records.approve_notes_prompt').toString()\r\n    );\r\n\r\n    if (isNaN(creditedAmount) || creditedAmount <= 0) {\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.records.invalid_amount')\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.state.processingRecords.add(recordId);\r\n    m.redraw();\r\n\r\n    try {\r\n      await attrs.onApproveRecord(record, creditedAmount, notes || undefined);\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.records.approve_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Error approving deposit record:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.records.approve_error')\r\n      );\r\n    } finally {\r\n      this.state.processingRecords.delete(recordId);\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async handleReject(record: DepositRecord, attrs: DepositRecordManagementSectionAttrs): Promise<void> {\r\n    const reason = prompt(\r\n      app.translator.trans('withdrawal.admin.deposit.records.reject_reason_prompt').toString()\r\n    );\r\n\r\n    if (!reason || reason.trim() === '') {\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.records.reject_reason_required')\r\n      );\r\n      return;\r\n    }\r\n\r\n    const recordId = record.id();\r\n    this.state.processingRecords.add(recordId);\r\n    m.redraw();\r\n\r\n    try {\r\n      await attrs.onRejectRecord(record, reason);\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.records.reject_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Error rejecting deposit record:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.records.reject_error')\r\n      );\r\n    } finally {\r\n      this.state.processingRecords.delete(recordId);\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private handleDelete(record: DepositRecord, attrs: DepositRecordManagementSectionAttrs): void {\r\n    const user = record.user?.();\r\n    const userName = user?.displayName?.() || 'Unknown User';\r\n    const amount = record.amount();\r\n\r\n    app.modal.show(ConfirmModal, {\r\n      title: app.translator.trans('withdrawal.admin.deposit.records.delete_confirm_title'),\r\n      message: app.translator.trans('withdrawal.admin.deposit.records.delete_confirm_message', {\r\n        user: userName,\r\n        amount: amount\r\n      }),\r\n      confirmText: app.translator.trans('withdrawal.admin.deposit.records.delete_confirm_button'),\r\n      cancelText: app.translator.trans('withdrawal.admin.deposit.records.delete_cancel_button'),\r\n      dangerous: true,\r\n      icon: 'fas fa-trash',\r\n      onConfirm: async () => {\r\n        const recordId = record.id();\r\n        this.state.processingRecords.add(recordId);\r\n        \r\n        try {\r\n          await attrs.onDeleteRecord(record);\r\n          \r\n          app.alerts.show(\r\n            { type: 'success', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.deposit.records.delete_success')\r\n          );\r\n        } catch (error) {\r\n          console.error('Error deleting deposit record:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.deposit.records.delete_error')\r\n          );\r\n        } finally {\r\n          this.state.processingRecords.delete(recordId);\r\n          m.redraw();\r\n        }\r\n      },\r\n      onCancel: () => {\r\n        app.modal.close();\r\n      }\r\n    });\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport type Mithril from 'mithril';\r\nimport { FormValidator } from '../../../common/utils/formValidators';\r\n\r\nexport interface DepositPlatformFormData {\r\n  name: string;\r\n  symbol: string;\r\n  network: string;\r\n  minAmount: string;\r\n  maxAmount: string;\r\n  fee: string;\r\n  address: string;\r\n  qrCodeImageUrl: string;\r\n  iconUrl: string;\r\n  iconClass: string;\r\n  warningText: string;\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface AddDepositPlatformFormAttrs {\r\n  submitting: boolean;\r\n  onSubmit: (formData: DepositPlatformFormData) => Promise<void>;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default class AddDepositPlatformForm extends Component<AddDepositPlatformFormAttrs> {\r\n  private formData = {\r\n    name: Stream(''),\r\n    symbol: Stream(''),\r\n    network: Stream(''),\r\n    minAmount: Stream(''),\r\n    maxAmount: Stream(''),\r\n    fee: Stream(''),\r\n    address: Stream(''),\r\n    qrCodeImageUrl: Stream(''),\r\n    iconUrl: Stream(''),\r\n    iconClass: Stream(''),\r\n    warningText: Stream(''),\r\n    isActive: Stream(true)\r\n  };\r\n\r\n  oninit(vnode: Mithril.Vnode<AddDepositPlatformFormAttrs>) {\r\n    super.oninit(vnode);\r\n  }\r\n\r\n  view(vnode: Mithril.Vnode<AddDepositPlatformFormAttrs>) {\r\n    const { submitting, onCancel } = vnode.attrs;\r\n\r\n    return (\r\n      <div className=\"AddDepositPlatformForm\">\r\n        <div className=\"Form\">\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.name')}\r\n                <span className=\"Form-required\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"e.g., Tether\"\r\n                bidi={this.formData.name}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.symbol')}\r\n                <span className=\"Form-required\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"e.g., USDT\"\r\n                bidi={this.formData.symbol}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.network')}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"e.g., TRC20, ERC20, BSC (optional)\"\r\n                bidi={this.formData.network}\r\n                disabled={submitting}\r\n              />\r\n              <div className=\"helpText\">\r\n                Optional. Specify the blockchain network for this platform.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.min_amount')}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.00000001\"\r\n                min=\"0\"\r\n                className=\"FormControl\"\r\n                placeholder=\"0.0\"\r\n                bidi={this.formData.minAmount}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.max_amount')}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.00000001\"\r\n                min=\"0\"\r\n                className=\"FormControl\"\r\n                placeholder=\"Leave empty for unlimited\"\r\n                bidi={this.formData.maxAmount}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.fee')}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.00000001\"\r\n                min=\"0\"\r\n                className=\"FormControl\"\r\n                placeholder=\"0.0\"\r\n                bidi={this.formData.fee}\r\n                disabled={submitting}\r\n              />\r\n              <div className=\"helpText\">\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.fee_help')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label>\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.address')}\r\n              <span className=\"Form-required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"FormControl\"\r\n              placeholder=\"Enter deposit address for this platform\"\r\n              bidi={this.formData.address}\r\n              disabled={submitting}\r\n            />\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.address_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label>\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.qr_code_image_url')}\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              className=\"FormControl\"\r\n              placeholder=\"https://example.com/qr-code.png\"\r\n              bidi={this.formData.qrCodeImageUrl}\r\n              disabled={submitting}\r\n            />\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.qr_code_image_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.icon_url')}\r\n              </label>\r\n              <input\r\n                type=\"url\"\r\n                className=\"FormControl\"\r\n                placeholder=\"https://example.com/icon.png\"\r\n                bidi={this.formData.iconUrl}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.icon_class')}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"fas fa-coins\"\r\n                bidi={this.formData.iconClass}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"Form-group\">\r\n            <label>\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.warning_text')}\r\n            </label>\r\n            <textarea\r\n              className=\"FormControl\"\r\n              rows={3}\r\n              placeholder=\"Network-specific warning for users\"\r\n              bidi={this.formData.warningText}\r\n              disabled={submitting}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <Switch state={this.formData.isActive()} onchange={this.formData.isActive} disabled={submitting}>\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.is_active')}\r\n            </Switch>\r\n          </div>\r\n\r\n          <div className=\"Form-actions\">\r\n            <Button\r\n              className=\"Button Button--primary\"\r\n              type=\"submit\"\r\n              loading={submitting}\r\n              onclick={this.handleSubmit.bind(this, vnode.attrs)}\r\n            >\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.add_button')}\r\n            </Button>\r\n            <Button\r\n              className=\"Button\"\r\n              onclick={onCancel}\r\n              disabled={submitting}\r\n            >\r\n              {app.translator.trans('core.admin.basics.cancel_button')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  private validateForm(): boolean {\r\n    const validator = new FormValidator();\r\n    \r\n    try {\r\n      // Fixed: Convert NestedStringArray to string for FormValidator\r\n      const nameLabel = app.translator.trans('withdrawal.admin.deposit.platforms.name').toString();\r\n      const symbolLabel = app.translator.trans('withdrawal.admin.deposit.platforms.symbol').toString();\r\n      const addressLabel = app.translator.trans('withdrawal.admin.deposit.platforms.address').toString();\r\n      \r\n      validator\r\n        .required(this.formData.name(), 'name', nameLabel)\r\n        .required(this.formData.symbol(), 'symbol', symbolLabel)\r\n        .required(this.formData.address(), 'address', addressLabel);\r\n\r\n      // Optional numeric fields validation\r\n      if (this.formData.minAmount() && this.formData.minAmount().trim()) {\r\n        const minAmountLabel = app.translator.trans('withdrawal.admin.deposit.platforms.min_amount').toString();\r\n        validator.numberRange(this.formData.minAmount(), 0, undefined, 'minAmount', minAmountLabel);\r\n      }\r\n      \r\n      if (this.formData.maxAmount() && this.formData.maxAmount().trim()) {\r\n        const maxAmountLabel = app.translator.trans('withdrawal.admin.deposit.platforms.max_amount').toString();\r\n        validator.numberRange(this.formData.maxAmount(), 0, undefined, 'maxAmount', maxAmountLabel);\r\n      }\r\n\r\n      if (this.formData.fee() && this.formData.fee().trim()) {\r\n        const feeLabel = app.translator.trans('withdrawal.admin.deposit.platforms.fee').toString();\r\n        validator.numberRange(this.formData.fee(), 0, undefined, 'fee', feeLabel);\r\n      }\r\n\r\n      // Custom validation for max >= min if both are provided\r\n      if (this.formData.minAmount() && this.formData.maxAmount()) {\r\n        const minVal = parseFloat(this.formData.minAmount());\r\n        const maxVal = parseFloat(this.formData.maxAmount());\r\n        if (!isNaN(minVal) && !isNaN(maxVal) && maxVal < minVal) {\r\n          const errorMessage = app.translator.trans('withdrawal.admin.platforms.max_min_error').toString();\r\n          validator.custom(false, 'maxAmount', errorMessage);\r\n        }\r\n      }\r\n\r\n      // Optional URL validations\r\n      if (this.formData.iconUrl() && this.formData.iconUrl().trim()) {\r\n        const iconUrlLabel = app.translator.trans('withdrawal.admin.deposit.platforms.icon_url').toString();\r\n        validator.url(this.formData.iconUrl(), 'iconUrl', iconUrlLabel);\r\n      }\r\n      \r\n      if (this.formData.qrCodeImageUrl() && this.formData.qrCodeImageUrl().trim()) {\r\n        const qrCodeLabel = app.translator.trans('withdrawal.admin.deposit.platforms.qr_code_image_url').toString();\r\n        validator.url(this.formData.qrCodeImageUrl(), 'qrCodeImageUrl', qrCodeLabel);\r\n      }\r\n\r\n      const result = validator.getResult();\r\n      \r\n      if (!result.isValid && result.firstErrorMessage) {\r\n        app.alerts.show({ type: 'error', dismissible: true }, result.firstErrorMessage);\r\n      }\r\n\r\n      return result.isValid;\r\n    } catch (error) {\r\n      console.error('Form validation error:', error);\r\n      app.alerts.show({ type: 'error', dismissible: true }, 'Validation failed');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async handleSubmit(attrs: AddDepositPlatformFormAttrs, e: Event): Promise<void> {\r\n    e.preventDefault();\r\n\r\n    if (!this.validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const formData: DepositPlatformFormData = {\r\n      name: this.formData.name(),\r\n      symbol: this.formData.symbol(),\r\n      network: this.formData.network(),\r\n      minAmount: this.formData.minAmount(),\r\n      maxAmount: this.formData.maxAmount(),\r\n      fee: this.formData.fee(),\r\n      address: this.formData.address(),\r\n      qrCodeImageUrl: this.formData.qrCodeImageUrl(),\r\n      iconUrl: this.formData.iconUrl(),\r\n      iconClass: this.formData.iconClass(),\r\n      warningText: this.formData.warningText(),\r\n      isActive: this.formData.isActive()\r\n    };\r\n\r\n    await attrs.onSubmit(formData);\r\n  }\r\n}","import app from 'flarum/admin/app';\nimport m from 'mithril';\nimport type Mithril from 'mithril';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport AddDepositPlatformForm from '../forms/AddDepositPlatformForm';\nimport GenericPlatformListItem from '../shared/GenericPlatformListItem';\nimport type { GenericPlatform } from '../shared/GenericManagementPage';\n\ninterface DepositPlatformManagementSectionAttrs {\n  platforms: GenericPlatform[];\n  submittingPlatform: boolean;\n  onAddPlatform: (formData: any) => Promise<void>;\n  onTogglePlatformStatus: (platform: GenericPlatform) => Promise<void>;\n  onDeletePlatform: (platform: GenericPlatform) => Promise<void>;\n}\n\nexport default class DepositPlatformManagementSection extends Component<DepositPlatformManagementSectionAttrs> {\n  private showAddForm = false;\n\n  view(vnode: Mithril.Vnode<DepositPlatformManagementSectionAttrs>): Mithril.Children {\n    const { platforms, submittingPlatform, onAddPlatform, onTogglePlatformStatus, onDeletePlatform } = vnode.attrs;\n\n    return (\n      <div className=\"DepositPlatformManagementSection\">\n        <div className=\"Section-header\">\n          <h3>{app.translator.trans('withdrawal.admin.deposit.platforms.title')}</h3>\n          <div className=\"Section-headerControls\">\n            <Button\n              className=\"Button Button--primary\"\n              icon=\"fas fa-plus\"\n              onclick={() => {\n                this.showAddForm = !this.showAddForm;\n                m.redraw();\n              }}\n            >\n              {app.translator.trans('withdrawal.admin.deposit.platforms.add_button')}\n            </Button>\n          </div>\n        </div>\n\n        {this.showAddForm && (\n          <div className=\"Section-content\">\n            <AddDepositPlatformForm\n              onSubmit={async (formData: any) => {\n                await onAddPlatform(formData);\n                this.showAddForm = false;\n                m.redraw();\n              }}\n              onCancel={() => {\n                this.showAddForm = false;\n                m.redraw();\n              }}\n              submitting={submittingPlatform}\n            />\n          </div>\n        )}\n\n        <div className=\"Section-content\">\n          {platforms.length === 0 ? (\n            <div className=\"helpText\">\n              {app.translator.trans('withdrawal.admin.deposit.platforms.empty')}\n            </div>\n          ) : (\n            <div className=\"PlatformList\">\n              {platforms.map((platform) => (\n                <GenericPlatformListItem\n                  key={typeof platform.id === 'function' ? platform.id() : platform.id}\n                  platform={platform}\n                  type=\"deposit\"\n                  onToggleStatus={() => onTogglePlatformStatus(platform)}\n                  onDelete={() => onDeletePlatform(platform)}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/common/app';\r\n\r\n/**\r\n * Standardized API request configuration\r\n */\r\ninterface ApiRequestConfig {\r\n  method: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\r\n  endpoint: string;\r\n  body?: any;\r\n  params?: Record<string, any>;\r\n  headers?: Record<string, string>;\r\n  timeout?: number;\r\n}\r\n\r\n/**\r\n * Standardized error response structure\r\n */\r\ninterface ApiError {\r\n  message: string;\r\n  errors?: Array<{\r\n    detail: string;\r\n    source?: {\r\n      pointer?: string;\r\n      parameter?: string;\r\n    };\r\n  }>;\r\n  status?: number;\r\n  code?: string;\r\n}\r\n\r\n/**\r\n * API request options for different operation types\r\n */\r\ninterface ApiRequestOptions {\r\n  showSuccessAlert?: boolean;\r\n  showErrorAlert?: boolean;\r\n  successMessage?: string;\r\n  errorMessage?: string;\r\n  validateResponse?: (response: any) => boolean;\r\n  transformResponse?: (response: any) => any;\r\n  onSuccess?: (response: any) => void;\r\n  onError?: (error: ApiError) => void;\r\n}\r\n\r\nconst DEFAULT_TIMEOUT = 30000; // 30 seconds\r\nconst DEFAULT_HEADERS = {\r\n  'Content-Type': 'application/vnd.api+json',\r\n  'Accept': 'application/vnd.api+json'\r\n};\r\n\r\n/**\r\n * Build complete request configuration\r\n */\r\nfunction buildRequestConfig(config: ApiRequestConfig) {\r\n  const { method, endpoint, body, params, headers, timeout } = config;\r\n  \r\n  const fullUrl = endpoint.startsWith('http') \r\n    ? endpoint \r\n    : `${app.forum.attribute('apiUrl')}${endpoint}`;\r\n\r\n  const requestConfig: any = {\r\n    method,\r\n    url: fullUrl,\r\n    headers: { ...DEFAULT_HEADERS, ...headers },\r\n    timeout: timeout || DEFAULT_TIMEOUT\r\n  };\r\n\r\n  if (body && (method === 'POST' || method === 'PATCH' || method === 'PUT')) {\r\n    requestConfig.body = body;\r\n  }\r\n\r\n  if (params && method === 'GET') {\r\n    const urlParams = new URLSearchParams();\r\n    Object.entries(params).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null) {\r\n        urlParams.append(key, String(value));\r\n      }\r\n    });\r\n    requestConfig.url += `?${urlParams.toString()}`;\r\n  }\r\n\r\n  return requestConfig;\r\n}\r\n\r\n/**\r\n * Parse and standardize error responses\r\n */\r\nfunction parseError(error: any): ApiError {\r\n  // Handle network/timeout errors\r\n  if (error.name === 'TypeError' || error.message === 'Failed to fetch') {\r\n    return {\r\n      message: app.translator.trans('core.lib.error.network_error').toString(),\r\n      status: 0\r\n    };\r\n  }\r\n\r\n  // Handle Flarum API errors\r\n  if (error && error.response) {\r\n    try {\r\n      const response = typeof error.response === 'string' \r\n        ? JSON.parse(error.response) \r\n        : error.response;\r\n      \r\n      if (response.errors && Array.isArray(response.errors)) {\r\n        return {\r\n          message: response.errors[0].detail || 'API error occurred',\r\n          errors: response.errors,\r\n          status: error.status\r\n        };\r\n      }\r\n    } catch {\r\n      // If parsing fails, treat as HTML error page\r\n      if (error.response.includes('<b>Fatal error</b>') || \r\n          error.response.includes('<!DOCTYPE')) {\r\n        return {\r\n          message: app.translator.trans('core.lib.error.generic_error').toString(),\r\n          status: error.status || 500\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle direct error objects\r\n  if (error instanceof Error) {\r\n    return {\r\n      message: error.message,\r\n      status: (error as any).status\r\n    };\r\n  }\r\n\r\n  // Fallback for unknown errors\r\n  return {\r\n    message: app.translator.trans('core.lib.error.generic_error').toString(),\r\n    status: 500\r\n  };\r\n}\r\n\r\n/**\r\n * Generic API request method\r\n */\r\nexport async function apiRequest<T = any>(\r\n  config: ApiRequestConfig, \r\n  options: ApiRequestOptions = {}\r\n): Promise<T> {\r\n  const {\r\n    showSuccessAlert = false,\r\n    showErrorAlert = true,\r\n    successMessage,\r\n    errorMessage,\r\n    validateResponse,\r\n    transformResponse,\r\n    onSuccess,\r\n    onError\r\n  } = options;\r\n\r\n  try {\r\n    const requestConfig = buildRequestConfig(config);\r\n    const response = await app.request(requestConfig);\r\n    \r\n    // Validate response if validator provided\r\n    if (validateResponse && !validateResponse(response)) {\r\n      throw new Error('Response validation failed');\r\n    }\r\n\r\n    // Transform response if transformer provided\r\n    const finalResponse = transformResponse ? transformResponse(response) : response;\r\n\r\n    // Show success alert if requested\r\n    if (showSuccessAlert && successMessage) {\r\n      app.alerts.show({ type: 'success', dismissible: true }, successMessage);\r\n    }\r\n\r\n    // Execute success callback\r\n    if (onSuccess) {\r\n      onSuccess(finalResponse);\r\n    }\r\n\r\n    return finalResponse;\r\n  } catch (error) {\r\n    const apiError = parseError(error);\r\n    \r\n    // Execute error callback\r\n    if (onError) {\r\n      onError(apiError);\r\n    }\r\n\r\n    // Show error alert if requested\r\n    if (showErrorAlert) {\r\n      const message = errorMessage || apiError.message || 'An error occurred';\r\n      app.alerts.show({ type: 'error', dismissible: true }, message);\r\n    }\r\n\r\n    throw apiError;\r\n  }\r\n}\r\n\r\n/**\r\n * GET request helper\r\n */\r\nexport async function apiGet<T = any>(\r\n  endpoint: string, \r\n  params?: Record<string, any>, \r\n  options: ApiRequestOptions = {}\r\n): Promise<T> {\r\n  return apiRequest<T>({ method: 'GET', endpoint, params }, options);\r\n}\r\n\r\n/**\r\n * POST request helper\r\n */\r\nexport async function apiPost<T = any>(\r\n  endpoint: string, \r\n  body?: any, \r\n  options: ApiRequestOptions = {}\r\n): Promise<T> {\r\n  return apiRequest<T>({ method: 'POST', endpoint, body }, options);\r\n}\r\n\r\n/**\r\n * PATCH request helper\r\n */\r\nexport async function apiPatch<T = any>(\r\n  endpoint: string, \r\n  body?: any, \r\n  options: ApiRequestOptions = {}\r\n): Promise<T> {\r\n  return apiRequest<T>({ method: 'PATCH', endpoint, body }, options);\r\n}\r\n\r\n/**\r\n * DELETE request helper\r\n */\r\nexport async function apiDelete<T = any>(\r\n  endpoint: string, \r\n  options: ApiRequestOptions = {}\r\n): Promise<T> {\r\n  return apiRequest<T>({ method: 'DELETE', endpoint }, options);\r\n}\r\n\r\n/**\r\n * Platform-specific API helpers\r\n */\r\nexport const PlatformAPI = {\r\n  /**\r\n   * Load withdrawal platforms\r\n   */\r\n  async loadWithdrawalPlatforms(params?: Record<string, any>) {\r\n    return apiGet('/withdrawal-platforms', params, {\r\n      errorMessage: app.translator.trans('withdrawal.admin.platforms.load_error').toString(),\r\n      transformResponse: (response) => {\r\n        app.store.pushPayload(response);\r\n        return app.store.all('withdrawal-platforms');\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Create withdrawal platform\r\n   */\r\n  async createWithdrawalPlatform(data: any) {\r\n    return apiPost('/withdrawal-platforms', { data }, {\r\n      showSuccessAlert: true,\r\n      successMessage: app.translator.trans('withdrawal.admin.platforms.add_success').toString(),\r\n      errorMessage: app.translator.trans('withdrawal.admin.platforms.add_error').toString(),\r\n      onSuccess: (response) => {\r\n        app.store.pushPayload(response);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Request-specific API helpers\r\n */\r\nexport const RequestAPI = {\r\n  /**\r\n   * Load withdrawal requests\r\n   */\r\n  async loadWithdrawalRequests(params?: Record<string, any>) {\r\n    return apiGet('/withdrawal-requests', { include: 'user,platform', ...params }, {\r\n      errorMessage: app.translator.trans('withdrawal.admin.requests.load_error').toString(),\r\n      transformResponse: (response) => {\r\n        app.store.pushPayload(response);\r\n        return Array.isArray(response.data) \r\n          ? response.data.filter((r: any) => r !== null)\r\n          : (response.data ? [response.data] : []);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n// For backward compatibility, create an object with the same interface as the class\r\nexport const ApiRequestUtils = {\r\n  PlatformAPI,\r\n  RequestAPI\r\n};","import app from 'flarum/admin/app';\r\nimport { apiPost, apiPatch, apiDelete, apiGet } from '../../common/utils/apiRequestUtils';\r\nimport type { PlatformOperations, TransactionOperations } from '../components/shared/GenericManagementPage';\r\n\r\n// Withdrawal platform operations\r\nexport const createWithdrawalPlatformOperations = (): PlatformOperations<any> => ({\r\n  async create(formData: any) {\r\n    const platformData = {\r\n      type: 'withdrawal-platforms',\r\n      attributes: {\r\n        name: formData.name,\r\n        symbol: formData.symbol,\r\n        network: formData.network || null,\r\n        minAmount: parseFloat(formData.minAmount),\r\n        maxAmount: parseFloat(formData.maxAmount),\r\n        fee: parseFloat(formData.fee || '0'),\r\n        iconUrl: formData.iconUrl || null,\r\n        iconClass: formData.iconClass || null,\r\n        isActive: true\r\n      }\r\n    };\r\n    \r\n    return apiPost('/withdrawal-platforms', { data: platformData }, {\r\n      showSuccessAlert: true,\r\n      successMessage: app.translator.trans('withdrawal.admin.platforms.add_success').toString(),\r\n      errorMessage: app.translator.trans('withdrawal.admin.platforms.add_error').toString(),\r\n      onSuccess: (response) => {\r\n        app.store.pushPayload(response);\r\n      }\r\n    });\r\n  },\r\n\r\n  async toggleStatus(platform: any) {\r\n    const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n    const currentStatus = (typeof platform.isActive === 'function' ? platform.isActive() : platform.attributes?.isActive) ?? false;\r\n    const record = app.store.getById('withdrawal-platforms', platformId);\r\n    \r\n    if (record) {\r\n      await record.save({ isActive: !currentStatus });\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans(`withdrawal.admin.platforms.${!currentStatus ? 'enable' : 'disable'}_success`)\r\n      );\r\n    }\r\n  },\r\n\r\n  async delete(platform: any) {\r\n    const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n    const record = app.store.getById('withdrawal-platforms', platformId);\r\n    if (record) {\r\n      await record.delete();\r\n    }\r\n  },\r\n\r\n  async load() {\r\n    return apiGet('/withdrawal-platforms', undefined, {\r\n      errorMessage: app.translator.trans('withdrawal.admin.platforms.load_error').toString(),\r\n      transformResponse: (response) => {\r\n        app.store.pushPayload(response);\r\n        return app.store.all('withdrawal-platforms');\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// Deposit platform operations\r\nexport const createDepositPlatformOperations = (): PlatformOperations<any> => ({\r\n  async create(formData: any) {\r\n    const platformData = {\r\n      type: 'deposit-platforms',\r\n      attributes: {\r\n        name: formData.name,\r\n        symbol: formData.symbol,\r\n        network: formData.network,\r\n        minAmount: parseFloat(formData.minAmount) || 0,\r\n        maxAmount: formData.maxAmount ? parseFloat(formData.maxAmount) : null,\r\n        address: formData.address || null,\r\n        qrCodeImageUrl: formData.qrCodeImageUrl || null,\r\n        iconUrl: formData.iconUrl || null,\r\n        iconClass: formData.iconClass || null,\r\n        warningText: formData.warningText || null,\r\n        isActive: formData.isActive\r\n      }\r\n    };\r\n    \r\n    return apiPost('/deposit-platforms', { data: platformData }, {\r\n      showSuccessAlert: true,\r\n      successMessage: app.translator.trans('withdrawal.admin.deposit.platforms.add_success').toString(),\r\n      errorMessage: app.translator.trans('withdrawal.admin.deposit.platforms.add_error').toString(),\r\n      onSuccess: (response) => {\r\n        app.store.pushPayload(response);\r\n      }\r\n    });\r\n  },\r\n\r\n  async toggleStatus(platform: any) {\r\n    const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n    const currentStatus = (typeof platform.isActive === 'function' ? platform.isActive() : platform.attributes?.isActive) ?? false;\r\n    \r\n    return apiPatch(`/deposit-platforms/${platformId}`, {\r\n      data: {\r\n        type: 'deposit-platforms',\r\n        attributes: {\r\n          isActive: !currentStatus\r\n        }\r\n      }\r\n    }, {\r\n      showSuccessAlert: true,\r\n      successMessage: app.translator.trans(`withdrawal.admin.deposit.platforms.${!currentStatus ? 'enable' : 'disable'}_success`).toString(),\r\n      errorMessage: app.translator.trans('withdrawal.admin.deposit.platforms.toggle_error').toString(),\r\n      onSuccess: (response) => {\r\n        app.store.pushPayload(response);\r\n      }\r\n    });\r\n  },\r\n\r\n  async delete(platform: any) {\r\n    const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n    \r\n    return apiDelete(`/deposit-platforms/${platformId}`, {\r\n      errorMessage: app.translator.trans('withdrawal.admin.deposit.platforms.delete_error').toString()\r\n    });\r\n  },\r\n\r\n  async load() {\r\n    return apiGet('/deposit-platforms', undefined, {\r\n      errorMessage: app.translator.trans('withdrawal.admin.deposit.platforms.load_error').toString(),\r\n      transformResponse: (response) => {\r\n        app.store.pushPayload(response);\r\n        return app.store.all('deposit-platforms');\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// Withdrawal request operations\r\nexport const createWithdrawalRequestOperations = (): TransactionOperations<any> => ({\r\n  async updateStatus(request: any, status: string) {\r\n    const requestId = typeof request.id === 'function' ? request.id() : request.id;\r\n    const record = app.store.getById('withdrawal-requests', requestId);\r\n    \r\n    if (record) {\r\n      await record.save({ status });\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans(`withdrawal.admin.requests.${status}_success`).toString()\r\n      );\r\n    }\r\n  },\r\n\r\n  async load() {\r\n    return apiGet('/withdrawal-requests', { include: 'user,platform' }, {\r\n      errorMessage: app.translator.trans('withdrawal.admin.requests.load_error').toString(),\r\n      transformResponse: (response) => {\r\n        app.store.pushPayload(response);\r\n        return Array.isArray(response.data) \r\n          ? response.data.filter((r: any) => r !== null)\r\n          : (response.data ? [response.data] : []);\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n\r\n// Deposit record operations\r\nexport const createDepositRecordOperations = (): TransactionOperations<any> => ({\r\n  async updateStatus(record: any, status: string) {\r\n    const recordId = typeof record.id === 'function' ? record.id() : record.id;\r\n    \r\n    return apiPatch(`/deposit-records/${recordId}`, {\r\n      data: {\r\n        type: 'deposit-records',\r\n        attributes: {\r\n          status: status\r\n        }\r\n      }\r\n    }, {\r\n      showSuccessAlert: true,\r\n      successMessage: app.translator.trans(`withdrawal.admin.deposit.records.${status}_success`).toString(),\r\n      errorMessage: app.translator.trans('withdrawal.admin.deposit.records.update_error').toString(),\r\n      onSuccess: (response) => {\r\n        app.store.pushPayload(response);\r\n      }\r\n    });\r\n  },\r\n\r\n  async load() {\r\n    return apiGet('/deposit-records', undefined, {\r\n      errorMessage: app.translator.trans('withdrawal.admin.deposit.records.load_error').toString(),\r\n      transformResponse: (response) => {\r\n        app.store.pushPayload(response);\r\n        return app.store.all('deposit-records');\r\n      }\r\n    });\r\n  }\r\n});","/**\r\n * Flarum API error interface for proper error handling\r\n */\r\nexport interface FlarumApiError {\r\n  response?: {\r\n    status?: number;\r\n    errors?: Array<{\r\n      detail?: string;\r\n      code?: string;\r\n    }>;\r\n  };\r\n  responseText?: string;\r\n  status?: number;\r\n}\r\n\r\n/**\r\n * Helper function to extract error message from Flarum API error\r\n */\r\nexport function extractErrorMessage(error: any, fallback = 'An error occurred'): string {\r\n  if (!error) return fallback;\r\n\r\n  // Check for JSON:API error format\r\n  if (error.response && error.response.errors && Array.isArray(error.response.errors)) {\r\n    const firstError = error.response.errors[0];\r\n    if (firstError && firstError.detail) {\r\n      return firstError.detail;\r\n    }\r\n  }\r\n\r\n  // Check for HTML error responses (PHP Fatal Errors)\r\n  if (error.responseText) {\r\n    if (error.responseText.includes('<b>Fatal error</b>') || error.responseText.includes('<!DOCTYPE')) {\r\n      return 'Server error occurred. Please try again later.';\r\n    }\r\n    \r\n    // Try to parse JSON response\r\n    try {\r\n      const response = JSON.parse(error.responseText);\r\n      if (response.errors && Array.isArray(response.errors)) {\r\n        return response.errors[0].detail || fallback;\r\n      }\r\n    } catch {\r\n      // Not valid JSON, return server error message\r\n      return 'Server error occurred. Please try again later.';\r\n    }\r\n  }\r\n\r\n  return fallback;\r\n}\r\n\r\n/**\r\n * Type guard to check if error is a Flarum API error\r\n */\r\nexport function isFlarumApiError(error: any): error is FlarumApiError {\r\n  return error && (\r\n    (error.response && error.response.errors) ||\r\n    error.responseText ||\r\n    error.status\r\n  );\r\n}\r\n\r\n/**\r\n * Type assertion helper for API responses\r\n * This is a temporary solution until better typing is available\r\n */\r\nexport function assertApiPayload(response: unknown): any {\r\n  // In a production environment, you would add runtime validation here\r\n  return response as any;\r\n}","import app from 'flarum/admin/app';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\nimport GenericManagementPage, { \r\n  type GenericManagementPageConfig, \r\n  type GenericPlatform, \r\n  type GenericTransaction \r\n} from './shared/GenericManagementPage';\r\nimport GeneralSettingsSection from './sections/GeneralSettingsSection';\r\nimport PlatformManagementSection from './sections/PlatformManagementSection';\r\nimport RequestManagementSection from './sections/RequestManagementSection';\r\nimport DepositRecordManagementSection from './sections/DepositRecordManagementSection';\r\nimport DepositPlatformManagementSection from './sections/DepositPlatformManagementSection';\r\nimport ConfirmModal from '../../common/components/shared/ConfirmModal';\r\nimport { \r\n  createWithdrawalPlatformOperations,\r\n  createDepositPlatformOperations,\r\n  createWithdrawalRequestOperations,\r\n  createDepositRecordOperations\r\n} from '../utils/platformOperations';\r\nimport { assertApiPayload } from '../../common/types/api';\r\nimport Component from 'flarum/common/Component';\r\n\r\n// Simple placeholder components for custom tabs\r\nclass WithdrawalTabPlaceholder extends Component {\r\n  view() {\r\n    return <div>Withdrawals Content</div>;\r\n  }\r\n}\r\n\r\nclass DepositsTabPlaceholder extends Component {\r\n  view() {\r\n    return <div>Deposits Content</div>;\r\n  }\r\n}\r\n\r\n\r\nexport default class UnifiedManagementPage extends GenericManagementPage<GenericPlatform, GenericTransaction> {\r\n  \r\n  // Additional state for complex scenarios\r\n  private depositPlatforms: GenericPlatform[] = [];\r\n  private depositRecords: GenericTransaction[] = [];\r\n  private users: { [key: number]: any } = {};\r\n\r\n  protected getConfig(): GenericManagementPageConfig<GenericPlatform, GenericTransaction> {\r\n    return {\r\n      pageTitle: app.translator.trans('withdrawal.admin.page.title').toString(),\r\n      extensionId: 'WithdrawalManagement',\r\n      \r\n      // Primary platform operations (withdrawal)\r\n      platformOperations: createWithdrawalPlatformOperations(),\r\n      transactionOperations: createWithdrawalRequestOperations(),\r\n      \r\n      // Settings component\r\n      settingsComponent: GeneralSettingsSection,\r\n      \r\n      // Tab configuration\r\n      tabs: [\r\n        {\r\n          key: 'withdrawals',\r\n          label: app.translator.trans('withdrawal.admin.tabs.withdrawals').toString(),\r\n          component: WithdrawalTabPlaceholder\r\n        },\r\n        {\r\n          key: 'deposits',\r\n          label: app.translator.trans('withdrawal.admin.tabs.deposits').toString(),\r\n          component: DepositsTabPlaceholder\r\n        }\r\n      ],\r\n      \r\n      translations: {\r\n        platformPrefix: 'withdrawal.admin.platforms',\r\n        transactionPrefix: 'withdrawal.admin.requests'\r\n      }\r\n    };\r\n  }\r\n\r\n  // Override renderActiveTabContent to handle the complex withdrawals and deposits tabs  \r\n  protected renderActiveTabContent(): Mithril.Children {\r\n    if (this.activeTab === 'withdrawals') {\r\n      return (\r\n        <div>\r\n          <PlatformManagementSection\r\n            platforms={this.platforms}\r\n            submittingPlatform={this.submittingPlatform}\r\n            onAddPlatform={this.addPlatform.bind(this)}\r\n            onTogglePlatformStatus={this.togglePlatformStatus.bind(this)}\r\n            onDeletePlatform={this.deletePlatform.bind(this)}\r\n          />\r\n          \r\n          <RequestManagementSection\r\n            requests={this.transactions as any}\r\n            onUpdateRequestStatus={this.updateTransactionStatus.bind(this)}\r\n            onDeleteRequest={this.deleteWithdrawalRequest.bind(this)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    if (this.activeTab === 'deposits') {\r\n      return (\r\n        <div>\r\n          <DepositPlatformManagementSection\r\n            platforms={this.depositPlatforms}\r\n            submittingPlatform={this.submittingPlatform}\r\n            onAddPlatform={this.addDepositPlatform.bind(this)}\r\n            onTogglePlatformStatus={this.toggleDepositPlatformStatus.bind(this)}\r\n            onDeletePlatform={this.deleteDepositPlatform.bind(this)}\r\n          />\r\n          \r\n          <DepositRecordManagementSection\r\n            platforms={this.depositPlatforms}\r\n            records={this.depositRecords}\r\n            loading={this.loading}\r\n            onApproveRecord={this.approveDepositRecord.bind(this)}\r\n            onRejectRecord={this.rejectDepositRecord.bind(this)}\r\n            onDeleteRecord={this.deleteDepositRecord.bind(this)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // For other tabs, use the parent implementation\r\n    return super.renderActiveTabContent();\r\n  }\r\n\r\n  // Override loadData to handle unified withdrawal and deposit data loading\r\n  protected async loadData(): Promise<void> {\r\n    try {\r\n      // Load withdrawal data (handled by parent)\r\n      await this.loadPlatforms();\r\n      await this.loadTransactions();\r\n      \r\n      // Load additional user data for requests\r\n      await this.loadUserData();\r\n      \r\n      // Load deposit data\r\n      await this.loadDepositPlatforms();\r\n      await this.loadDepositRecords();\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  // Deposit platform management methods\r\n  private async addDepositPlatform(formData: any): Promise<void> {\r\n    const depositOperations = createDepositPlatformOperations();\r\n    if (this.submittingPlatform) return;\r\n\r\n    this.submittingPlatform = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      await depositOperations.create(formData);\r\n      await this.loadDepositPlatforms();\r\n    } catch (error) {\r\n      console.error('Error adding deposit platform:', error);\r\n      \r\n      // Show error message\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.platforms.add_error')\r\n      );\r\n    } finally {\r\n      this.submittingPlatform = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async toggleDepositPlatformStatus(platform: GenericPlatform): Promise<void> {\r\n    const depositOperations = createDepositPlatformOperations();\r\n    try {\r\n      await depositOperations.toggleStatus(platform);\r\n      await this.loadDepositPlatforms();\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error toggling deposit platform status:', error);\r\n    }\r\n  }\r\n\r\n  private async deleteDepositPlatform(platform: GenericPlatform): Promise<void> {\r\n    const depositOperations = createDepositPlatformOperations();\r\n    const platformName = (typeof platform.name === 'function' ? platform.name() : platform.name) || 'Unknown Platform';\r\n    \r\n    app.modal.show(ConfirmModal, {\r\n      title: app.translator.trans('withdrawal.admin.platforms.delete_confirm_title'),\r\n      message: app.translator.trans('withdrawal.admin.platforms.delete_confirm_message', { name: platformName }),\r\n      confirmText: app.translator.trans('withdrawal.admin.platforms.delete_confirm_button'),\r\n      cancelText: app.translator.trans('withdrawal.admin.platforms.delete_cancel_button'),\r\n      dangerous: true,\r\n      icon: 'fas fa-trash',\r\n      onConfirm: async () => {\r\n        try {\r\n          await depositOperations.delete(platform);\r\n          await this.loadDepositPlatforms();\r\n          \r\n          app.alerts.show(\r\n            { type: 'success', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.deposit.platforms.delete_success')\r\n          );\r\n        } catch (error) {\r\n          console.error('Error deleting deposit platform:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.deposit.platforms.delete_error')\r\n          );\r\n        }\r\n        m.redraw();\r\n      },\r\n      onCancel: () => {\r\n        app.modal.close();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private async updateDepositRecordStatus(record: GenericTransaction, status: string): Promise<void> {\r\n    const depositRecordOperations = createDepositRecordOperations();\r\n    try {\r\n      await depositRecordOperations.updateStatus(record, status);\r\n      await this.loadDepositRecords();\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error updating deposit record:', error);\r\n    }\r\n  }\r\n\r\n  // Deletion method for withdrawal requests  \r\n  private deleteWithdrawalRequest(request: any): void {\r\n    const requestId = typeof request.id === 'function' ? request.id() : request.id;\r\n    const amount = typeof request.amount === 'function' ? request.amount() : (request.attributes?.amount || 0);\r\n    \r\n    // Get user name for display in confirmation\r\n    let userName = 'Unknown User';\r\n    if (typeof request.user === 'function') {\r\n      const userData = request.user();\r\n      if (userData && typeof userData.displayName === 'function') {\r\n        userName = userData.displayName();\r\n      } else if (userData && userData.attributes?.displayName) {\r\n        userName = userData.attributes.displayName;\r\n      }\r\n    }\r\n    \r\n    app.modal.show(ConfirmModal, {\r\n      title: app.translator.trans('withdrawal.admin.requests.delete_confirm_title'),\r\n      message: app.translator.trans('withdrawal.admin.requests.delete_confirm_message', { info: `${userName} - ${amount}` }),\r\n      confirmText: app.translator.trans('withdrawal.admin.requests.delete_confirm_button'),\r\n      cancelText: app.translator.trans('withdrawal.admin.requests.delete_cancel_button'),\r\n      dangerous: true,\r\n      icon: 'fas fa-trash',\r\n      onConfirm: async () => {\r\n        try {\r\n          const record = app.store.getById('withdrawal-requests', requestId);\r\n          if (record) {\r\n            await record.delete();\r\n            await this.loadTransactions();\r\n            \r\n            app.alerts.show(\r\n              { type: 'success', dismissible: true },\r\n              app.translator.trans('withdrawal.admin.requests.delete_success')\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting request:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.requests.delete_error')\r\n          );\r\n        }\r\n      },\r\n      onCancel: () => {\r\n        app.modal.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Additional data loading methods\r\n  private async loadDepositPlatforms(): Promise<void> {\r\n    const depositOperations = createDepositPlatformOperations();\r\n    try {\r\n      this.depositPlatforms = await depositOperations.load();\r\n      console.log('Loaded deposit platforms:', this.depositPlatforms);\r\n    } catch (error) {\r\n      console.error('Error loading deposit platforms:', error);\r\n      this.depositPlatforms = [];\r\n    }\r\n  }\r\n\r\n\r\n  private async loadUserData(): Promise<void> {\r\n    // Skip if no requests\r\n    if (this.transactions.length === 0) return;\r\n    \r\n    const userIds = [...new Set(this.transactions\r\n      .map(r => {\r\n        // Check both data.relationships and direct relationships structures\r\n        const userRelation = (r as any)?.data?.relationships?.user?.data || (r as any)?.relationships?.user?.data;\r\n        if (userRelation) {\r\n          return userRelation.id;\r\n        }\r\n        return null;\r\n      })\r\n      .filter(id => id !== null && id !== undefined)\r\n    )];\r\n    const usersToLoad = userIds.filter(userId => !this.users[userId]);\r\n    \r\n    if (usersToLoad.length > 0) {\r\n      try {\r\n        const userPromises = usersToLoad.map(userId => \r\n          app.store.find('users', userId).catch(error => {\r\n            console.error(`Error loading user ${userId}:`, error);\r\n            return null;\r\n          })\r\n        );\r\n        \r\n        const loadedUsers = await Promise.all(userPromises);\r\n        \r\n        usersToLoad.forEach((userId, index) => {\r\n          if (loadedUsers[index]) {\r\n            this.users[userId] = loadedUsers[index];\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading users:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Deposit record management methods\r\n  private async loadDepositRecords(): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/deposit-records'\r\n      });\r\n\r\n      app.store.pushPayload(assertApiPayload(response));\r\n      this.depositRecords = app.store.all('deposit-records') as GenericTransaction[];\r\n      console.log('Loaded deposit records:', this.depositRecords);\r\n    } catch (error) {\r\n      console.error('Error loading deposit records:', error);\r\n      this.depositRecords = [];\r\n    }\r\n  }\r\n\r\n  private async approveDepositRecord(record: any, creditedAmount?: number, notes?: string): Promise<void> {\r\n    const recordId = typeof record.id === 'function' ? record.id() : record.id;\r\n    \r\n    try {\r\n      const response = await app.request({\r\n        method: 'PATCH',\r\n        url: `${app.forum.attribute('apiUrl')}/deposit-records/${recordId}`,\r\n        body: {\r\n          data: {\r\n            type: 'deposit-records',\r\n            id: recordId,\r\n            attributes: {\r\n              status: 'approved',\r\n              creditedAmount: creditedAmount,\r\n              adminNotes: notes\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      app.store.pushPayload(assertApiPayload(response));\r\n      await this.loadDepositRecords();\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error approving deposit record:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async rejectDepositRecord(record: any, reason: string): Promise<void> {\r\n    const recordId = typeof record.id === 'function' ? record.id() : record.id;\r\n    \r\n    try {\r\n      const response = await app.request({\r\n        method: 'PATCH',\r\n        url: `${app.forum.attribute('apiUrl')}/deposit-records/${recordId}`,\r\n        body: {\r\n          data: {\r\n            type: 'deposit-records',\r\n            id: recordId,\r\n            attributes: {\r\n              status: 'rejected',\r\n              adminNotes: reason\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      app.store.pushPayload(assertApiPayload(response));\r\n      await this.loadDepositRecords();\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error rejecting deposit record:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async deleteDepositRecord(record: any): Promise<void> {\r\n    const recordId = typeof record.id === 'function' ? record.id() : record.id;\r\n    \r\n    try {\r\n      const storeRecord = app.store.getById('deposit-records', recordId);\r\n      if (storeRecord) {\r\n        await storeRecord.delete();\r\n        await this.loadDepositRecords();\r\n        m.redraw();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting deposit record:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}","import Model from 'flarum/common/Model';\r\n\r\n/**\r\n * WithdrawalPlatform model for Flarum\r\n * \r\n * This model represents a withdrawal platform that users can use\r\n * to withdraw their virtual currency.\r\n */\r\nexport default class WithdrawalPlatform extends Model {\r\n  // Basic attributes\r\n  name = Model.attribute<string>('name');\r\n  symbol = Model.attribute<string>('symbol');\r\n  network = Model.attribute<string | null>('network');\r\n  displayName = Model.attribute<string>('displayName');\r\n  minAmount = Model.attribute<number>('minAmount');\r\n  maxAmount = Model.attribute<number>('maxAmount');\r\n  fee = Model.attribute<number>('fee');\r\n  \r\n  // Optional attributes\r\n  iconUrl = Model.attribute<string | null>('iconUrl');\r\n  iconClass = Model.attribute<string | null>('iconClass');\r\n  \r\n  // Status\r\n  isActive = Model.attribute<boolean>('isActive');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-platforms/${this.id()}`;\r\n  }\r\n  \r\n  // Helper methods\r\n  getDisplayName(): string {\r\n    return this.displayName() || this.name();\r\n  }\r\n  \r\n  isValidAmount(amount: number): boolean {\r\n    const min = this.minAmount();\r\n    const max = this.maxAmount();\r\n    return amount >= min && amount <= max;\r\n  }\r\n  \r\n  getTotalCost(amount: number): number {\r\n    return amount + this.fee();\r\n  }\r\n}","/**\r\n * Shared type definitions for the Withdrawal extension\r\n */\r\n\r\n/**\r\n * Withdrawal platform data structure\r\n */\r\nexport interface WithdrawalPlatformData {\r\n  id: string | number;\r\n  name: string;\r\n  symbol: string;\r\n  minAmount: number;\r\n  maxAmount: number;\r\n  fee: number;\r\n  iconUrl?: string | null;\r\n  iconClass?: string | null;\r\n  isActive: boolean;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * Withdrawal request data structure\r\n */\r\nexport interface WithdrawalRequestData {\r\n  id: string | number;\r\n  amount: number;\r\n  accountDetails: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  platformId: number;\r\n  userId: number;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * User withdrawal data extension\r\n */\r\nexport interface UserWithdrawalData {\r\n  money?: number;\r\n  withdrawalRequests?: WithdrawalRequestData[];\r\n}\r\n\r\n/**\r\n * API response structures\r\n */\r\nexport interface ApiSuccessResponse<T = any> {\r\n  data: T;\r\n}\r\n\r\nexport interface ApiErrorResponse {\r\n  errors: Array<{\r\n    status: string;\r\n    code: string;\r\n    title: string;\r\n    detail?: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Form validation errors\r\n */\r\nexport interface ValidationErrors {\r\n  [field: string]: string[];\r\n}\r\n\r\n/**\r\n * Configuration constants\r\n */\r\nexport const WITHDRAWAL_STATUS = {\r\n  PENDING: 'pending',\r\n  APPROVED: 'approved',\r\n  REJECTED: 'rejected',\r\n} as const;\r\n\r\nexport type WithdrawalStatus = typeof WITHDRAWAL_STATUS[keyof typeof WITHDRAWAL_STATUS];\r\n\r\n/**\r\n * Default values\r\n */\r\nexport const DEFAULT_MIN_AMOUNT = 0.001;\r\nexport const DEFAULT_MAX_AMOUNT = 10;\r\nexport const DEFAULT_FEE = 0.0005;\r\n\r\n/**\r\n * Helper type guards\r\n */\r\nexport function isWithdrawalPlatform(obj: any): obj is WithdrawalPlatformData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'name' in obj &&\r\n    'symbol' in obj &&\r\n    'minAmount' in obj &&\r\n    'maxAmount' in obj;\r\n}\r\n\r\nexport function isWithdrawalRequest(obj: any): obj is WithdrawalRequestData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'amount' in obj &&\r\n    'accountDetails' in obj &&\r\n    'status' in obj &&\r\n    'platformId' in obj &&\r\n    'userId' in obj;\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport WithdrawalPlatform from './WithdrawalPlatform';\r\nimport { WithdrawalStatus, WITHDRAWAL_STATUS } from '../types';\r\nimport app from 'flarum/common/app';\r\n/**\r\n * WithdrawalRequest model for Flarum\r\n * \r\n * This model represents a user's withdrawal request.\r\n */\r\nexport default class WithdrawalRequest extends Model {\r\n  // Basic attributes\r\n  amount = Model.attribute<number>('amount');\r\n  accountDetails = Model.attribute<string>('accountDetails');\r\n  message = Model.attribute<string>('message');\r\n  status = Model.attribute<WithdrawalStatus>('status');\r\n  \r\n  // Foreign keys\r\n  platformId = Model.attribute<number>('platformId');\r\n  userId = Model.attribute<number>('userId');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Relationships\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<WithdrawalPlatform>('platform');\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-requests/${this.id()}`;\r\n  }\r\n  \r\n  // Status helpers\r\n  isPending(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.PENDING;\r\n  }\r\n  \r\n  isApproved(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.APPROVED;\r\n  }\r\n  \r\n  isRejected(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.REJECTED;\r\n  }\r\n  \r\n  canBeModified(): boolean {\r\n    return this.isPending();\r\n  }\r\n  \r\n  // Display helpers\r\n  statusLabel(): string {\r\n    const status = this.status();\r\n    return app.translator.trans(`withdrawal.forum.status.${status}`).toString();\r\n  }\r\n  \r\n  statusColor(): string {\r\n    const status = this.status();\r\n    switch (status) {\r\n      case WITHDRAWAL_STATUS.APPROVED:\r\n        return 'success';\r\n      case WITHDRAWAL_STATUS.REJECTED:\r\n        return 'danger';\r\n      case WITHDRAWAL_STATUS.PENDING:\r\n      default:\r\n        return 'warning';\r\n    }\r\n  }\r\n}","import Model from 'flarum/common/Model';\r\n\r\nexport default class DepositPlatform extends Model {\r\n  name = Model.attribute<string>('name');\r\n  symbol = Model.attribute<string>('symbol');\r\n  network = Model.attribute<string>('network');\r\n  networkTypeId = Model.attribute('networkTypeId');\r\n  displayName = Model.attribute<string>('displayName');\r\n  minAmount = Model.attribute('minAmount');\r\n  maxAmount = Model.attribute('maxAmount');\r\n  fee = Model.attribute('fee');\r\n  address = Model.attribute('address');\r\n  qrCodeImageUrl = Model.attribute<string>('qrCodeImageUrl');\r\n  iconUrl = Model.attribute<string>('iconUrl');\r\n  iconClass = Model.attribute<string>('iconClass');\r\n  warningText = Model.attribute<string>('warningText');\r\n  networkConfig = Model.attribute('networkConfig');\r\n  isActive = Model.attribute('isActive');\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n}","import Model from 'flarum/common/Model';\r\n\r\nexport default class DepositRecord extends Model {\r\n  // Fixed: id() should return string to match Flarum's base Model interface\r\n  id = Model.attribute<string>('id');\r\n  userId = Model.attribute<number>('userId');\r\n  platformId = Model.attribute<number>('platformId');\r\n  platformAccount = Model.attribute<string>('platformAccount');\r\n  realName = Model.attribute<string>('realName');\r\n  amount = Model.attribute<number>('amount');\r\n  depositTime = Model.attribute('depositTime', Model.transformDate);\r\n  screenshotUrl = Model.attribute<string>('screenshotUrl');\r\n  userMessage = Model.attribute<string>('userMessage');\r\n  status = Model.attribute<string>('status');\r\n  processedAt = Model.attribute('processedAt', Model.transformDate);\r\n  processedBy = Model.attribute<number>('processedBy');\r\n  adminNotes = Model.attribute<string>('adminNotes');\r\n  creditedAmount = Model.attribute<number>('creditedAmount');\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n\r\n  // Relationships\r\n  user = Model.hasOne('user');\r\n  platform = Model.hasOne('platform');\r\n  processedByUser = Model.hasOne('processedByUser');\r\n\r\n  // Status constants\r\n  static STATUS_PENDING = 'pending';\r\n  static STATUS_APPROVED = 'approved';\r\n  static STATUS_REJECTED = 'rejected';\r\n\r\n  // Status check methods\r\n  isPending(): boolean {\r\n    return this.status() === DepositRecord.STATUS_PENDING;\r\n  }\r\n\r\n  isApproved(): boolean {\r\n    return this.status() === DepositRecord.STATUS_APPROVED;\r\n  }\r\n\r\n  isRejected(): boolean {\r\n    return this.status() === DepositRecord.STATUS_REJECTED;\r\n  }\r\n\r\n  getStatusColor(): string {\r\n    switch (this.status()) {\r\n      case DepositRecord.STATUS_PENDING:\r\n        return 'warning';\r\n      case DepositRecord.STATUS_APPROVED:\r\n        return 'success';\r\n      case DepositRecord.STATUS_REJECTED:\r\n        return 'error';\r\n      default:\r\n        return 'secondary';\r\n    }\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport UnifiedManagementPage from './components/UnifiedManagementPage';\r\nimport WithdrawalPlatform from '../common/models/WithdrawalPlatform';\r\nimport WithdrawalRequest from '../common/models/WithdrawalRequest';\r\nimport DepositPlatform from '../common/models/DepositPlatform';\r\nimport DepositRecord from '../common/models/DepositRecord';\r\n\r\napp.initializers.add('wusong8899-withdrawal', () => {\r\n  // Register models in store\r\n  app.store.models['withdrawal-platforms'] = WithdrawalPlatform;\r\n  app.store.models['withdrawal-requests'] = WithdrawalRequest;\r\n  app.store.models['deposit-platforms'] = DepositPlatform;\r\n  app.store.models['deposit-records'] = DepositRecord;\r\n\r\n  app.extensionData\r\n    .for('wusong8899-withdrawal')\r\n    .registerPage(UnifiedManagementPage);\r\n});"],"names":["ConfirmModal","Modal","title","dangerous","modalIcon","icon","message","confirmText","cancelText","onConfirm","onCancel","Button","app","GenericManagementPage","ExtensionPage","config","vnode","LoadingIndicator","m","tab","activeTab","props","formData","error","platform","platformName","transaction","status","prefix","key","value","GeneralSettingsSection","Component","withAttr","FormValidator","fieldName","displayName","minLength","min","max","numValue","_url","condition","AddPlatformForm","Stream","validator","nameLabel","symbolLabel","minAmountLabel","maxAmountLabel","feeLabel","minVal","errorMessage","iconUrlLabel","result","GenericPlatformListItem","type","onToggleStatus","onDelete","style","platformData","translationPrefix","Switch","id","name","symbol","network","minAmount","maxAmount","fee","address","isActive","createdDate","dateDisplay","humanTime","e","iconUrl","iconClass","PlatformManagementSection","platforms","submittingPlatform","onAddPlatform","onTogglePlatformStatus","onDeletePlatform","WithdrawalRequestItem","request","showActions","showDelete","requestId","amount","accountDetails","userName","userData","platformSymbol","statusClass","RequestManagementSection","requests","onUpdateRequestStatus","onDeleteRequest","pendingRequests","r","processedRequests","DepositRecordManagementSection","records","loading","record","attrs","recordId","isProcessing","user","depositTime","createdAt","platformId","p","defaultAmount","creditedAmount","notes","reason","AddDepositPlatformForm","submitting","addressLabel","maxVal","qrCodeLabel","DepositPlatformManagementSection","DEFAULT_TIMEOUT","DEFAULT_HEADERS","buildRequestConfig","method","endpoint","body","params","headers","timeout","fullUrl","requestConfig","urlParams","parseError","response","apiRequest","options","showSuccessAlert","showErrorAlert","successMessage","validateResponse","transformResponse","onSuccess","onError","finalResponse","apiError","apiGet","apiPost","apiPatch","apiDelete","createWithdrawalPlatformOperations","currentStatus","createDepositPlatformOperations","createWithdrawalRequestOperations","createDepositRecordOperations","assertApiPayload","WithdrawalTabPlaceholder","DepositsTabPlaceholder","UnifiedManagementPage","depositOperations","depositRecordOperations","usersToLoad","userRelation","userId","userPromises","loadedUsers","index","storeRecord","WithdrawalPlatform","Model","WITHDRAWAL_STATUS","WithdrawalRequest","DepositPlatform","_DepositRecord","DepositRecord"],"mappings":"oDAoBA,MAAqBA,UAAqBC,CAAyB,CACjE,WAAY,CACV,MAAO,cACT,CAEA,OAAQ,CACN,KAAM,CAAE,MAAAC,EAAO,UAAAC,EAAY,GAAO,KAAMC,EAAYD,EAAY,8BAAgC,wBAAA,EAA6B,KAAK,MAElI,OACE,EAAC,OAAA,KACEC,GACC,EAAC,QAAK,UAAW,qBAAqBD,EAAY,YAAc,EAAE,EAAA,EAC/DE,EAAKD,CAAS,CACjB,EAEDF,CACH,CAEJ,CAEA,SAAU,CACR,KAAM,CACJ,QAAAI,EACA,YAAAC,EAAc,UACd,WAAAC,EAAa,SACb,UAAAC,EACA,SAAAC,EACA,UAAAP,EAAY,EAAA,EACV,KAAK,MAET,SACG,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,OAAI,UAAU,wBACZG,CACH,IAEC,MAAA,CAAI,UAAU,cACb,EAAC,MAAA,CAAI,UAAU,aAAA,EACb,EAACK,EAAA,CACC,UAAU,SACV,QAAS,IAAM,CACbD,EAAA,EACAE,EAAI,MAAM,MAAA,CACZ,CAAA,EAECJ,CAAA,EAEH,EAACG,EAAA,CACC,UAAW,kBAAkBR,EAAY,SAAW,SAAS,GAC7D,QAAS,IAAM,CACbM,EAAA,EACAG,EAAI,MAAM,MAAA,CACZ,CAAA,EAECL,CAAA,CAEL,CACF,CACF,CAEJ,CACF,CCjBA,MAA8BM,UAGpBC,CAAc,CAYtB,aAAc,CACZ,MAAA,EAVF,KAAU,UAAyB,CAAA,EACnC,KAAU,aAA+B,CAAA,EACzC,KAAA,QAAU,GACV,KAAU,mBAAqB,GAQ7B,MAAMC,EAAS,KAAK,UAAA,EACpB,KAAK,UAAYA,EAAO,KAAK,CAAC,GAAG,KAAO,EAC1C,CAEA,OAAOC,EAAyB,CAC9B,MAAM,OAAOA,CAAK,EAClB,KAAK,SAAA,CACP,CAEA,SAAU,CACR,GAAI,KAAK,QACP,SAAQC,EAAA,IAAiB,EAG3B,MAAMF,EAAS,KAAK,UAAA,EAEpB,OACEG,EAAC,MAAA,CAAI,UAAW,GAAGH,EAAO,WAAW,gBAAA,EACnCG,EAAC,MAAA,CAAI,UAAU,WAAA,EACbA,EAAC,UAAIH,EAAO,SAAU,EAErBA,EAAO,mBACNG,EAAC,OAAI,UAAU,iBAAA,EACZA,EAAEH,EAAO,kBAAmB,CAC3B,gBAAiB,KAAK,YAAY,KAAK,IAAI,CAAA,CAC5C,CACH,EAGDA,EAAO,KAAK,OAAS,GACpBG,EAAC,MAAA,CAAI,UAAU,WAAA,IACZ,MAAA,CAAI,UAAU,iBACZH,EAAO,KAAK,IAAII,GACfD,EAAC,SAAA,CACC,IAAKC,EAAI,IACT,UAAW,iBAAiB,KAAK,YAAcA,EAAI,IAAM,SAAW,EAAE,GACtE,QAAS,IAAM,CAAE,KAAK,UAAYA,EAAI,GAAK,CAAA,EAE1CA,EAAI,KAAA,CAER,CACH,EAEAD,EAAC,MAAA,CAAI,UAAU,mBAAA,EACZ,KAAK,wBACR,CACF,EAGDH,EAAO,KAAK,SAAW,GACtBG,EAAC,MAAA,CAAI,UAAU,oBACZ,KAAK,uBAAA,CACR,CAEJ,CACF,CAEJ,CAEU,wBAA2C,CACnD,MAAMH,EAAS,KAAK,UAAA,EACdK,EAAYL,EAAO,KAAK,QAAYI,EAAI,MAAQ,KAAK,SAAS,EAEpE,GAAI,CAACC,EAAW,OAAO,KAEvB,MAAMC,EAAQ,CAEZ,UAAW,KAAK,UAChB,aAAc,KAAK,aACnB,mBAAoB,KAAK,mBAGzB,cAAe,KAAK,YAAY,KAAK,IAAI,EACzC,uBAAwB,KAAK,qBAAqB,KAAK,IAAI,EAC3D,iBAAkB,KAAK,eAAe,KAAK,IAAI,EAG/C,GAAIN,EAAO,uBAAyB,CAClC,0BAA2B,KAAK,wBAAwB,KAAK,IAAI,CAAA,EAInE,GAAIK,EAAU,MAAQA,EAAU,MAAA,EAAU,CAAA,CAAC,EAG7C,OAAOF,EAAEE,EAAU,UAAWC,CAAK,CACrC,CAGA,MAAgB,YAAYC,EAA8B,CACxD,GAAI,KAAK,mBAAoB,OAE7B,KAAK,mBAAqB,GAC1B,MAAMP,EAAS,KAAK,UAAA,EAEpB,GAAI,CACF,MAAMA,EAAO,mBAAmB,OAAOO,CAAQ,EAC/C,MAAM,KAAK,cAAA,CACb,OAASC,EAAO,CACd,QAAQ,MAAM,yBAA0BA,CAAK,CAE/C,QAAA,CACE,KAAK,mBAAqB,GAC1BL,EAAE,OAAA,CACJ,CACF,CAEA,MAAgB,qBAAqBM,EAAoC,CACvE,MAAMT,EAAS,KAAK,UAAA,EACpB,GAAI,CACF,MAAMA,EAAO,mBAAmB,aAAaS,CAAQ,EACrD,MAAM,KAAK,cAAA,EACXN,EAAE,OAAA,CACJ,OAASK,EAAO,CACd,QAAQ,MAAM,kCAAmCA,CAAK,CACxD,CACF,CAEU,eAAeC,EAA2B,CAClD,MAAMT,EAAS,KAAK,UAAA,EACdU,GAAgB,OAAOD,EAAS,MAAS,WAAaA,EAAS,KAAA,EAASA,EAAS,OAAS,mBAEhGZ,EAAI,MAAM,KAAKZ,EAAc,CAC3B,MAAOY,EAAI,WAAW,MAAM,GAAGG,EAAO,aAAa,cAAc,uBAAuB,EACxF,QAASH,EAAI,WAAW,MAAM,GAAGG,EAAO,aAAa,cAAc,0BAA2B,CAAE,KAAMU,CAAA,CAAc,EACpH,YAAab,EAAI,WAAW,MAAM,GAAGG,EAAO,aAAa,cAAc,wBAAwB,EAC/F,WAAYH,EAAI,WAAW,MAAM,GAAGG,EAAO,aAAa,cAAc,uBAAuB,EAC7F,UAAW,GACX,KAAM,eACN,UAAW,SAAY,CACrB,GAAI,CACF,MAAMA,EAAO,mBAAmB,OAAOS,CAAQ,EAC/C,MAAM,KAAK,cAAA,EACXN,EAAE,OAAA,EAEFN,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,GAAGG,EAAO,aAAa,cAAc,iBAAiB,CAAA,CAE/E,OAASQ,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAC/CX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,GAAGG,EAAO,aAAa,cAAc,eAAe,CAAA,CAE7E,CACF,EACA,SAAU,IAAM,CACdH,EAAI,MAAM,MAAA,CACZ,CAAA,CACD,CACH,CAGA,MAAgB,wBAAwBc,EAA2BC,EAA+B,CAChG,MAAMZ,EAAS,KAAK,UAAA,EACpB,GAAKA,EAAO,sBAEZ,GAAI,CACF,MAAMA,EAAO,sBAAsB,aAAaW,EAAaC,CAAM,EACnE,MAAM,KAAK,iBAAA,EAEX,MAAMC,EAASb,EAAO,aAAa,mBAAqBA,EAAO,aAAa,eAC5EH,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,GAAGgB,CAAM,IAAID,CAAM,UAAU,CAAA,CAEtD,OAASJ,EAAO,CACd,QAAQ,MAAM,8BAA+BA,CAAK,EAClD,MAAMK,EAASb,EAAO,aAAa,mBAAqBA,EAAO,aAAa,eAC5EH,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,GAAGgB,CAAM,eAAe,CAAA,CAEjD,CACF,CAGA,MAAgB,UAA0B,CACxC,GAAI,CACF,MAAM,KAAK,cAAA,EACP,KAAK,UAAA,EAAY,uBACnB,MAAM,KAAK,iBAAA,CAEf,OAASL,EAAO,CACd,QAAQ,MAAM,sBAAuBA,CAAK,CAC5C,QAAA,CACE,KAAK,QAAU,GACfL,EAAE,OAAA,CACJ,CACF,CAEA,MAAgB,eAA+B,CAC7C,MAAMH,EAAS,KAAK,UAAA,EACpB,GAAI,CACF,KAAK,UAAY,MAAMA,EAAO,mBAAmB,KAAA,EACjD,QAAQ,IAAI,oBAAqB,KAAK,SAAS,CACjD,OAASQ,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAC/C,KAAK,UAAY,CAAA,CACnB,CACF,CAEA,MAAgB,kBAAkC,CAChD,MAAMR,EAAS,KAAK,UAAA,EACpB,GAAKA,EAAO,sBAEZ,GAAI,CACF,KAAK,aAAe,MAAMA,EAAO,sBAAsB,KAAA,EACvD,QAAQ,IAAI,uBAAwB,KAAK,YAAY,CACvD,OAASQ,EAAO,CACd,QAAQ,MAAM,8BAA+BA,CAAK,EAClD,KAAK,aAAe,CAAA,CACtB,CACF,CAGA,MAAgB,YAAYM,EAAaC,EAA8B,CACrE,GAAI,CACF,MAAMlB,EAAI,QAAQ,CAChB,OAAQ,OACR,IAAKA,EAAI,MAAM,UAAU,QAAQ,EAAI,YACrC,KAAM,CAAE,CAACiB,CAAG,EAAGC,CAAA,CAAM,CACtB,EAGDlB,EAAI,MAAM,eAAe,CAAE,CAACiB,CAAG,EAAGC,EAAO,CAE3C,OAASP,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9B,wBAAA,CAEJ,CACF,CACF,CCpTA,MAAqBmB,UAA+BC,CAAuC,CACzF,MAAyB,CACvB,OACE,EAAC,OAAI,UAAU,kCAAA,IACZ,KAAA,KAAG,kBAAgB,EAEpB,EAAC,MAAA,CAAI,UAAU,QACb,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KAAOpB,EAAI,WAAW,MAAM,0CAA0C,CAAE,EACzE,EAAC,QAAA,CACC,KAAK,MACL,UAAU,cACV,YAAY,oEACZ,MAAOA,EAAI,MAAM,UAAU,oCAAoC,GAAK,GACpE,QAASqB,EAAS,QAAUH,GAC1B,KAAK,MAAM,gBAAgB,qCAAsCA,CAAK,CAAA,CACxE,CAAA,EAEF,EAAC,QAAA,CAAM,UAAU,UAAA,EAAYlB,EAAI,WAAW,MAAM,+CAA+C,CAAE,CACrG,CACF,CACF,CAEJ,CACF,CChBO,MAAMsB,CAAc,CAApB,aAAA,CACL,KAAQ,OAA4B,CAAA,CAAC,CAKrC,SAASJ,EAAYK,EAAmBC,EAA4B,CAClE,OAAI,CAACN,GAAU,OAAOA,GAAU,UAAYA,EAAM,KAAA,IAAW,KAC3D,KAAK,OAAO,KAAK,CACf,MAAOK,EACP,QAAS,GAAGC,GAAeD,CAAS,cAAA,CACrC,EAEI,IACT,CAKA,UAAUL,EAAeO,EAAmBF,EAAmBC,EAA4B,CACzF,OAAIN,GAASA,EAAM,OAASO,GAC1B,KAAK,OAAO,KAAK,CACf,MAAOF,EACP,QAAS,GAAGC,GAAeD,CAAS,qBAAqBE,CAAS,aAAA,CACnE,EAEI,IACT,CAKA,YAAYP,EAAwBQ,EAAcC,EAAcJ,EAAoBC,EAA4B,CAC9G,MAAMI,EAAW,OAAOV,GAAU,SAAW,WAAWA,CAAK,EAAIA,EAEjE,OAAI,MAAMU,CAAQ,GAChB,KAAK,OAAO,KAAK,CACf,MAAOL,GAAa,SACpB,QAAS,GAAGC,GAAe,OAAO,yBAAA,CACnC,EACM,OAGLE,IAAQ,QAAaE,EAAWF,GAClC,KAAK,OAAO,KAAK,CACf,MAAOH,GAAa,SACpB,QAAS,GAAGC,GAAe,OAAO,qBAAqBE,CAAG,EAAA,CAC3D,EAGCC,IAAQ,QAAaC,EAAWD,GAClC,KAAK,OAAO,KAAK,CACf,MAAOJ,GAAa,SACpB,QAAS,GAAGC,GAAe,OAAO,oBAAoBG,CAAG,EAAA,CAC1D,EAGI,KACT,CAKA,IAAIT,EAAeK,EAAmBC,EAA4B,CAChE,GAAIN,GAASA,EAAM,OACjB,GAAI,CACF,MAAMW,EAAO,IAAI,IAAIX,CAAK,CAG5B,MAAQ,CACN,KAAK,OAAO,KAAK,CACf,MAAOK,EACP,QAAS,GAAGC,GAAeD,CAAS,sBAAA,CACrC,CACH,CAEF,OAAO,IACT,CAKA,OAAOO,EAAoBP,EAAmB7B,EAAuB,CACnE,OAAKoC,GACH,KAAK,OAAO,KAAK,CACf,MAAOP,EACP,QAAA7B,CAAA,CACD,EAEI,IACT,CAKA,WAA8B,CAE5B,MAAO,CACL,QAFc,KAAK,OAAO,SAAW,EAGrC,OAAQ,KAAK,OACb,kBAAmB,KAAK,OAAO,OAAS,EAAI,KAAK,OAAO,CAAC,EAAE,QAAU,MAAA,CAEzE,CAKA,OAAc,CACZ,YAAK,OAAS,CAAA,EACP,IACT,CACF,CClHA,MAAqBqC,UAAwBX,CAAgC,CAA7E,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAQ,KAAOY,EAAO,EAAE,EACxB,KAAQ,OAASA,EAAO,EAAE,EAC1B,KAAQ,QAAUA,EAAO,EAAE,EAC3B,KAAQ,UAAYA,EAAO,EAAE,EAC7B,KAAQ,UAAYA,EAAO,EAAE,EAC7B,KAAQ,IAAMA,EAAO,EAAE,EACvB,KAAQ,QAAUA,EAAO,EAAE,EAC3B,KAAQ,UAAYA,EAAO,EAAE,CAAA,CAE7B,MAAyB,CACvB,OACE1B,EAAC,OAAI,UAAU,sCAAA,IACZ,MAAA,CAAI,UAAU,YAAA,EACbA,EAAC,MAAA,CAAI,UAAU,YACbA,EAAC,MAAA,CAAI,UAAU,UAAA,EACbA,EAAC,QAAA,KAAON,EAAI,WAAW,MAAM,iCAAiC,CAAE,EAChEM,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAaN,EAAI,WAAW,MAAM,4CAA4C,EAC9E,KAAM,KAAK,IAAA,CAAA,CAEf,EACAM,EAAC,MAAA,CAAI,UAAU,UAAA,EACbA,EAAC,QAAA,KAAON,EAAI,WAAW,MAAM,mCAAmC,CAAE,EAClEM,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,oBACZ,KAAM,KAAK,MAAA,CAAA,CAEf,EACAA,EAAC,MAAA,CAAI,UAAU,UAAA,EACbA,EAAC,QAAA,KAAON,EAAI,WAAW,MAAM,oCAAoC,CAAE,EACnEM,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,kCACZ,KAAM,KAAK,OAAA,CAAA,EAEbA,EAAC,QAAA,CAAM,UAAU,UAAA,EAAYN,EAAI,WAAW,MAAM,yCAAyC,CAAE,CAC/F,CACF,EAEAM,EAAC,MAAA,CAAI,UAAU,UAAA,EACbA,EAAC,MAAA,CAAI,UAAU,UAAA,EACbA,EAAC,QAAA,KAAON,EAAI,WAAW,MAAM,uCAAuC,CAAE,EACtEM,EAAC,QAAA,CACC,KAAK,SACL,KAAK,aACL,UAAU,cACV,YAAY,QACZ,KAAM,KAAK,SAAA,CAAA,CAEf,EACAA,EAAC,MAAA,CAAI,UAAU,UAAA,EACbA,EAAC,QAAA,KAAON,EAAI,WAAW,MAAM,uCAAuC,CAAE,EACtEM,EAAC,QAAA,CACC,KAAK,SACL,KAAK,aACL,UAAU,cACV,YAAY,OACZ,KAAM,KAAK,SAAA,CAAA,CAEf,EACAA,EAAC,MAAA,CAAI,UAAU,UAAA,EACbA,EAAC,QAAA,KAAON,EAAI,WAAW,MAAM,gCAAgC,CAAE,EAC/DM,EAAC,QAAA,CACC,KAAK,SACL,KAAK,aACL,UAAU,cACV,YAAY,SACZ,KAAM,KAAK,GAAA,CAAA,CAEf,CACF,IAEC,MAAA,CAAI,UAAU,YACbA,EAAC,MAAA,CAAI,UAAU,cACZ,QAAA,KAAON,EAAI,WAAW,MAAM,qCAAqC,CAAE,EACpEM,EAAC,QAAA,CACC,KAAK,MACL,UAAU,cACV,YAAY,+BACZ,KAAM,KAAK,OAAA,CAAA,IAEZ,QAAA,CAAM,UAAU,YAAYN,EAAI,WAAW,MAAM,0CAA0C,CAAE,CAChG,EACAM,EAAC,MAAA,CAAI,UAAU,YACbA,EAAC,QAAA,KAAON,EAAI,WAAW,MAAM,uCAAuC,CAAE,EACtEM,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,eACZ,KAAM,KAAK,SAAA,CAAA,EAEbA,EAAC,QAAA,CAAM,UAAU,UAAA,EAAYN,EAAI,WAAW,MAAM,4CAA4C,CAAE,CAClG,CACF,EAEAM,EAAC,MAAA,CAAI,UAAU,YAAA,EACbA,EAACP,EAAA,CACC,UAAU,yBACV,QAAS,KAAK,MAAM,WACpB,SAAU,KAAK,MAAM,WACrB,QAAS,KAAK,aAAa,KAAK,IAAI,CAAA,EAEnCC,EAAI,WAAW,MAAM,uCAAuC,CAAA,CAEjE,CACF,CACF,CAEJ,CAEQ,cAAwB,CAC9B,MAAMiC,EAAY,IAAIX,EAEtB,GAAI,CAEF,MAAMY,EAAYlC,EAAI,WAAW,MAAM,iCAAiC,EAAE,SAAA,EACpEmC,EAAcnC,EAAI,WAAW,MAAM,mCAAmC,EAAE,SAAA,EACxEoC,EAAiBpC,EAAI,WAAW,MAAM,uCAAuC,EAAE,SAAA,EAC/EqC,EAAiBrC,EAAI,WAAW,MAAM,uCAAuC,EAAE,SAAA,EAC/EsC,EAAWtC,EAAI,WAAW,MAAM,gCAAgC,EAAE,SAAA,EAExEiC,EACG,SAAS,KAAK,KAAA,EAAQ,OAAQC,CAAS,EACvC,SAAS,KAAK,SAAU,SAAUC,CAAW,EAC7C,YAAY,KAAK,YAAa,EAAG,OAAW,YAAaC,CAAc,EACvE,YAAY,KAAK,UAAA,EAAa,EAAG,OAAW,YAAaC,CAAc,EACvE,YAAY,KAAK,IAAA,EAAO,EAAG,OAAW,MAAOC,CAAQ,EAGxD,MAAMC,EAAS,WAAW,KAAK,UAAA,CAAW,EAE1C,GADe,WAAW,KAAK,UAAA,CAAW,EAC7BA,EAAQ,CACnB,MAAMC,EAAexC,EAAI,WAAW,MAAM,0CAA0C,EAAE,SAAA,EACtFiC,EAAU,OAAO,GAAO,YAAaO,CAAY,CACnD,CAGA,GAAI,KAAK,QAAA,GAAa,KAAK,QAAA,EAAU,OAAQ,CAC3C,MAAMC,EAAezC,EAAI,WAAW,MAAM,qCAAqC,EAAE,SAAA,EACjFiC,EAAU,IAAI,KAAK,QAAA,EAAW,UAAWQ,CAAY,CACvD,CAEA,MAAMC,EAAST,EAAU,UAAA,EAEzB,MAAI,CAACS,EAAO,SAAWA,EAAO,mBAC5B1C,EAAI,OAAO,KAAK,CAAE,KAAM,QAAS,YAAa,EAAA,EAAQ0C,EAAO,iBAAiB,EAGzEA,EAAO,OAChB,OAAS/B,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EAC7CX,EAAI,OAAO,KAAK,CAAE,KAAM,QAAS,YAAa,EAAA,EAAQ,mBAAmB,EAClE,EACT,CACF,CAEA,MAAc,cAA8B,CAG1C,GAFI,KAAK,MAAM,YAEX,CAAC,KAAK,eAAgB,OAE1B,MAAMU,EAA6B,CACjC,KAAM,KAAK,KAAA,EACX,OAAQ,KAAK,OAAA,EACb,QAAS,KAAK,QAAA,EACd,UAAW,KAAK,UAAA,EAChB,UAAW,KAAK,UAAA,EAChB,IAAK,KAAK,IAAA,EACV,QAAS,KAAK,QAAA,EACd,UAAW,KAAK,UAAA,CAAU,EAG5B,GAAI,CACF,MAAM,KAAK,MAAM,SAASA,CAAQ,EAClC,KAAK,UAAA,CACP,MAAQ,CAER,CACF,CAEQ,WAAkB,CACxB,KAAK,KAAK,EAAE,EACZ,KAAK,OAAO,EAAE,EACd,KAAK,QAAQ,EAAE,EACf,KAAK,UAAU,EAAE,EACjB,KAAK,UAAU,EAAE,EACjB,KAAK,IAAI,EAAE,EACX,KAAK,QAAQ,EAAE,EACf,KAAK,UAAU,EAAE,EACjBJ,EAAE,OAAA,CACJ,CACF,CChLA,MAAqBqC,UAAgCvB,CAAwC,CAC3F,KAAKhB,EAAsE,CACzE,KAAM,CAAE,SAAAQ,EAAU,KAAAgC,EAAM,eAAAC,EAAgB,SAAAC,EAAU,MAAAC,EAAQ,QAAW3C,EAAM,MAE3E,OAAI2C,IAAU,OACL,KAAK,gBAAgBnC,EAAUgC,EAAMC,EAAgBC,CAAQ,EAE7D,KAAK,gBAAgBlC,EAAUgC,EAAMC,EAAgBC,CAAQ,CAExE,CAEQ,gBACNlC,EACAgC,EACAC,EACAC,EACkB,CAClB,MAAME,EAAe,KAAK,oBAAoBpC,CAAQ,EAChDqC,EAAoBL,IAAS,aAAe,6BAA+B,qCAEjF,OACEtC,EAAC,MAAA,CAAI,IAAK0C,EAAa,GAAI,UAAW,GAAGJ,CAAI,UAAA,EAC3CtC,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,eAAA,EACrBtC,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,kBAAA,EACrBtC,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,mBAAmBI,EAAa,SAAW,SAAW,UAAU,EAAA,EACrFA,EAAa,SAAW,KAAO,IAClC,EACA1C,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,eAAA,EAAkBI,EAAa,WAAY,EACnE1C,EAAC,OAAA,CAAK,UAAU,aAAA,EAAc,IAAE0C,EAAa,EAAG,EAC/CA,EAAa,SAAW1C,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,kBAAA,EAAoB,IAAEI,EAAa,QAAQ,GAAC,CAC/F,EACA1C,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,oBACrBtC,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,kBAAA,EAAoB,QACpCI,EAAa,UAAU,WAASA,EAAa,UAClD,WAAWA,EAAa,GAAG,GAC3BJ,IAAS,WAAa,eAAeI,EAAa,QAAU,SAAW,UAAU,EACpF,EACCA,EAAa,aACZ1C,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,eAAA,EAAkBI,EAAa,WAAY,CAEvE,CACF,EACA1C,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,kBAAA,EACrBtC,EAACP,EAAA,CACC,UAAW,UAAUiD,EAAa,SAAW,oBAAsB,iBAAiB,GACpF,QAAS,IAAMH,EAAejC,CAAQ,CAAA,EAErCZ,EAAI,WAAW,MAAM,GAAGiD,CAAiB,IAAID,EAAa,SAAW,UAAY,QAAQ,EAAE,CAAA,EAE9F1C,EAACP,EAAA,CACC,UAAU,wBACV,QAAS,IAAM+C,EAASlC,CAAQ,CAAA,EAE/BZ,EAAI,WAAW,MAAM,GAAGiD,CAAiB,SAAS,CAAA,CAEvD,CACF,CAEJ,CAEQ,gBACNrC,EACAgC,EACAC,EACAC,EACkB,CAClB,MAAME,EAAe,KAAK,oBAAoBpC,CAAQ,EAChDqC,EAAoBL,IAAS,aAAe,6BAA+B,qCAEjF,OACEtC,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,kBAAA,EACrBtC,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,0BAAA,EACrBtC,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,uBAAA,EACpB,KAAK,mBAAmBhC,CAAQ,CACnC,EAEAN,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,yBACrBtC,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,0BAAA,EACrBtC,EAAC,SAAA,KAAQ0C,EAAa,IAAK,EAC3B1C,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,8BAAA,EACrBI,EAAa,OACbA,EAAa,SAAW,KAAKA,EAAa,OAAO,GACpD,CACF,EAEA1C,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,0BAAA,EACrBtC,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,yBAAA,EAA2B,QAC3CI,EAAa,UAAU,IAAEA,EAAa,MAC9C,EACCA,EAAa,WACZ1C,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,yBAAA,EAA2B,QAC3CI,EAAa,UAAU,IAAEA,EAAa,MAC9C,EAEDA,EAAa,KACZ1C,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,yBAAA,EAA2B,QAC3CI,EAAa,IAAI,IAAEA,EAAa,MACxC,EAEDJ,IAAS,WACRtC,EAAC,OAAA,CAAK,UAAW,GAAGsC,CAAI,yBAAA,EAA2B,YACvCI,EAAa,QAAU,SAAW,UAC9C,CAEJ,CACF,EAEA1C,EAAC,MAAA,CAAI,UAAW,GAAGsC,CAAI,0BAAA,EACrBtC,EAAC4C,EAAA,CACC,MAAOF,EAAa,SACpB,SAAU,SAAY,CACpB,MAAMH,EAAejC,CAAQ,EAC7BN,EAAE,OAAA,CACJ,CAAA,EAEC0C,EAAa,SACVhD,EAAI,WAAW,MAAM,GAAGiD,CAAiB,SAAS,EAClDjD,EAAI,WAAW,MAAM,GAAGiD,CAAiB,WAAW,CAAA,EAI1D3C,EAACP,EAAA,CACC,UAAU,mCACV,KAAK,eACL,QAAS,SAAY,CACnB,MAAM+C,EAASlC,CAAQ,EACvBN,EAAE,OAAA,CACJ,EACA,MAAON,EAAI,WAAW,MAAM,GAAGiD,CAAiB,SAAS,CAAA,CAAA,CAE7D,CACF,CACF,CAEJ,CAEQ,oBAAoBrC,EAA2B,CAErD,MAAMuC,EAAK,OAAOvC,EAAS,IAAO,WAAaA,EAAS,KAAOA,EAAS,GAClEwC,GAAQ,OAAOxC,EAAS,MAAS,WAAaA,EAAS,OAASA,EAAS,YAAY,OAAS,mBAC9FyC,GAAU,OAAOzC,EAAS,QAAW,WAAaA,EAAS,SAAWA,EAAS,YAAY,SAAW,GACtG0C,GAAW,OAAO1C,EAAS,SAAY,WAAaA,EAAS,UAAYA,EAAS,YAAY,UAAY,KAC1GY,GAAe,OAAOZ,EAAS,aAAgB,WAAaA,EAAS,cAAgBA,EAAS,YAAY,cAAgBwC,EAC1HG,GAAa,OAAO3C,EAAS,WAAc,WAAaA,EAAS,YAAcA,EAAS,YAAY,YAAc,MAClH4C,GAAa,OAAO5C,EAAS,WAAc,WAAaA,EAAS,YAAcA,EAAS,YAAY,YAAc,MAClH6C,GAAO,OAAO7C,EAAS,KAAQ,WAAaA,EAAS,MAAQA,EAAS,YAAY,MAAQ,MAC1F8C,GAAW,OAAO9C,EAAS,SAAY,WAAaA,EAAS,UAAYA,EAAS,YAAY,UAAY,KAC1G+C,GAAY,OAAO/C,EAAS,UAAa,WAAaA,EAAS,WAAaA,EAAS,YAAY,WAAa,GAC9GgD,GAAe,OAAOhD,EAAS,WAAc,WAAaA,EAAS,YAAcA,EAAS,YAAY,YAAc,KAE1H,IAAIiD,EAAgC,MACpC,GAAID,EACF,GAAI,CACFC,EAAcC,EAAUF,CAAW,CACrC,OAASG,EAAG,CACV,QAAQ,MAAM,yBAA0BA,CAAC,EACzCF,EAAc,cAChB,CAGF,MAAO,CACL,GAAAV,EACA,KAAAC,EACA,OAAAC,EACA,QAAAC,EACA,YAAA9B,EACA,UAAA+B,EACA,UAAAC,EACA,IAAAC,EACA,QAAAC,EACA,SAAAC,EACA,YAAAC,EACA,YAAAC,CAAA,CAEJ,CAEQ,mBAAmBjD,EAA6C,CACtE,MAAMoD,EAAU,OAAOpD,EAAS,SAAY,WAAaA,EAAS,QAAA,EAAYA,EAAS,YAAY,QAC7FqD,EAAY,OAAOrD,EAAS,WAAc,WAAaA,EAAS,UAAA,EAAcA,EAAS,YAAY,UACnGyC,EAAS,OAAOzC,EAAS,QAAW,WAAaA,EAAS,OAAA,EAAWA,EAAS,YAAY,OAEhG,GAAIoD,EACF,SAAQ,MAAA,CAAI,IAAKA,EAAS,IAAKX,EAAQ,UAAU,uBAAuB,EAG1E,GAAIY,EACF,OAAOxE,EAAKwE,CAAS,EAIvB,OAAQZ,EAAA,CACN,IAAK,OACH,OAAO/C,EAAC,OAAA,CAAK,UAAU,oCAAA,EAAqC,GAAC,EAC/D,IAAK,OACH,OAAOA,EAAC,OAAA,CAAK,UAAU,oCAAA,EAAqC,GAAC,EAC/D,IAAK,MACH,OAAOA,EAAC,OAAA,CAAK,UAAU,mCAAA,EAAoC,GAAC,EAC9D,IAAK,MACH,OAAOA,EAAC,OAAA,CAAK,UAAU,mCAAA,EAAoC,GAAC,EAC9D,QACE,OAAOb,EAAK,cAAc,CAAA,CAEhC,CACF,CC/NA,MAAqByE,UAAkC9C,CAA0C,CAC/F,MAAyB,CACvB,KAAM,CAAE,UAAA+C,EAAW,mBAAAC,EAAoB,cAAAC,EAAe,uBAAAC,EAAwB,iBAAAC,CAAA,EAAqB,KAAK,MAExG,OACE,EAAC,MAAA,CAAI,UAAU,kCAAA,EACb,EAAC,KAAA,KAAIvE,EAAI,WAAW,MAAM,kCAAkC,CAAE,EAE9D,EAAC+B,EAAA,CACC,SAAUsC,EACV,WAAYD,CAAA,CAAA,EAGd,EAAC,MAAA,CAAI,UAAU,uCAAA,EACZD,EAAU,SAAW,EACpB,EAAC,SAAGnE,EAAI,WAAW,MAAM,kCAAkC,CAAE,EAE7DmE,EAAU,IAAKvD,GACb,EAAC+B,EAAA,CACC,IAAK/B,EAAS,KAAA,GAAUA,EAAS,IAAM,KAAK,OAAA,EAC5C,SAAAA,EACA,KAAK,aACL,MAAM,OACN,eAAgB0D,EAChB,SAAUC,CAAA,CAAA,CAEb,CAEL,CACF,CAEJ,CACF,CChCA,MAAqBC,UAA8BpD,CAAsC,CACvF,MAAyB,CACvB,MAAMqD,EAAU,KAAK,MAAM,QACrB,CAAE,YAAAC,EAAa,WAAAC,EAAa,EAAA,EAAU,KAAK,MAG3CC,EAAY,OAAOH,EAAQ,IAAO,WAAaA,EAAQ,KAAOA,EAAQ,GACtEI,EAAS,OAAOJ,EAAQ,QAAW,WAAaA,EAAQ,SAAYA,EAAQ,YAAY,QAAU,EAClG1D,EAAS,OAAO0D,EAAQ,QAAW,WAAaA,EAAQ,SAAYA,EAAQ,YAAY,QAAU,UAClGK,EAAiB,OAAOL,EAAQ,gBAAmB,WAAaA,EAAQ,eAAA,EAC3EA,EAAQ,YAAY,gBAAkBA,EAAQ,YAAY,iBAAmB,MAC1Eb,EAAc,OAAOa,EAAQ,WAAc,WAAaA,EAAQ,YAAeA,EAAQ,YAAY,WAAa,KAGtH,IAAIM,EAAW,eACf,GAAI,OAAON,EAAQ,MAAS,WAAY,CACtC,MAAMO,EAAWP,EAAQ,KAAA,EACrBO,GAAY,OAAOA,EAAS,aAAgB,WAC9CD,EAAWC,EAAS,YAAA,EACXA,GAAYA,EAAS,YAAY,cAC1CD,EAAWC,EAAS,WAAW,YAEnC,CAGA,IAAInE,EAAe,mBACfoE,EAAiB,MAErB,GAAI,OAAOR,EAAQ,UAAa,WAAY,CAC1C,MAAM7D,EAAW6D,EAAQ,SAAA,EACrB7D,IACFC,EAAe,OAAOD,EAAS,MAAS,WAAaA,EAAS,KAAA,EAAUA,EAAS,YAAY,MAAQ,mBACrGqE,EAAiB,OAAOrE,EAAS,QAAW,WAAaA,EAAS,OAAA,EAAYA,EAAS,YAAY,QAAU,MAEjH,CAEA,MAAMsE,EAAc,UAAUnE,CAAM,GAEpC,IAAI8C,EAAgC,MACpC,GAAID,EACF,GAAI,CACFC,EAAcC,EAAUF,CAAW,CACrC,OAASG,EAAG,CACV,QAAQ,MAAM,iCAAkCA,CAAC,EACjDF,EAAc,cAChB,CAGF,OACE,EAAC,OAAI,IAAKe,EAAW,UAAW,qBAAqBM,CAAW,EAAA,EAC9D,EAAC,MAAA,CAAI,UAAU,0BACb,EAAC,MAAA,CAAI,UAAU,wBAAA,EACb,EAAC,SAAA,KAAQH,CAAS,EAClB,EAAC,OAAA,CAAK,UAAU,YAAA,EAAa,IAAEH,CAAU,CAC3C,IACC,MAAA,CAAI,UAAU,6BACb,EAAC,OAAA,CAAK,UAAU,QAAA,EAAUC,CAAO,IAChC,OAAA,CAAK,UAAU,UAAA,EAAYhE,CAAa,EACzC,EAAC,QAAK,UAAU,QAAA,EAAUoE,CAAe,EACzC,EAAC,OAAA,CAAK,UAAU,MAAA,EAAQpB,CAAY,CACtC,EACA,EAAC,OAAI,UAAU,2BAAA,EACb,EAAC,SAAA,KAAQ7D,EAAI,WAAW,MAAM,2CAA2C,EAAE,GAAC,EAC5E,EAAC,OAAA,KAAM8E,CAAe,CACxB,EACA,EAAC,MAAA,CAAI,UAAU,0BAAA,IACZ,OAAA,CAAK,UAAW,gBAAgB/D,CAAM,EAAA,EACpCf,EAAI,WAAW,MAAM,oCAAoCe,CAAM,EAAE,CACpE,CACF,CACF,GAEE2D,GAAeC,IACf,EAAC,MAAA,CAAI,UAAU,6BACZD,GAAe,KAAK,MAAM,gBACzB,EAAA,IAAA,KACE,EAAC3E,EAAA,CACC,UAAU,yBACV,QAAS,IAAM,KAAK,MAAM,eAAgB0E,EAAS,UAAU,CAAA,EAE5DzE,EAAI,WAAW,MAAM,mCAAmC,CAAA,EAE3D,EAACD,EAAA,CACC,UAAU,wBACV,QAAS,IAAM,KAAK,MAAM,eAAgB0E,EAAS,UAAU,CAAA,EAE5DzE,EAAI,WAAW,MAAM,kCAAkC,CAAA,CAE5D,EAED,KAAK,MAAM,UACV,EAACD,EAAA,CACC,UAAU,sBACV,QAAS,IAAM,KAAK,MAAM,SAAU0E,CAAO,CAAA,EAE3C,EAAC,IAAA,CAAE,UAAU,cAAA,CAAe,EAC3BzE,EAAI,WAAW,MAAM,kCAAkC,CAAA,CAG9D,CAEJ,CAEJ,CACF,CC3GA,MAAqBmF,UAAiC/D,CAAyC,CAC7F,MAAyB,CACvB,KAAM,CAAE,SAAAgE,EAAU,sBAAAC,EAAuB,gBAAAC,CAAA,EAAoB,KAAK,MAE5DC,EAAkBH,EAAS,OAAOI,KACtB,OAAOA,EAAE,QAAW,WAAaA,EAAE,SAAWA,EAAE,YAAY,SAAW,aACrE,SACnB,EAEKC,EAAoBL,EAAS,OAAOI,KACxB,OAAOA,EAAE,QAAW,WAAaA,EAAE,SAAWA,EAAE,YAAY,SAAW,aACrE,SACnB,EAED,SACG,MAAA,CAAI,UAAU,kCAAA,EACb,EAAC,UAAIxF,EAAI,WAAW,MAAM,iCAAiC,CAAE,EAE7D,EAAC,OAAI,UAAU,8CACZ,KAAA,KAAIA,EAAI,WAAW,MAAM,yCAAyC,CAAE,EACpEuF,EAAgB,SAAW,EAC1B,EAAC,IAAA,KAAGvF,EAAI,WAAW,MAAM,sCAAsC,CAAE,EAEjEuF,EAAgB,IAAKd,GACnB,EAACD,EAAA,CACC,IAAK,OAAOC,EAAQ,IAAO,WAAaA,EAAQ,GAAA,EAAOA,EAAQ,GAC/D,QAAAA,EACA,YAAa,GACb,WAAY,GACZ,eAAgBY,EAChB,SAAUC,CAAA,CAAA,CAEb,CAEL,EAEA,EAAC,MAAA,CAAI,UAAU,4CAAA,EACb,EAAC,KAAA,KAAItF,EAAI,WAAW,MAAM,2CAA2C,CAAE,EACtEyF,EAAkB,SAAW,EAC5B,EAAC,IAAA,KAAGzF,EAAI,WAAW,MAAM,wCAAwC,CAAE,EAEnEyF,EAAkB,IAAKhB,GACrB,EAACD,EAAA,CACC,IAAK,OAAOC,EAAQ,IAAO,WAAaA,EAAQ,GAAA,EAAOA,EAAQ,GAC/D,QAAAA,EACA,YAAa,GACb,WAAY,GACZ,SAAUa,CAAA,CAAA,CAEb,CAEL,CACF,CAEJ,CACF,CCnBA,MAAqBI,UAAuCtE,CAG1D,CAHF,aAAA,CAAA,MAAA,GAAA,SAAA,EAIE,KAAO,MAA6C,CAClD,sBAAuB,GAAI,CAC7B,CAEA,KAAKhB,EAA6E,CAChF,KAAM,CAAE,QAAAuF,EAAS,UAAAxB,EAAW,QAAAyB,CAAA,EAAYxF,EAAM,MAE9C,OAAIwF,IAEC,MAAA,CAAI,UAAU,kCACbtF,EAAC,MAAA,CAAI,UAAU,yCACbA,EAAC,UAAIN,EAAI,WAAW,MAAM,wCAAwC,CAAE,CACtE,EACAM,EAACD,MAAiB,CACpB,EAKFC,EAAC,MAAA,CAAI,UAAU,gCAAA,EACbA,EAAC,MAAA,CAAI,UAAU,uCAAA,EACbA,EAAC,KAAA,KAAIN,EAAI,WAAW,MAAM,wCAAwC,CAAE,EACpEM,EAAC,MAAA,CAAI,UAAU,sCAAA,EACbA,EAAC,OAAA,CAAK,UAAU,sCAAA,EACbN,EAAI,WAAW,MAAM,+CAAgD,CACpE,MAAO2F,EAAQ,MAAA,CAChB,CACH,EACArF,EAAC,OAAA,CAAK,UAAU,wCAAA,EACbN,EAAI,WAAW,MAAM,iDAAkD,CACtE,MAAO2F,EAAQ,UAAYH,EAAE,UAAA,CAAW,EAAE,MAAA,CAC3C,CACH,CACF,CACF,EAEAlF,EAAC,MAAA,CAAI,UAAU,wCAAA,EACZqF,EAAQ,SAAW,EAClBrF,EAAC,OAAI,UAAU,sCAAA,EACbA,EAAC,MAAA,CAAI,UAAU,0CAAA,EACZb,EAAK,gBAAgB,CACxB,EACAa,EAAC,KAAA,KAAIN,EAAI,WAAW,MAAM,8CAA8C,CAAE,EAC1EM,EAAC,IAAA,KAAGN,EAAI,WAAW,MAAM,oDAAoD,CAAE,CACjF,EAEAM,EAAC,MAAA,CAAI,UAAU,qCAAA,EACZqF,EAAQ,IAAIE,GAAU,KAAK,aAAaA,EAAQ1B,EAAW/D,EAAM,KAAK,CAAC,CAC1E,CAEJ,CACF,CAEJ,CAEQ,aACNyF,EACA1B,EACA2B,EACkB,CAClB,MAAMC,EAAWF,EAAO,GAAA,EAClBG,EAAe,KAAK,MAAM,kBAAkB,IAAID,CAAQ,EACxDnF,EAAW,KAAK,aAAauD,EAAW0B,EAAO,YAAY,EAC3DI,EAAOJ,EAAO,OAAA,EACd9E,EAAS8E,EAAO,OAAA,EAChBK,EAAcL,EAAO,YAAA,EACrBM,EAAYN,EAAO,UAAA,EAEzB,OACEvF,EAAC,MAAA,CAAI,IAAK,UAAUyF,CAAQ,GAAI,UAAW,4BAA4BhF,CAAM,EAAA,EAC3ET,EAAC,MAAA,CAAI,UAAU,0BAAA,EACbA,EAAC,MAAA,CAAI,UAAU,wBAAA,EACbA,EAAC,QAAK,UAAU,4BAAA,EACb2F,GAAM,cAAA,GAAmB,cAC5B,EACA3F,EAAC,OAAA,CAAK,UAAU,4BAA2B,OACpCuF,EAAO,QACd,CACF,EAEAvF,EAAC,MAAA,CAAI,UAAU,4BACbA,EAAC,OAAA,CAAK,UAAU,+BAAA,EACbuF,EAAO,OAAA,EAAS,IAAEjF,GAAU,SAAA,GAAc,EAC7C,EACAN,EAAC,OAAI,UAAW,mCAAmC,KAAK,eAAeS,CAAM,CAAC,IAC3E,KAAK,iBAAiBA,CAAM,EAC5B,KAAK,cAAcA,CAAM,CAC5B,CACF,CACF,EAEAT,EAAC,MAAA,CAAI,UAAU,2BAAA,EACbA,EAAC,MAAA,CAAI,UAAU,uBAAA,EACbA,EAAC,QAAK,UAAU,yBAAA,EAA0B,WAAS,EACnDA,EAAC,OAAA,CAAK,UAAU,yBAAA,EACbM,GAAU,OAAA,GAAY,mBAAmB,IAAEA,GAAU,UAAA,EAAc,IAAIA,EAAS,QAAA,CAAS,IAAM,EAClG,CACF,EAEAN,EAAC,MAAA,CAAI,UAAU,uBAAA,IACZ,OAAA,CAAK,UAAU,yBAAA,EAA0B,mBAAiB,EAC3DA,EAAC,QAAK,UAAU,yBAAA,EAA2BuF,EAAO,gBAAA,CAAkB,CACtE,EAECA,EAAO,WAAA,GACNvF,EAAC,MAAA,CAAI,UAAU,yBACbA,EAAC,OAAA,CAAK,UAAU,yBAAA,EAA0B,YAAU,IACnD,OAAA,CAAK,UAAU,yBAAA,EAA2BuF,EAAO,SAAA,CAAW,CAC/D,EAGFvF,EAAC,MAAA,CAAI,UAAU,uBAAA,EACbA,EAAC,QAAK,UAAU,yBAAA,EAA0B,eAAa,EACvDA,EAAC,OAAA,CAAK,UAAU,yBAAA,EACb4F,EAAY,mBAAA,EAAqB,IAAEA,EAAY,oBAClD,CACF,EAEA5F,EAAC,MAAA,CAAI,UAAU,uBAAA,IACZ,OAAA,CAAK,UAAU,yBAAA,EAA0B,YAAU,EACpDA,EAAC,QAAK,UAAU,yBAAA,EACbwD,EAAUqC,CAAS,CACtB,CACF,EAECN,EAAO,cAAA,GACNvF,EAAC,MAAA,CAAI,UAAU,uBAAA,IACZ,OAAA,CAAK,UAAU,yBAAA,EAA0B,UAAQ,EAClDA,EAAC,QAAK,UAAU,yBAAA,EAA2BuF,EAAO,YAAA,CAAc,CAClE,EAGDA,EAAO,gBAAA,GACNvF,EAAC,MAAA,CAAI,UAAU,uBAAA,EACbA,EAAC,OAAA,CAAK,UAAU,yBAAA,EAA0B,aAAW,EACrDA,EAAC,IAAA,CACC,KAAMuF,EAAO,cAAA,EACb,OAAO,SACP,IAAI,sBACJ,UAAU,wBAAA,EACX,mBACkBpG,EAAK,0BAA0B,CAAA,CAEpD,EAGDoG,EAAO,cAAA,GACNvF,EAAC,MAAA,CAAI,UAAU,+BACbA,EAAC,OAAI,UAAU,uBAAA,IACZ,OAAA,CAAK,UAAU,2BAA0B,YAAU,IACnD,OAAA,CAAK,UAAU,2BACbwD,EAAU+B,EAAO,aAAa,CACjC,CACF,EAECA,EAAO,oBAAsBA,EAAO,mBAAqBA,EAAO,UAC/DvF,EAAC,OAAI,UAAU,2BACZ,OAAA,CAAK,UAAU,2BAA0B,kBAAgB,IACzD,OAAA,CAAK,UAAU,2BACbuF,EAAO,eAAA,EAAiB,IAAEjF,GAAU,YAAc,EACrD,CACF,EAGDiF,EAAO,gBACNvF,EAAC,OAAI,UAAU,uBAAA,IACZ,OAAA,CAAK,UAAU,2BAA0B,cAAY,IACrD,OAAA,CAAK,UAAU,2BAA2BuF,EAAO,WAAA,CAAa,CACjE,CAEJ,CAEJ,EAEC9E,IAAW,WACVT,EAAC,MAAA,CAAI,UAAU,2BAAA,EACbA,EAACP,EAAA,CACC,UAAU,yDACV,QAAS,IAAM,KAAK,cAAc8F,EAAQC,CAAK,EAC/C,QAASE,EACT,SAAUA,CAAA,EAEThG,EAAI,WAAW,MAAM,0CAA0C,CAAA,EAGlEM,EAACP,EAAA,CACC,UAAU,uDACV,QAAS,IAAM,KAAK,aAAa8F,EAAQC,CAAK,EAC9C,QAASE,EACT,SAAUA,CAAA,EAEThG,EAAI,WAAW,MAAM,yCAAyC,CAAA,CAEnE,EAGFM,EAAC,MAAA,CAAI,UAAU,gCAAA,EACbA,EAACP,EAAA,CACC,UAAU,qDACV,QAAS,IAAM,KAAK,aAAa8F,EAAQC,CAAK,EAC9C,SAAUE,CAAA,EAETvG,EAAK,cAAc,EACnBO,EAAI,WAAW,MAAM,yCAAyC,CAAA,CAEnE,CACF,CAEJ,CAEQ,aAAamE,EAAkBiC,EAAgC,CACrE,OAAOjC,EAAU,KAAKkC,GAAK,CACzB,MAAMlD,EAAK,OAAOkD,EAAE,IAAO,WAAaA,EAAE,KAAOA,EAAE,GACnD,OAAO,SAASlD,CAAE,IAAMiD,CAC1B,CAAC,GAAK,IACR,CAEQ,eAAerF,EAAwB,CAC7C,OAAQA,EAAA,CACN,IAAK,UACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,WACH,MAAO,SACT,QACE,MAAO,WAAA,CAEb,CAEQ,iBAAiBA,EAAkC,CACzD,OAAQA,EAAA,CACN,IAAK,UACH,OAAOtB,EAAK,cAAc,EAC5B,IAAK,WACH,OAAOA,EAAK,qBAAqB,EACnC,IAAK,WACH,OAAOA,EAAK,qBAAqB,EACnC,QACE,OAAOA,EAAK,wBAAwB,CAAA,CAE1C,CAEQ,cAAcsB,EAAwB,CAC5C,OAAQA,EAAA,CACN,IAAK,UACH,OAAOf,EAAI,WAAW,MAAM,iDAAiD,EAAE,SAAA,EACjF,IAAK,WACH,OAAOA,EAAI,WAAW,MAAM,kDAAkD,EAAE,SAAA,EAClF,IAAK,WACH,OAAOA,EAAI,WAAW,MAAM,kDAAkD,EAAE,SAAA,EAClF,QACE,MAAO,SAAA,CAEb,CAEA,MAAc,cAAc6F,EAAuBC,EAA2D,CAC5G,MAAMC,EAAWF,EAAO,GAAA,EAClBS,EAAgBT,EAAO,OAAA,EAGvBU,EAAiB,WACrB,OACEvG,EAAI,WAAW,MAAM,kDAAmD,CACtE,OAAQsG,CAAA,CACT,EAAE,SAAA,EACHA,EAAc,SAAA,CAAS,GACpBA,EAAc,SAAA,CAAS,EAGxBE,EAAQ,OACZxG,EAAI,WAAW,MAAM,uDAAuD,EAAE,SAAA,CAAS,EAGzF,GAAI,MAAMuG,CAAc,GAAKA,GAAkB,EAAG,CAChDvG,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,iDAAiD,CAAA,EAExE,MACF,CAEA,KAAK,MAAM,kBAAkB,IAAI+F,CAAQ,EACzCzF,EAAE,OAAA,EAEF,GAAI,CACF,MAAMwF,EAAM,gBAAgBD,EAAQU,EAAgBC,GAAS,MAAS,EAEtExG,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,kDAAkD,CAAA,CAE3E,OAASW,EAAO,CACd,QAAQ,MAAM,kCAAmCA,CAAK,EACtDX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,gDAAgD,CAAA,CAEzE,QAAA,CACE,KAAK,MAAM,kBAAkB,OAAO+F,CAAQ,EAC5CzF,EAAE,OAAA,CACJ,CACF,CAEA,MAAc,aAAauF,EAAuBC,EAA2D,CAC3G,MAAMW,EAAS,OACbzG,EAAI,WAAW,MAAM,uDAAuD,EAAE,SAAA,CAAS,EAGzF,GAAI,CAACyG,GAAUA,EAAO,KAAA,IAAW,GAAI,CACnCzG,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,yDAAyD,CAAA,EAEhF,MACF,CAEA,MAAM+F,EAAWF,EAAO,GAAA,EACxB,KAAK,MAAM,kBAAkB,IAAIE,CAAQ,EACzCzF,EAAE,OAAA,EAEF,GAAI,CACF,MAAMwF,EAAM,eAAeD,EAAQY,CAAM,EAEzCzG,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,iDAAiD,CAAA,CAE1E,OAASW,EAAO,CACd,QAAQ,MAAM,kCAAmCA,CAAK,EACtDX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,+CAA+C,CAAA,CAExE,QAAA,CACE,KAAK,MAAM,kBAAkB,OAAO+F,CAAQ,EAC5CzF,EAAE,OAAA,CACJ,CACF,CAEQ,aAAauF,EAAuBC,EAAkD,CAE5F,MAAMf,EADOc,EAAO,OAAA,GACG,cAAA,GAAmB,eACpChB,EAASgB,EAAO,OAAA,EAEtB7F,EAAI,MAAM,KAAKZ,EAAc,CAC3B,MAAOY,EAAI,WAAW,MAAM,uDAAuD,EACnF,QAASA,EAAI,WAAW,MAAM,0DAA2D,CACvF,KAAM+E,EACN,OAAAF,CAAA,CACD,EACD,YAAa7E,EAAI,WAAW,MAAM,wDAAwD,EAC1F,WAAYA,EAAI,WAAW,MAAM,uDAAuD,EACxF,UAAW,GACX,KAAM,eACN,UAAW,SAAY,CACrB,MAAM+F,EAAWF,EAAO,GAAA,EACxB,KAAK,MAAM,kBAAkB,IAAIE,CAAQ,EAEzC,GAAI,CACF,MAAMD,EAAM,eAAeD,CAAM,EAEjC7F,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,iDAAiD,CAAA,CAE1E,OAASW,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,EACrDX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,+CAA+C,CAAA,CAExE,QAAA,CACE,KAAK,MAAM,kBAAkB,OAAO+F,CAAQ,EAC5CzF,EAAE,OAAA,CACJ,CACF,EACA,SAAU,IAAM,CACdN,EAAI,MAAM,MAAA,CACZ,CAAA,CACD,CACH,CACF,CCrZA,MAAqB0G,UAA+BtF,CAAuC,CAA3F,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAQ,SAAW,CACjB,KAAMY,EAAO,EAAE,EACf,OAAQA,EAAO,EAAE,EACjB,QAASA,EAAO,EAAE,EAClB,UAAWA,EAAO,EAAE,EACpB,UAAWA,EAAO,EAAE,EACpB,IAAKA,EAAO,EAAE,EACd,QAASA,EAAO,EAAE,EAClB,eAAgBA,EAAO,EAAE,EACzB,QAASA,EAAO,EAAE,EAClB,UAAWA,EAAO,EAAE,EACpB,YAAaA,EAAO,EAAE,EACtB,SAAUA,EAAO,EAAI,CAAA,CACvB,CAEA,OAAO5B,EAAmD,CACxD,MAAM,OAAOA,CAAK,CACpB,CAEA,KAAKA,EAAmD,CACtD,KAAM,CAAE,WAAAuG,EAAY,SAAA7G,CAAA,EAAaM,EAAM,MAEvC,OACE,EAAC,MAAA,CAAI,UAAU,wBAAA,EACb,EAAC,MAAA,CAAI,UAAU,MAAA,EACb,EAAC,MAAA,CAAI,UAAU,UAAA,EACb,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACEJ,EAAI,WAAW,MAAM,yCAAyC,EAC/D,EAAC,OAAA,CAAK,UAAU,iBAAgB,GAAC,CACnC,EACA,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,eACZ,KAAM,KAAK,SAAS,KACpB,SAAU2G,CAAA,CAAA,CAEd,EACA,EAAC,OAAI,UAAU,YAAA,IACZ,QAAA,KACE3G,EAAI,WAAW,MAAM,2CAA2C,EACjE,EAAC,OAAA,CAAK,UAAU,eAAA,EAAgB,GAAC,CACnC,EACA,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,aACZ,KAAM,KAAK,SAAS,OACpB,SAAU2G,CAAA,CAAA,CAEd,CACF,IAEC,MAAA,CAAI,UAAU,YACb,EAAC,MAAA,CAAI,UAAU,gBACZ,QAAA,KACE3G,EAAI,WAAW,MAAM,4CAA4C,CACpE,EACA,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,qCACZ,KAAM,KAAK,SAAS,QACpB,SAAU2G,CAAA,CAAA,EAEZ,EAAC,MAAA,CAAI,UAAU,UAAA,EAAW,6DAE1B,CACF,CACF,EACA,EAAC,MAAA,CAAI,UAAU,YACb,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACE3G,EAAI,WAAW,MAAM,+CAA+C,CACvE,EACA,EAAC,QAAA,CACC,KAAK,SACL,KAAK,aACL,IAAI,IACJ,UAAU,cACV,YAAY,MACZ,KAAM,KAAK,SAAS,UACpB,SAAU2G,CAAA,CAAA,CAEd,EACA,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACE3G,EAAI,WAAW,MAAM,+CAA+C,CACvE,EACA,EAAC,QAAA,CACC,KAAK,SACL,KAAK,aACL,IAAI,IACJ,UAAU,cACV,YAAY,4BACZ,KAAM,KAAK,SAAS,UACpB,SAAU2G,CAAA,CAAA,CAEd,EACA,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACE3G,EAAI,WAAW,MAAM,wCAAwC,CAChE,EACA,EAAC,QAAA,CACC,KAAK,SACL,KAAK,aACL,IAAI,IACJ,UAAU,cACV,YAAY,MACZ,KAAM,KAAK,SAAS,IACpB,SAAU2G,CAAA,CAAA,EAEZ,EAAC,MAAA,CAAI,UAAU,UAAA,EACZ3G,EAAI,WAAW,MAAM,6CAA6C,CACrE,CACF,CACF,EAEA,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACEA,EAAI,WAAW,MAAM,4CAA4C,EAClE,EAAC,OAAA,CAAK,UAAU,eAAA,EAAgB,GAAC,CACnC,EACA,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,0CACZ,KAAM,KAAK,SAAS,QACpB,SAAU2G,CAAA,CAAA,IAEX,MAAA,CAAI,UAAU,YACZ3G,EAAI,WAAW,MAAM,iDAAiD,CACzE,CACF,EAEA,EAAC,MAAA,CAAI,UAAU,cACb,EAAC,QAAA,KACEA,EAAI,WAAW,MAAM,sDAAsD,CAC9E,EACA,EAAC,QAAA,CACC,KAAK,MACL,UAAU,cACV,YAAY,kCACZ,KAAM,KAAK,SAAS,eACpB,SAAU2G,CAAA,CAAA,EAEZ,EAAC,MAAA,CAAI,UAAU,UAAA,EACZ3G,EAAI,WAAW,MAAM,uDAAuD,CAC/E,CACF,EAEA,EAAC,MAAA,CAAI,UAAU,UAAA,EACb,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACEA,EAAI,WAAW,MAAM,6CAA6C,CACrE,EACA,EAAC,QAAA,CACC,KAAK,MACL,UAAU,cACV,YAAY,+BACZ,KAAM,KAAK,SAAS,QACpB,SAAU2G,CAAA,CAAA,CAEd,EACA,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACE3G,EAAI,WAAW,MAAM,+CAA+C,CACvE,EACA,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAY,eACZ,KAAM,KAAK,SAAS,UACpB,SAAU2G,CAAA,CAAA,CAEd,CACF,EAGA,EAAC,OAAI,UAAU,YAAA,EACb,EAAC,QAAA,KACE3G,EAAI,WAAW,MAAM,iDAAiD,CACzE,EACA,EAAC,WAAA,CACC,UAAU,cACV,KAAM,EACN,YAAY,qCACZ,KAAM,KAAK,SAAS,YACpB,SAAU2G,CAAA,CAAA,CAEd,EAEA,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAACzD,EAAA,CAAO,MAAO,KAAK,SAAS,SAAA,EAAY,SAAU,KAAK,SAAS,SAAU,SAAUyD,CAAA,EAClF3G,EAAI,WAAW,MAAM,8CAA8C,CACtE,CACF,EAEA,EAAC,MAAA,CAAI,UAAU,cAAA,EACb,EAACD,EAAA,CACC,UAAU,yBACV,KAAK,SACL,QAAS4G,EACT,QAAS,KAAK,aAAa,KAAK,KAAMvG,EAAM,KAAK,CAAA,EAEhDJ,EAAI,WAAW,MAAM,+CAA+C,CAAA,EAEvE,EAACD,EAAA,CACC,UAAU,SACV,QAASD,EACT,SAAU6G,CAAA,EAET3G,EAAI,WAAW,MAAM,iCAAiC,CAAA,CAE3D,CACF,CACF,CAEJ,CAGQ,cAAwB,CAC9B,MAAMiC,EAAY,IAAIX,EAEtB,GAAI,CAEF,MAAMY,EAAYlC,EAAI,WAAW,MAAM,yCAAyC,EAAE,SAAA,EAC5EmC,EAAcnC,EAAI,WAAW,MAAM,2CAA2C,EAAE,SAAA,EAChF4G,EAAe5G,EAAI,WAAW,MAAM,4CAA4C,EAAE,SAAA,EAQxF,GANAiC,EACG,SAAS,KAAK,SAAS,OAAQ,OAAQC,CAAS,EAChD,SAAS,KAAK,SAAS,SAAU,SAAUC,CAAW,EACtD,SAAS,KAAK,SAAS,QAAA,EAAW,UAAWyE,CAAY,EAGxD,KAAK,SAAS,UAAA,GAAe,KAAK,SAAS,YAAY,OAAQ,CACjE,MAAMxE,EAAiBpC,EAAI,WAAW,MAAM,+CAA+C,EAAE,SAAA,EAC7FiC,EAAU,YAAY,KAAK,SAAS,YAAa,EAAG,OAAW,YAAaG,CAAc,CAC5F,CAEA,GAAI,KAAK,SAAS,UAAA,GAAe,KAAK,SAAS,YAAY,OAAQ,CACjE,MAAMC,EAAiBrC,EAAI,WAAW,MAAM,+CAA+C,EAAE,SAAA,EAC7FiC,EAAU,YAAY,KAAK,SAAS,YAAa,EAAG,OAAW,YAAaI,CAAc,CAC5F,CAEA,GAAI,KAAK,SAAS,IAAA,GAAS,KAAK,SAAS,MAAM,OAAQ,CACrD,MAAMC,EAAWtC,EAAI,WAAW,MAAM,wCAAwC,EAAE,SAAA,EAChFiC,EAAU,YAAY,KAAK,SAAS,MAAO,EAAG,OAAW,MAAOK,CAAQ,CAC1E,CAGA,GAAI,KAAK,SAAS,UAAA,GAAe,KAAK,SAAS,YAAa,CAC1D,MAAMC,EAAS,WAAW,KAAK,SAAS,WAAW,EAC7CsE,EAAS,WAAW,KAAK,SAAS,WAAW,EACnD,GAAI,CAAC,MAAMtE,CAAM,GAAK,CAAC,MAAMsE,CAAM,GAAKA,EAAStE,EAAQ,CACvD,MAAMC,EAAexC,EAAI,WAAW,MAAM,0CAA0C,EAAE,SAAA,EACtFiC,EAAU,OAAO,GAAO,YAAaO,CAAY,CACnD,CACF,CAGA,GAAI,KAAK,SAAS,QAAA,GAAa,KAAK,SAAS,UAAU,OAAQ,CAC7D,MAAMC,EAAezC,EAAI,WAAW,MAAM,6CAA6C,EAAE,SAAA,EACzFiC,EAAU,IAAI,KAAK,SAAS,QAAA,EAAW,UAAWQ,CAAY,CAChE,CAEA,GAAI,KAAK,SAAS,eAAA,GAAoB,KAAK,SAAS,iBAAiB,OAAQ,CAC3E,MAAMqE,EAAc9G,EAAI,WAAW,MAAM,sDAAsD,EAAE,SAAA,EACjGiC,EAAU,IAAI,KAAK,SAAS,eAAA,EAAkB,iBAAkB6E,CAAW,CAC7E,CAEA,MAAMpE,EAAST,EAAU,UAAA,EAEzB,MAAI,CAACS,EAAO,SAAWA,EAAO,mBAC5B1C,EAAI,OAAO,KAAK,CAAE,KAAM,QAAS,YAAa,EAAA,EAAQ0C,EAAO,iBAAiB,EAGzEA,EAAO,OAChB,OAAS/B,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EAC7CX,EAAI,OAAO,KAAK,CAAE,KAAM,QAAS,YAAa,EAAA,EAAQ,mBAAmB,EAClE,EACT,CACF,CAEA,MAAc,aAAa8F,EAAoC,EAAyB,CAGtF,GAFA,EAAE,eAAA,EAEE,CAAC,KAAK,eACR,OAGF,MAAMpF,EAAoC,CACxC,KAAM,KAAK,SAAS,KAAA,EACpB,OAAQ,KAAK,SAAS,OAAA,EACtB,QAAS,KAAK,SAAS,QAAA,EACvB,UAAW,KAAK,SAAS,UAAA,EACzB,UAAW,KAAK,SAAS,UAAA,EACzB,IAAK,KAAK,SAAS,IAAA,EACnB,QAAS,KAAK,SAAS,QAAA,EACvB,eAAgB,KAAK,SAAS,eAAA,EAC9B,QAAS,KAAK,SAAS,QAAA,EACvB,UAAW,KAAK,SAAS,UAAA,EACzB,YAAa,KAAK,SAAS,YAAA,EAC3B,SAAU,KAAK,SAAS,SAAA,CAAS,EAGnC,MAAMoF,EAAM,SAASpF,CAAQ,CAC/B,CACF,CCpUA,MAAqBqG,UAAyC3F,CAAiD,CAA/G,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAQ,YAAc,EAAA,CAEtB,KAAKhB,EAA+E,CAClF,KAAM,CAAE,UAAA+D,EAAW,mBAAAC,EAAoB,cAAAC,EAAe,uBAAAC,EAAwB,iBAAAC,CAAA,EAAqBnE,EAAM,MAEzG,SACG,MAAA,CAAI,UAAU,oCACbE,EAAC,MAAA,CAAI,UAAU,gBAAA,EACbA,EAAC,UAAIN,EAAI,WAAW,MAAM,0CAA0C,CAAE,EACtEM,EAAC,MAAA,CAAI,UAAU,wBAAA,EACbA,EAACP,EAAA,CACC,UAAU,yBACV,KAAK,cACL,QAAS,IAAM,CACb,KAAK,YAAc,CAAC,KAAK,YACzBO,EAAE,OAAA,CACJ,CAAA,EAECN,EAAI,WAAW,MAAM,+CAA+C,CAAA,CAEzE,CACF,EAEC,KAAK,aACJM,EAAC,MAAA,CAAI,UAAU,iBAAA,EACbA,EAACoG,EAAA,CACC,SAAU,MAAOhG,GAAkB,CACjC,MAAM2D,EAAc3D,CAAQ,EAC5B,KAAK,YAAc,GACnBJ,EAAE,OAAA,CACJ,EACA,SAAU,IAAM,CACd,KAAK,YAAc,GACnBA,EAAE,OAAA,CACJ,EACA,WAAY8D,CAAA,CAAA,CAEhB,EAGF9D,EAAC,MAAA,CAAI,UAAU,iBAAA,EACZ6D,EAAU,SAAW,EACpB7D,EAAC,MAAA,CAAI,UAAU,UAAA,EACZN,EAAI,WAAW,MAAM,0CAA0C,CAClE,EAEAM,EAAC,MAAA,CAAI,UAAU,cAAA,EACZ6D,EAAU,IAAKvD,GACdN,EAACqC,EAAA,CACC,IAAK,OAAO/B,EAAS,IAAO,WAAaA,EAAS,GAAA,EAAOA,EAAS,GAClE,SAAAA,EACA,KAAK,UACL,eAAgB,IAAM0D,EAAuB1D,CAAQ,EACrD,SAAU,IAAM2D,EAAiB3D,CAAQ,CAAA,CAAA,CAE5C,CACH,CAEJ,CACF,CAEJ,CACF,CCpCA,MAAMoG,EAAkB,IAClBC,EAAkB,CACtB,eAAgB,2BAChB,OAAU,0BACZ,EAKA,SAASC,EAAmB/G,EAA0B,CACpD,KAAM,CAAE,OAAAgH,EAAQ,SAAAC,EAAU,KAAAC,EAAM,OAAAC,EAAQ,QAAAC,EAAS,QAAAC,GAAYrH,EAEvDsH,EAAUL,EAAS,WAAW,MAAM,EACtCA,EACA,GAAGpH,EAAI,MAAM,UAAU,QAAQ,CAAC,GAAGoH,CAAQ,GAEzCM,EAAqB,CACzB,OAAAP,EACA,IAAKM,EACL,QAAS,CAAE,GAAGR,EAAiB,GAAGM,CAAA,EAClC,QAASC,GAAWR,CAAA,EAOtB,GAJIK,IAASF,IAAW,QAAUA,IAAW,SAAWA,IAAW,SACjEO,EAAc,KAAOL,GAGnBC,GAAUH,IAAW,MAAO,CAC9B,MAAMQ,EAAY,IAAI,gBACtB,OAAO,QAAQL,CAAM,EAAE,QAAQ,CAAC,CAACrG,EAAKC,CAAK,IAAM,CACpBA,GAAU,MACnCyG,EAAU,OAAO1G,EAAK,OAAOC,CAAK,CAAC,CAEvC,CAAC,EACDwG,EAAc,KAAO,IAAIC,EAAU,SAAA,CAAU,EAC/C,CAEA,OAAOD,CACT,CAKA,SAASE,EAAWjH,EAAsB,CAExC,GAAIA,EAAM,OAAS,aAAeA,EAAM,UAAY,kBAClD,MAAO,CACL,QAASX,EAAI,WAAW,MAAM,8BAA8B,EAAE,SAAA,EAC9D,OAAQ,CAAA,EAKZ,GAAIW,GAASA,EAAM,SACjB,GAAI,CACF,MAAMkH,EAAW,OAAOlH,EAAM,UAAa,SACvC,KAAK,MAAMA,EAAM,QAAQ,EACzBA,EAAM,SAEV,GAAIkH,EAAS,QAAU,MAAM,QAAQA,EAAS,MAAM,EAClD,MAAO,CACL,QAASA,EAAS,OAAO,CAAC,EAAE,QAAU,qBACtC,OAAQA,EAAS,OACjB,OAAQlH,EAAM,MAAA,CAGpB,MAAQ,CAEN,GAAIA,EAAM,SAAS,SAAS,oBAAoB,GAC5CA,EAAM,SAAS,SAAS,WAAW,EACrC,MAAO,CACL,QAASX,EAAI,WAAW,MAAM,8BAA8B,EAAE,SAAA,EAC9D,OAAQW,EAAM,QAAU,GAAA,CAG9B,CAIF,OAAIA,aAAiB,MACZ,CACL,QAASA,EAAM,QACf,OAASA,EAAc,MAAA,EAKpB,CACL,QAASX,EAAI,WAAW,MAAM,8BAA8B,EAAE,SAAA,EAC9D,OAAQ,GAAA,CAEZ,CAKA,eAAsB8H,EACpB3H,EACA4H,EAA6B,GACjB,CACZ,KAAM,CACJ,iBAAAC,EAAmB,GACnB,eAAAC,EAAiB,GACjB,eAAAC,EACA,aAAA1F,EACA,iBAAA2F,EACA,kBAAAC,EACA,UAAAC,EACA,QAAAC,CAAA,EACEP,EAEJ,GAAI,CACF,MAAML,EAAgBR,EAAmB/G,CAAM,EACzC0H,EAAW,MAAM7H,EAAI,QAAQ0H,CAAa,EAGhD,GAAIS,GAAoB,CAACA,EAAiBN,CAAQ,EAChD,MAAM,IAAI,MAAM,4BAA4B,EAI9C,MAAMU,EAAgBH,EAAoBA,EAAkBP,CAAQ,EAAIA,EAGxE,OAAIG,GAAoBE,GACtBlI,EAAI,OAAO,KAAK,CAAE,KAAM,UAAW,YAAa,EAAA,EAAQkI,CAAc,EAIpEG,GACFA,EAAUE,CAAa,EAGlBA,CACT,OAAS5H,EAAO,CACd,MAAM6H,EAAWZ,EAAWjH,CAAK,EAQjC,GALI2H,GACFA,EAAQE,CAAQ,EAIdP,EAAgB,CAClB,MAAMvI,EAAU8C,GAAgBgG,EAAS,SAAW,oBACpDxI,EAAI,OAAO,KAAK,CAAE,KAAM,QAAS,YAAa,EAAA,EAAQN,CAAO,CAC/D,CAEA,MAAM8I,CACR,CACF,CAKA,eAAsBC,EACpBrB,EACAE,EACAS,EAA6B,CAAA,EACjB,CACZ,OAAOD,EAAc,CAAE,OAAQ,MAAO,SAAAV,EAAU,OAAAE,CAAA,EAAUS,CAAO,CACnE,CAKA,eAAsBW,EACpBtB,EACAC,EACAU,EAA6B,CAAA,EACjB,CACZ,OAAOD,EAAc,CAAE,OAAQ,OAAQ,SAAAV,EAAU,KAAAC,CAAA,EAAQU,CAAO,CAClE,CAKA,eAAsBY,EACpBvB,EACAC,EACAU,EAA6B,CAAA,EACjB,CACZ,OAAOD,EAAc,CAAE,OAAQ,QAAS,SAAAV,EAAU,KAAAC,CAAA,EAAQU,CAAO,CACnE,CAKA,eAAsBa,GACpBxB,EACAW,EAA6B,GACjB,CACZ,OAAOD,EAAc,CAAE,OAAQ,SAAU,SAAAV,CAAA,EAAYW,CAAO,CAC9D,CCxOO,MAAMc,GAAqC,KAAgC,CAChF,MAAM,OAAOnI,EAAe,CAC1B,MAAMsC,EAAe,CACnB,KAAM,uBACN,WAAY,CACV,KAAMtC,EAAS,KACf,OAAQA,EAAS,OACjB,QAASA,EAAS,SAAW,KAC7B,UAAW,WAAWA,EAAS,SAAS,EACxC,UAAW,WAAWA,EAAS,SAAS,EACxC,IAAK,WAAWA,EAAS,KAAO,GAAG,EACnC,QAASA,EAAS,SAAW,KAC7B,UAAWA,EAAS,WAAa,KACjC,SAAU,EAAA,CACZ,EAGF,OAAOgI,EAAQ,wBAAyB,CAAE,KAAM1F,GAAgB,CAC9D,iBAAkB,GAClB,eAAgBhD,EAAI,WAAW,MAAM,wCAAwC,EAAE,SAAA,EAC/E,aAAcA,EAAI,WAAW,MAAM,sCAAsC,EAAE,SAAA,EAC3E,UAAY6H,GAAa,CACvB7H,EAAI,MAAM,YAAY6H,CAAQ,CAChC,CAAA,CACD,CACH,EAEA,MAAM,aAAajH,EAAe,CAChC,MAAMwF,EAAa,OAAOxF,EAAS,IAAO,WAAaA,EAAS,KAAOA,EAAS,GAC1EkI,GAAiB,OAAOlI,EAAS,UAAa,WAAaA,EAAS,WAAaA,EAAS,YAAY,WAAa,GACnHiF,EAAS7F,EAAI,MAAM,QAAQ,uBAAwBoG,CAAU,EAE/DP,IACF,MAAMA,EAAO,KAAK,CAAE,SAAU,CAACiD,EAAe,EAE9C9I,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,8BAA+B8I,EAA2B,UAAX,QAAoB,UAAU,CAAA,EAGxG,EAEA,MAAM,OAAOlI,EAAe,CAC1B,MAAMwF,EAAa,OAAOxF,EAAS,IAAO,WAAaA,EAAS,KAAOA,EAAS,GAC1EiF,EAAS7F,EAAI,MAAM,QAAQ,uBAAwBoG,CAAU,EAC/DP,GACF,MAAMA,EAAO,OAAA,CAEjB,EAEA,MAAM,MAAO,CACX,OAAO4C,EAAO,wBAAyB,OAAW,CAChD,aAAczI,EAAI,WAAW,MAAM,uCAAuC,EAAE,SAAA,EAC5E,kBAAoB6H,IAClB7H,EAAI,MAAM,YAAY6H,CAAQ,EACvB7H,EAAI,MAAM,IAAI,sBAAsB,EAC7C,CACD,CACH,CACF,GAGa+I,EAAkC,KAAgC,CAC7E,MAAM,OAAOrI,EAAe,CAC1B,MAAMsC,EAAe,CACnB,KAAM,oBACN,WAAY,CACV,KAAMtC,EAAS,KACf,OAAQA,EAAS,OACjB,QAASA,EAAS,QAClB,UAAW,WAAWA,EAAS,SAAS,GAAK,EAC7C,UAAWA,EAAS,UAAY,WAAWA,EAAS,SAAS,EAAI,KACjE,QAASA,EAAS,SAAW,KAC7B,eAAgBA,EAAS,gBAAkB,KAC3C,QAASA,EAAS,SAAW,KAC7B,UAAWA,EAAS,WAAa,KACjC,YAAaA,EAAS,aAAe,KACrC,SAAUA,EAAS,QAAA,CACrB,EAGF,OAAOgI,EAAQ,qBAAsB,CAAE,KAAM1F,GAAgB,CAC3D,iBAAkB,GAClB,eAAgBhD,EAAI,WAAW,MAAM,gDAAgD,EAAE,SAAA,EACvF,aAAcA,EAAI,WAAW,MAAM,8CAA8C,EAAE,SAAA,EACnF,UAAY6H,GAAa,CACvB7H,EAAI,MAAM,YAAY6H,CAAQ,CAChC,CAAA,CACD,CACH,EAEA,MAAM,aAAajH,EAAe,CAChC,MAAMwF,EAAa,OAAOxF,EAAS,IAAO,WAAaA,EAAS,KAAOA,EAAS,GAC1EkI,GAAiB,OAAOlI,EAAS,UAAa,WAAaA,EAAS,WAAaA,EAAS,YAAY,WAAa,GAEzH,OAAO+H,EAAS,sBAAsBvC,CAAU,GAAI,CAClD,KAAM,CACJ,KAAM,oBACN,WAAY,CACV,SAAU,CAAC0C,CAAA,CACb,CACF,EACC,CACD,iBAAkB,GAClB,eAAgB9I,EAAI,WAAW,MAAM,sCAAuC8I,EAA2B,UAAX,QAAoB,UAAU,EAAE,SAAA,EAC5H,aAAc9I,EAAI,WAAW,MAAM,iDAAiD,EAAE,SAAA,EACtF,UAAY6H,GAAa,CACvB7H,EAAI,MAAM,YAAY6H,CAAQ,CAChC,CAAA,CACD,CACH,EAEA,MAAM,OAAOjH,EAAe,CAC1B,MAAMwF,EAAa,OAAOxF,EAAS,IAAO,WAAaA,EAAS,KAAOA,EAAS,GAEhF,OAAOgI,GAAU,sBAAsBxC,CAAU,GAAI,CACnD,aAAcpG,EAAI,WAAW,MAAM,iDAAiD,EAAE,SAAA,CAAS,CAChG,CACH,EAEA,MAAM,MAAO,CACX,OAAOyI,EAAO,qBAAsB,OAAW,CAC7C,aAAczI,EAAI,WAAW,MAAM,+CAA+C,EAAE,SAAA,EACpF,kBAAoB6H,IAClB7H,EAAI,MAAM,YAAY6H,CAAQ,EACvB7H,EAAI,MAAM,IAAI,mBAAmB,EAC1C,CACD,CACH,CACF,GAGagJ,GAAoC,KAAmC,CAClF,MAAM,aAAavE,EAAc1D,EAAgB,CAC/C,MAAM6D,EAAY,OAAOH,EAAQ,IAAO,WAAaA,EAAQ,KAAOA,EAAQ,GACtEoB,EAAS7F,EAAI,MAAM,QAAQ,sBAAuB4E,CAAS,EAE7DiB,IACF,MAAMA,EAAO,KAAK,CAAE,OAAA9E,EAAQ,EAE5Bf,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,6BAA6Be,CAAM,UAAU,EAAE,SAAA,CAAS,EAGnF,EAEA,MAAM,MAAO,CACX,OAAO0H,EAAO,uBAAwB,CAAE,QAAS,iBAAmB,CAClE,aAAczI,EAAI,WAAW,MAAM,sCAAsC,EAAE,SAAA,EAC3E,kBAAoB6H,IAClB7H,EAAI,MAAM,YAAY6H,CAAQ,EACvB,MAAM,QAAQA,EAAS,IAAI,EAC9BA,EAAS,KAAK,OAAQrC,GAAWA,IAAM,IAAI,EAC1CqC,EAAS,KAAO,CAACA,EAAS,IAAI,EAAI,CAAA,EACzC,CACD,CACH,CACF,GAIaoB,GAAgC,KAAmC,CAC9E,MAAM,aAAapD,EAAa9E,EAAgB,CAC9C,MAAMgF,EAAW,OAAOF,EAAO,IAAO,WAAaA,EAAO,KAAOA,EAAO,GAExE,OAAO8C,EAAS,oBAAoB5C,CAAQ,GAAI,CAC9C,KAAM,CACJ,KAAM,kBACN,WAAY,CACV,OAAAhF,CAAA,CACF,CACF,EACC,CACD,iBAAkB,GAClB,eAAgBf,EAAI,WAAW,MAAM,oCAAoCe,CAAM,UAAU,EAAE,SAAA,EAC3F,aAAcf,EAAI,WAAW,MAAM,+CAA+C,EAAE,SAAA,EACpF,UAAY6H,GAAa,CACvB7H,EAAI,MAAM,YAAY6H,CAAQ,CAChC,CAAA,CACD,CACH,EAEA,MAAM,MAAO,CACX,OAAOY,EAAO,mBAAoB,OAAW,CAC3C,aAAczI,EAAI,WAAW,MAAM,6CAA6C,EAAE,SAAA,EAClF,kBAAoB6H,IAClB7H,EAAI,MAAM,YAAY6H,CAAQ,EACvB7H,EAAI,MAAM,IAAI,iBAAiB,EACxC,CACD,CACH,CACF,GCpIO,SAASkJ,GAAiBrB,EAAwB,CAEvD,OAAOA,CACT,CC5CA,MAAMsB,WAAiC/H,CAAU,CAC/C,MAAO,CACL,OAAOd,EAAC,WAAI,qBAAmB,CACjC,CACF,CAEA,MAAM8I,WAA+BhI,CAAU,CAC7C,MAAO,CACL,OAAOd,EAAC,WAAI,kBAAgB,CAC9B,CACF,CAGA,MAAqB+I,WAA8BpJ,CAA2D,CAA9G,aAAA,CAAA,MAAA,GAAA,SAAA,EAGE,KAAQ,iBAAsC,CAAA,EAC9C,KAAQ,eAAuC,CAAA,EAC/C,KAAQ,MAAgC,CAAA,CAAC,CAE/B,WAA8E,CACtF,MAAO,CACL,UAAWD,EAAI,WAAW,MAAM,6BAA6B,EAAE,SAAA,EAC/D,YAAa,uBAGb,mBAAoB6I,GAAA,EACpB,sBAAuBG,GAAA,EAGvB,kBAAmB7H,EAGnB,KAAM,CACJ,CACE,IAAK,cACL,MAAOnB,EAAI,WAAW,MAAM,mCAAmC,EAAE,SAAA,EACjE,UAAWmJ,EAAA,EAEb,CACE,IAAK,WACL,MAAOnJ,EAAI,WAAW,MAAM,gCAAgC,EAAE,SAAA,EAC9D,UAAWoJ,EAAA,CACb,EAGF,aAAc,CACZ,eAAgB,6BAChB,kBAAmB,2BAAA,CACrB,CAEJ,CAGU,wBAA2C,CACnD,OAAI,KAAK,YAAc,gBAElB,MAAA,KACC9I,EAAC4D,EAAA,CACC,UAAW,KAAK,UAChB,mBAAoB,KAAK,mBACzB,cAAe,KAAK,YAAY,KAAK,IAAI,EACzC,uBAAwB,KAAK,qBAAqB,KAAK,IAAI,EAC3D,iBAAkB,KAAK,eAAe,KAAK,IAAI,CAAA,CAAA,EAGjD5D,EAAC6E,EAAA,CACC,SAAU,KAAK,aACf,sBAAuB,KAAK,wBAAwB,KAAK,IAAI,EAC7D,gBAAiB,KAAK,wBAAwB,KAAK,IAAI,CAAA,CAAA,CAE3D,EAIA,KAAK,YAAc,aAElB,MAAA,KACC7E,EAACyG,EAAA,CACC,UAAW,KAAK,iBAChB,mBAAoB,KAAK,mBACzB,cAAe,KAAK,mBAAmB,KAAK,IAAI,EAChD,uBAAwB,KAAK,4BAA4B,KAAK,IAAI,EAClE,iBAAkB,KAAK,sBAAsB,KAAK,IAAI,CAAA,CAAA,EAGxDzG,EAACoF,EAAA,CACC,UAAW,KAAK,iBAChB,QAAS,KAAK,eACd,QAAS,KAAK,QACd,gBAAiB,KAAK,qBAAqB,KAAK,IAAI,EACpD,eAAgB,KAAK,oBAAoB,KAAK,IAAI,EAClD,eAAgB,KAAK,oBAAoB,KAAK,IAAI,CAAA,CAAA,CAEtD,EAKG,MAAM,uBAAA,CACf,CAGA,MAAgB,UAA0B,CACxC,GAAI,CAEF,MAAM,KAAK,cAAA,EACX,MAAM,KAAK,iBAAA,EAGX,MAAM,KAAK,aAAA,EAGX,MAAM,KAAK,qBAAA,EACX,MAAM,KAAK,mBAAA,CACb,OAAS/E,EAAO,CACd,QAAQ,MAAM,sBAAuBA,CAAK,CAC5C,QAAA,CACE,KAAK,QAAU,GACfL,EAAE,OAAA,CACJ,CACF,CAGA,MAAc,mBAAmBI,EAA8B,CAC7D,MAAM4I,EAAoBP,EAAA,EAC1B,GAAI,MAAK,mBAET,MAAK,mBAAqB,GAC1BzI,EAAE,OAAA,EAEF,GAAI,CACF,MAAMgJ,EAAkB,OAAO5I,CAAQ,EACvC,MAAM,KAAK,qBAAA,CACb,OAASC,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,EAGrDX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,8CAA8C,CAAA,CAEvE,QAAA,CACE,KAAK,mBAAqB,GAC1BM,EAAE,OAAA,CACJ,EACF,CAEA,MAAc,4BAA4BM,EAA0C,CAClF,MAAM0I,EAAoBP,EAAA,EAC1B,GAAI,CACF,MAAMO,EAAkB,aAAa1I,CAAQ,EAC7C,MAAM,KAAK,qBAAA,EACXN,EAAE,OAAA,CACJ,OAASK,EAAO,CACd,QAAQ,MAAM,0CAA2CA,CAAK,CAChE,CACF,CAEA,MAAc,sBAAsBC,EAA0C,CAC5E,MAAM0I,EAAoBP,EAAA,EACpBlI,GAAgB,OAAOD,EAAS,MAAS,WAAaA,EAAS,KAAA,EAASA,EAAS,OAAS,mBAEhGZ,EAAI,MAAM,KAAKZ,EAAc,CAC3B,MAAOY,EAAI,WAAW,MAAM,iDAAiD,EAC7E,QAASA,EAAI,WAAW,MAAM,oDAAqD,CAAE,KAAMa,EAAc,EACzG,YAAab,EAAI,WAAW,MAAM,kDAAkD,EACpF,WAAYA,EAAI,WAAW,MAAM,iDAAiD,EAClF,UAAW,GACX,KAAM,eACN,UAAW,SAAY,CACrB,GAAI,CACF,MAAMsJ,EAAkB,OAAO1I,CAAQ,EACvC,MAAM,KAAK,qBAAA,EAEXZ,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,mDAAmD,CAAA,CAE5E,OAASW,EAAO,CACd,QAAQ,MAAM,mCAAoCA,CAAK,EACvDX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,iDAAiD,CAAA,CAE1E,CACAM,EAAE,OAAA,CACJ,EACA,SAAU,IAAM,CACdN,EAAI,MAAM,MAAA,CACZ,CAAA,CACD,CACH,CAGA,MAAc,0BAA0B6F,EAA4B9E,EAA+B,CACjG,MAAMwI,EAA0BN,GAAA,EAChC,GAAI,CACF,MAAMM,EAAwB,aAAa1D,EAAQ9E,CAAM,EACzD,MAAM,KAAK,mBAAA,EACXT,EAAE,OAAA,CACJ,OAASK,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,CACvD,CACF,CAGQ,wBAAwB8D,EAAoB,CAClD,MAAMG,EAAY,OAAOH,EAAQ,IAAO,WAAaA,EAAQ,KAAOA,EAAQ,GACtEI,EAAS,OAAOJ,EAAQ,QAAW,WAAaA,EAAQ,SAAYA,EAAQ,YAAY,QAAU,EAGxG,IAAIM,EAAW,eACf,GAAI,OAAON,EAAQ,MAAS,WAAY,CACtC,MAAMO,EAAWP,EAAQ,KAAA,EACrBO,GAAY,OAAOA,EAAS,aAAgB,WAC9CD,EAAWC,EAAS,YAAA,EACXA,GAAYA,EAAS,YAAY,cAC1CD,EAAWC,EAAS,WAAW,YAEnC,CAEAhF,EAAI,MAAM,KAAKZ,EAAc,CAC3B,MAAOY,EAAI,WAAW,MAAM,gDAAgD,EAC5E,QAASA,EAAI,WAAW,MAAM,mDAAoD,CAAE,KAAM,GAAG+E,CAAQ,MAAMF,CAAM,EAAA,CAAI,EACrH,YAAa7E,EAAI,WAAW,MAAM,iDAAiD,EACnF,WAAYA,EAAI,WAAW,MAAM,gDAAgD,EACjF,UAAW,GACX,KAAM,eACN,UAAW,SAAY,CACrB,GAAI,CACF,MAAM6F,EAAS7F,EAAI,MAAM,QAAQ,sBAAuB4E,CAAS,EAC7DiB,IACF,MAAMA,EAAO,OAAA,EACb,MAAM,KAAK,iBAAA,EAEX7F,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,0CAA0C,CAAA,EAGrE,OAASW,EAAO,CACd,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CX,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,wCAAwC,CAAA,CAEjE,CACF,EACA,SAAU,IAAM,CACdA,EAAI,MAAM,MAAA,CACZ,CAAA,CACD,CACH,CAGA,MAAc,sBAAsC,CAClD,MAAMsJ,EAAoBP,EAAA,EAC1B,GAAI,CACF,KAAK,iBAAmB,MAAMO,EAAkB,KAAA,EAChD,QAAQ,IAAI,4BAA6B,KAAK,gBAAgB,CAChE,OAAS3I,EAAO,CACd,QAAQ,MAAM,mCAAoCA,CAAK,EACvD,KAAK,iBAAmB,CAAA,CAC1B,CACF,CAGA,MAAc,cAA8B,CAE1C,GAAI,KAAK,aAAa,SAAW,EAAG,OAapC,MAAM6I,EAXU,CAAC,GAAG,IAAI,IAAI,KAAK,aAC9B,IAAI,GAAK,CAER,MAAMC,EAAgB,GAAW,MAAM,eAAe,MAAM,MAAS,GAAW,eAAe,MAAM,KACrG,OAAIA,EACKA,EAAa,GAEf,IACT,CAAC,EACA,UAAatG,GAAO,IAAwB,CAAA,CAC9C,EAC2B,OAAOuG,GAAU,CAAC,KAAK,MAAMA,CAAM,CAAC,EAEhE,GAAIF,EAAY,OAAS,EACvB,GAAI,CACF,MAAMG,EAAeH,EAAY,IAAIE,GACnC1J,EAAI,MAAM,KAAK,QAAS0J,CAAM,EAAE,MAAM/I,IACpC,QAAQ,MAAM,sBAAsB+I,CAAM,IAAK/I,CAAK,EAC7C,KACR,CAAA,EAGGiJ,EAAc,MAAM,QAAQ,IAAID,CAAY,EAElDH,EAAY,QAAQ,CAACE,EAAQG,IAAU,CACjCD,EAAYC,CAAK,IACnB,KAAK,MAAMH,CAAM,EAAIE,EAAYC,CAAK,EAE1C,CAAC,CACH,OAASlJ,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC7C,CAEJ,CAGA,MAAc,oBAAoC,CAChD,GAAI,CACF,MAAMkH,EAAW,MAAM7H,EAAI,QAAQ,CACjC,OAAQ,MACR,IAAKA,EAAI,MAAM,UAAU,QAAQ,EAAI,kBAAA,CACtC,EAEDA,EAAI,MAAM,YAA6B6H,CAAS,EAChD,KAAK,eAAiB7H,EAAI,MAAM,IAAI,iBAAiB,EACrD,QAAQ,IAAI,0BAA2B,KAAK,cAAc,CAC5D,OAASW,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,EACrD,KAAK,eAAiB,CAAA,CACxB,CACF,CAEA,MAAc,qBAAqBkF,EAAaU,EAAyBC,EAA+B,CACtG,MAAMT,EAAW,OAAOF,EAAO,IAAO,WAAaA,EAAO,KAAOA,EAAO,GAExE,GAAI,CACF,MAAMgC,EAAW,MAAM7H,EAAI,QAAQ,CACjC,OAAQ,QACR,IAAK,GAAGA,EAAI,MAAM,UAAU,QAAQ,CAAC,oBAAoB+F,CAAQ,GACjE,KAAM,CACJ,KAAM,CACJ,KAAM,kBACN,GAAIA,EACJ,WAAY,CACV,OAAQ,WACR,eAAAQ,EACA,WAAYC,CAAA,CACd,CACF,CACF,CACD,EAEDxG,EAAI,MAAM,YAA6B6H,CAAS,EAChD,MAAM,KAAK,mBAAA,EACXvH,EAAE,OAAA,CACJ,OAASK,EAAO,CACd,cAAQ,MAAM,kCAAmCA,CAAK,EAChDA,CACR,CACF,CAEA,MAAc,oBAAoBkF,EAAaY,EAA+B,CAC5E,MAAMV,EAAW,OAAOF,EAAO,IAAO,WAAaA,EAAO,KAAOA,EAAO,GAExE,GAAI,CACF,MAAMgC,EAAW,MAAM7H,EAAI,QAAQ,CACjC,OAAQ,QACR,IAAK,GAAGA,EAAI,MAAM,UAAU,QAAQ,CAAC,oBAAoB+F,CAAQ,GACjE,KAAM,CACJ,KAAM,CACJ,KAAM,kBACN,GAAIA,EACJ,WAAY,CACV,OAAQ,WACR,WAAYU,CAAA,CACd,CACF,CACF,CACD,EAEDzG,EAAI,MAAM,YAA6B6H,CAAS,EAChD,MAAM,KAAK,mBAAA,EACXvH,EAAE,OAAA,CACJ,OAASK,EAAO,CACd,cAAQ,MAAM,kCAAmCA,CAAK,EAChDA,CACR,CACF,CAEA,MAAc,oBAAoBkF,EAA4B,CAC5D,MAAME,EAAW,OAAOF,EAAO,IAAO,WAAaA,EAAO,KAAOA,EAAO,GAExE,GAAI,CACF,MAAMiE,EAAc9J,EAAI,MAAM,QAAQ,kBAAmB+F,CAAQ,EAC7D+D,IACF,MAAMA,EAAY,OAAA,EAClB,MAAM,KAAK,mBAAA,EACXxJ,EAAE,OAAA,EAEN,OAASK,EAAO,CACd,cAAQ,MAAM,iCAAkCA,CAAK,EAC/CA,CACR,CACF,CACF,CC5ZA,MAAqBoJ,WAA2BC,CAAM,CAAtD,aAAA,CAAA,MAAA,GAAA,SAAA,EAEE,KAAA,KAAOA,EAAM,UAAkB,MAAM,EACrC,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,QAAUA,EAAM,UAAyB,SAAS,EAClD,KAAA,YAAcA,EAAM,UAAkB,aAAa,EACnD,KAAA,UAAYA,EAAM,UAAkB,WAAW,EAC/C,KAAA,UAAYA,EAAM,UAAkB,WAAW,EAC/C,KAAA,IAAMA,EAAM,UAAkB,KAAK,EAGnC,KAAA,QAAUA,EAAM,UAAyB,SAAS,EAClD,KAAA,UAAYA,EAAM,UAAyB,WAAW,EAGtD,KAAA,SAAWA,EAAM,UAAmB,UAAU,EAG9C,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,CAAA,CAG5D,aAAc,CACZ,MAAO,yBAAyB,KAAK,GAAA,CAAI,EAC3C,CAGA,gBAAyB,CACvB,OAAO,KAAK,eAAiB,KAAK,KAAA,CACpC,CAEA,cAAcnF,EAAyB,CACrC,MAAMnD,EAAM,KAAK,UAAA,EACXC,EAAM,KAAK,UAAA,EACjB,OAAOkD,GAAUnD,GAAOmD,GAAUlD,CACpC,CAEA,aAAakD,EAAwB,CACnC,OAAOA,EAAS,KAAK,IAAA,CACvB,CACF,CCqBO,MAAMoF,EAAoB,CAC/B,QAAS,UACT,SAAU,WACV,SAAU,UACZ,EC/DA,MAAqBC,WAA0BF,CAAM,CAArD,aAAA,CAAA,MAAA,GAAA,SAAA,EAEE,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,eAAiBA,EAAM,UAAkB,gBAAgB,EACzD,KAAA,QAAUA,EAAM,UAAkB,SAAS,EAC3C,KAAA,OAASA,EAAM,UAA4B,QAAQ,EAGnD,KAAA,WAAaA,EAAM,UAAkB,YAAY,EACjD,KAAA,OAASA,EAAM,UAAkB,QAAQ,EAGzC,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAG5D,KAAA,KAAOA,EAAM,OAAa,MAAM,EAChC,KAAA,SAAWA,EAAM,OAA2B,UAAU,CAAA,CAGtD,aAAc,CACZ,MAAO,wBAAwB,KAAK,GAAA,CAAI,EAC1C,CAGA,WAAqB,CACnB,OAAO,KAAK,WAAaC,EAAkB,OAC7C,CAEA,YAAsB,CACpB,OAAO,KAAK,WAAaA,EAAkB,QAC7C,CAEA,YAAsB,CACpB,OAAO,KAAK,WAAaA,EAAkB,QAC7C,CAEA,eAAyB,CACvB,OAAO,KAAK,UAAA,CACd,CAGA,aAAsB,CACpB,MAAMlJ,EAAS,KAAK,OAAA,EACpB,OAAOf,EAAI,WAAW,MAAM,2BAA2Be,CAAM,EAAE,EAAE,SAAA,CACnE,CAEA,aAAsB,CAEpB,OADe,KAAK,OAAA,EACZ,CACN,KAAKkJ,EAAkB,SACrB,MAAO,UACT,KAAKA,EAAkB,SACrB,MAAO,SACT,KAAKA,EAAkB,QACvB,QACE,MAAO,SAAA,CAEb,CACF,CCnEA,MAAqBE,WAAwBH,CAAM,CAAnD,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAA,KAAOA,EAAM,UAAkB,MAAM,EACrC,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,QAAUA,EAAM,UAAkB,SAAS,EAC3C,KAAA,cAAgBA,EAAM,UAAU,eAAe,EAC/C,KAAA,YAAcA,EAAM,UAAkB,aAAa,EACnD,KAAA,UAAYA,EAAM,UAAU,WAAW,EACvC,KAAA,UAAYA,EAAM,UAAU,WAAW,EACvC,KAAA,IAAMA,EAAM,UAAU,KAAK,EAC3B,KAAA,QAAUA,EAAM,UAAU,SAAS,EACnC,KAAA,eAAiBA,EAAM,UAAkB,gBAAgB,EACzD,KAAA,QAAUA,EAAM,UAAkB,SAAS,EAC3C,KAAA,UAAYA,EAAM,UAAkB,WAAW,EAC/C,KAAA,YAAcA,EAAM,UAAkB,aAAa,EACnD,KAAA,cAAgBA,EAAM,UAAU,eAAe,EAC/C,KAAA,SAAWA,EAAM,UAAU,UAAU,EACrC,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,CAAA,CAC9D,CClBA,MAAqBI,EAArB,MAAqBA,UAAsBJ,CAAM,CAAjD,aAAA,CAAA,MAAA,GAAA,SAAA,EAEE,KAAA,GAAKA,EAAM,UAAkB,IAAI,EACjC,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,WAAaA,EAAM,UAAkB,YAAY,EACjD,KAAA,gBAAkBA,EAAM,UAAkB,iBAAiB,EAC3D,KAAA,SAAWA,EAAM,UAAkB,UAAU,EAC7C,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,YAAcA,EAAM,UAAU,cAAeA,EAAM,aAAa,EAChE,KAAA,cAAgBA,EAAM,UAAkB,eAAe,EACvD,KAAA,YAAcA,EAAM,UAAkB,aAAa,EACnD,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,YAAcA,EAAM,UAAU,cAAeA,EAAM,aAAa,EAChE,KAAA,YAAcA,EAAM,UAAkB,aAAa,EACnD,KAAA,WAAaA,EAAM,UAAkB,YAAY,EACjD,KAAA,eAAiBA,EAAM,UAAkB,gBAAgB,EACzD,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAG5D,KAAA,KAAOA,EAAM,OAAO,MAAM,EAC1B,KAAA,SAAWA,EAAM,OAAO,UAAU,EAClC,KAAA,gBAAkBA,EAAM,OAAO,iBAAiB,CAAA,CAQhD,WAAqB,CACnB,OAAO,KAAK,WAAaI,EAAc,cACzC,CAEA,YAAsB,CACpB,OAAO,KAAK,WAAaA,EAAc,eACzC,CAEA,YAAsB,CACpB,OAAO,KAAK,WAAaA,EAAc,eACzC,CAEA,gBAAyB,CACvB,OAAQ,KAAK,SAAO,CAClB,KAAKA,EAAc,eACjB,MAAO,UACT,KAAKA,EAAc,gBACjB,MAAO,UACT,KAAKA,EAAc,gBACjB,MAAO,QACT,QACE,MAAO,WAAA,CAEb,CACF,EA7BEA,EAAO,eAAiB,UACxBA,EAAO,gBAAkB,WACzBA,EAAO,gBAAkB,WA3B3B,IAAqBC,EAArBD,ECKApK,EAAI,aAAa,IAAI,wBAAyB,IAAM,CAElDA,EAAI,MAAM,OAAO,sBAAsB,EAAI+J,GAC3C/J,EAAI,MAAM,OAAO,qBAAqB,EAAIkK,GAC1ClK,EAAI,MAAM,OAAO,mBAAmB,EAAImK,GACxCnK,EAAI,MAAM,OAAO,iBAAiB,EAAIqK,EAEtCrK,EAAI,cACD,IAAI,uBAAuB,EAC3B,aAAaqJ,EAAqB,CACvC,CAAC"}