{"version":3,"file":"admin.js","sources":["../src/admin/components/WithdrawalManagementPage.tsx","../src/common/models/WithdrawalPlatform.ts","../src/common/models/WithdrawalRequest.ts","../src/common/extend.ts","../src/admin/index.ts"],"sourcesContent":["import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport type Mithril from 'mithril';\r\n\r\ninterface WithdrawalPlatform {\r\n  id: number;\r\n  attributes: {\r\n    name: string;\r\n    createdAt?: string;\r\n    created_at?: string;\r\n  };\r\n}\r\n\r\ninterface WithdrawalRequest {\r\n  id: number;\r\n  attributes: {\r\n    amount: number;\r\n    accountDetails?: string;\r\n    account_details?: string;\r\n    status: string;\r\n    createdAt?: string;\r\n    created_at?: string;\r\n  };\r\n  relationships?: {\r\n    user?: {\r\n      data: { id: number };\r\n    };\r\n    platform?: {\r\n      data: { id: number };\r\n    };\r\n  };\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  attributes: {\r\n    displayName: string;\r\n  };\r\n}\r\n\r\nexport default class WithdrawalManagementPage extends ExtensionPage {\r\n  private platforms: WithdrawalPlatform[] = [];\r\n  private requests: WithdrawalRequest[] = [];\r\n  private users: { [key: number]: User } = {};\r\n  private loading = true;\r\n  private newPlatformName = Stream('');\r\n  private submittingPlatform = false;\r\n\r\n  oninit(vnode: Mithril.VnodeDOM) {\r\n    super.oninit(vnode);\r\n    this.loadData();\r\n  }\r\n\r\n  content() {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"WithdrawalManagementPage\">\r\n        <div className=\"container\">\r\n          <h2>{app.translator.trans('withdrawal.admin.page.title')}</h2>\r\n          \r\n          {this.renderSettings()}\r\n          {this.renderPlatformManagement()}\r\n          {this.renderRequestManagement()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderSettings(): Mithril.Children {\r\n    return (\r\n      <div className=\"WithdrawalManagementPage-section\">\r\n        <h3>{app.translator.trans('withdrawal.admin.settings.title')}</h3>\r\n        <div className=\"Form\">\r\n          <div className=\"Form-group\">\r\n            <label>{app.translator.trans('withdrawal.admin.settings.min_amount')}</label>\r\n            {this.buildSettingComponent({\r\n              type: 'number',\r\n              setting: 'withdrawal.min_amount',\r\n              placeholder: '0'\r\n            })}\r\n          </div>\r\n          \r\n          <div className=\"Form-group\">\r\n            <label>{app.translator.trans('withdrawal.admin.settings.max_amount')}</label>\r\n            {this.buildSettingComponent({\r\n              type: 'number',\r\n              setting: 'withdrawal.max_amount',\r\n              placeholder: '10000'\r\n            })}\r\n          </div>\r\n          \r\n          <div className=\"Form-group\">\r\n            <label>{app.translator.trans('withdrawal.admin.settings.fee')}</label>\r\n            {this.buildSettingComponent({\r\n              type: 'number',\r\n              setting: 'withdrawal.fee',\r\n              placeholder: '0'\r\n            })}\r\n          </div>\r\n          \r\n          <div className=\"Form-group\">\r\n            {this.submitButton()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderPlatformManagement(): Mithril.Children {\r\n    return (\r\n      <div className=\"WithdrawalManagementPage-section\">\r\n        <h3>{app.translator.trans('withdrawal.admin.platforms.title')}</h3>\r\n        \r\n        <div className=\"WithdrawalManagementPage-addPlatform\">\r\n          <div className=\"Form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"FormControl\"\r\n              placeholder={app.translator.trans('withdrawal.admin.platforms.add_placeholder')}\r\n              value={this.newPlatformName()}\r\n              oninput={(e: Event) => this.newPlatformName((e.target as HTMLInputElement).value)}\r\n            />\r\n            <Button\r\n              className=\"Button Button--primary\"\r\n              loading={this.submittingPlatform}\r\n              disabled={!this.newPlatformName()}\r\n              onclick={this.addPlatform.bind(this)}\r\n            >\r\n              {app.translator.trans('withdrawal.admin.platforms.add_button')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"WithdrawalManagementPage-platformList\">\r\n          {this.platforms.length === 0 ? (\r\n            <p>{app.translator.trans('withdrawal.admin.platforms.empty')}</p>\r\n          ) : (\r\n            this.platforms.map((platform) => this.renderPlatform(platform))\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderPlatform(platform: WithdrawalPlatform): Mithril.Children {\r\n    const platformId = platform.id();\r\n    const platformName = platform.name ? platform.name() : 'Unknown Platform';\r\n    const createdDate = platform.createdAt ? platform.createdAt() : null;\r\n    \r\n    let dateDisplay: Mithril.Children = 'N/A';\r\n    if (createdDate) {\r\n      try {\r\n        dateDisplay = humanTime(createdDate);\r\n      } catch (e) {\r\n        console.error('Error formatting date:', e);\r\n        dateDisplay = 'Invalid Date';\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div key={platformId} className=\"WithdrawalPlatform\">\r\n        <span className=\"WithdrawalPlatform-name\">{platformName}</span>\r\n        <span className=\"WithdrawalPlatform-date\">{dateDisplay}</span>\r\n        <Button\r\n          className=\"Button Button--danger\"\r\n          onclick={() => this.deletePlatform(platform)}\r\n        >\r\n          {app.translator.trans('withdrawal.admin.platforms.delete')}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRequestManagement(): Mithril.Children {\r\n    const pendingRequests = this.requests.filter(r => r.status ? r.status() === 'pending' : false);\r\n    const processedRequests = this.requests.filter(r => r.status ? r.status() !== 'pending' : true);\r\n\r\n    return (\r\n      <div className=\"WithdrawalManagementPage-section\">\r\n        <h3>{app.translator.trans('withdrawal.admin.requests.title')}</h3>\r\n        \r\n        <div className=\"WithdrawalManagementPage-pendingRequests\">\r\n          <h4>{app.translator.trans('withdrawal.admin.requests.pending_title')}</h4>\r\n          {pendingRequests.length === 0 ? (\r\n            <p>{app.translator.trans('withdrawal.admin.requests.no_pending')}</p>\r\n          ) : (\r\n            pendingRequests.map((request) => this.renderRequest(request, true))\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"WithdrawalManagementPage-processedRequests\">\r\n          <h4>{app.translator.trans('withdrawal.admin.requests.processed_title')}</h4>\r\n          {processedRequests.length === 0 ? (\r\n            <p>{app.translator.trans('withdrawal.admin.requests.no_processed')}</p>\r\n          ) : (\r\n            processedRequests.map((request) => this.renderRequest(request, false))\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRequest(request: WithdrawalRequest, showActions: boolean): Mithril.Children {\r\n    const requestId = request.id();\r\n    const amount = request.amount ? request.amount() : 0;\r\n    const status = request.status ? request.status() : 'pending';\r\n    const accountDetails = request.accountDetails ? request.accountDetails() : 'N/A';\r\n    const createdDate = request.createdAt ? request.createdAt() : null;\r\n    \r\n    // Get user info\r\n    let userName = 'Unknown User';\r\n    if (request.user) {\r\n      const userData = request.user();\r\n      if (userData && userData.displayName) {\r\n        userName = userData.displayName();\r\n      }\r\n    } else if (request.relationships?.user?.data?.id) {\r\n      const user = this.users[request.relationships.user.data.id];\r\n      if (user && user.displayName) {\r\n        userName = user.displayName();\r\n      }\r\n    }\r\n    \r\n    // Get platform info\r\n    let platformName = 'Unknown Platform';\r\n    if (request.platform) {\r\n      const platformData = request.platform();\r\n      if (platformData && platformData.name) {\r\n        platformName = platformData.name();\r\n      }\r\n    } else if (request.relationships?.platform?.data?.id) {\r\n      const platform = this.platforms.find(p => p.id() == request.relationships.platform.data.id);\r\n      if (platform && platform.name) {\r\n        platformName = platform.name();\r\n      }\r\n    }\r\n    \r\n    const statusClass = `status-${status}`;\r\n    \r\n    let dateDisplay: Mithril.Children = 'N/A';\r\n    if (createdDate) {\r\n      try {\r\n        dateDisplay = humanTime(createdDate);\r\n      } catch (e) {\r\n        console.error('Error formatting request date:', e);\r\n        dateDisplay = 'Invalid Date';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div key={requestId} className={`WithdrawalRequest ${statusClass}`}>\r\n        <div className=\"WithdrawalRequest-info\">\r\n          <div className=\"WithdrawalRequest-user\">\r\n            <strong>{userName}</strong>\r\n          </div>\r\n          <div className=\"WithdrawalRequest-details\">\r\n            <span className=\"amount\">${amount}</span>\r\n            <span className=\"platform\">{platformName}</span>\r\n            <span className=\"date\">{dateDisplay}</span>\r\n          </div>\r\n          <div className=\"WithdrawalRequest-account\">\r\n            <strong>{app.translator.trans('withdrawal.admin.requests.account_details')}:</strong>\r\n            <span>{accountDetails}</span>\r\n          </div>\r\n          <div className=\"WithdrawalRequest-status\">\r\n            <span className={`Badge Badge--${status}`}>\r\n              {app.translator.trans(`withdrawal.admin.requests.status.${status}`)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        {showActions && (\r\n          <div className=\"WithdrawalRequest-actions\">\r\n            <Button\r\n              className=\"Button Button--primary\"\r\n              onclick={() => this.updateRequestStatus(request, 'approved')}\r\n            >\r\n              {app.translator.trans('withdrawal.admin.requests.approve')}\r\n            </Button>\r\n            <Button\r\n              className=\"Button Button--danger\"\r\n              onclick={() => this.updateRequestStatus(request, 'rejected')}\r\n            >\r\n              {app.translator.trans('withdrawal.admin.requests.reject')}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private async addPlatform(): Promise<void> {\r\n    if (!this.newPlatformName() || this.submittingPlatform) return;\r\n\r\n    this.submittingPlatform = true;\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/withdrawal-platforms',\r\n        body: {\r\n          data: {\r\n            type: 'withdrawal-platforms',\r\n            attributes: {\r\n              name: this.newPlatformName()\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (response && response.data) {\r\n        app.store.pushPayload(response);\r\n      }\r\n      \r\n      this.newPlatformName('');\r\n      await this.loadPlatforms();\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.add_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding platform:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.add_error')\r\n      );\r\n    } finally {\r\n      this.submittingPlatform = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private deletePlatform(platform: WithdrawalPlatform): void {\r\n    const platformName = platform.name ? platform.name() : 'Unknown Platform';\r\n    \r\n    app.modal.show(ConfirmDeleteModal, {\r\n      platformName: platformName,\r\n      onConfirm: async () => {\r\n        try {\r\n          const record = app.store.getById('withdrawal-platforms', platform.id());\r\n          if (record) {\r\n            await record.delete();\r\n            await this.loadPlatforms();\r\n            \r\n            app.alerts.show(\r\n              { type: 'success', dismissible: true },\r\n              app.translator.trans('withdrawal.admin.platforms.delete_success')\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting platform:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.platforms.delete_error')\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async updateRequestStatus(request: WithdrawalRequest, status: string): Promise<void> {\r\n    try {\r\n      const record = app.store.getById('withdrawal-requests', request.id);\r\n      if (record) {\r\n        await record.save({ status });\r\n        await this.loadRequests();\r\n        \r\n        app.alerts.show(\r\n          { type: 'success', dismissible: true },\r\n          app.translator.trans(`withdrawal.admin.requests.${status}_success`)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating request:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.requests.update_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private async loadData(): Promise<void> {\r\n    try {\r\n      await Promise.all([\r\n        this.loadPlatforms(),\r\n        this.loadRequests()\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async loadPlatforms(): Promise<void> {\r\n    try {\r\n      const response = await app.store.find('withdrawal-platforms');\r\n      this.platforms = Array.isArray(response) ? response.filter(p => p !== null) : (response ? [response] : []);\r\n      \r\n      console.log('Loaded platforms:', this.platforms);\r\n    } catch (error) {\r\n      console.error('Error loading platforms:', error);\r\n      this.platforms = [];\r\n    }\r\n  }\r\n\r\n  private async loadRequests(): Promise<void> {\r\n    try {\r\n      const response = await app.store.find('withdrawal-requests');\r\n      this.requests = Array.isArray(response) ? response.filter(r => r !== null) : (response ? [response] : []);\r\n      \r\n      console.log('Loaded requests:', this.requests);\r\n    } catch (error) {\r\n      console.error('Error loading requests:', error);\r\n      this.requests = [];\r\n    }\r\n    \r\n    // Load user data for each request\r\n    const userIds = [...new Set(this.requests.map(r => r.relationships.user.data.id))];\r\n    const usersToLoad = userIds.filter(userId => !this.users[userId]);\r\n    \r\n    if (usersToLoad.length > 0) {\r\n      try {\r\n        const userPromises = usersToLoad.map(userId => \r\n          app.store.find('users', userId).catch(error => {\r\n            console.error(`Error loading user ${userId}:`, error);\r\n            return null;\r\n          })\r\n        );\r\n        \r\n        const loadedUsers = await Promise.all(userPromises);\r\n        \r\n        usersToLoad.forEach((userId, index) => {\r\n          if (loadedUsers[index]) {\r\n            this.users[userId] = loadedUsers[index];\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading users:', error);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass ConfirmDeleteModal extends Modal {\r\n  private platformName: string;\r\n  private onConfirm: () => void;\r\n\r\n  constructor(vnode: any) {\r\n    super(vnode);\r\n    this.platformName = vnode.attrs.platformName;\r\n    this.onConfirm = vnode.attrs.onConfirm;\r\n  }\r\n\r\n  className() {\r\n    return 'ConfirmDeleteModal Modal--small';\r\n  }\r\n\r\n  title() {\r\n    return app.translator.trans('withdrawal.admin.platforms.delete_confirm_title');\r\n  }\r\n\r\n  content() {\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <p>{app.translator.trans('withdrawal.admin.platforms.delete_confirm_message', { name: this.platformName })}</p>\r\n        <div className=\"Form-group\">\r\n          <Button \r\n            className=\"Button Button--primary\" \r\n            onclick={this.confirm.bind(this)}\r\n          >\r\n            {app.translator.trans('withdrawal.admin.platforms.delete_confirm_button')}\r\n          </Button>\r\n          <Button \r\n            className=\"Button\" \r\n            onclick={this.hide.bind(this)}\r\n          >\r\n            {app.translator.trans('withdrawal.admin.platforms.delete_cancel_button')}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  confirm() {\r\n    this.onConfirm();\r\n    this.hide();\r\n  }\r\n}","import Model from 'flarum/common/Model';\n\nexport default class WithdrawalPlatform extends Model {\n  name = Model.attribute('name');\n  symbol = Model.attribute('symbol');\n  minAmount = Model.attribute('minAmount');\n  maxAmount = Model.attribute('maxAmount');\n  fee = Model.attribute('fee');\n  icon = Model.attribute('icon');\n  isActive = Model.attribute('isActive');\n  createdAt = Model.attribute('createdAt', Model.transformDate);\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\n}","import Model from 'flarum/common/Model';\n\nexport default class WithdrawalRequest extends Model {\n  amount = Model.attribute('amount');\n  accountDetails = Model.attribute('accountDetails');\n  status = Model.attribute('status');\n  createdAt = Model.attribute('createdAt', Model.transformDate);\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\n  \n  user = Model.hasOne('user');\n  platform = Model.hasOne('withdrawal-platforms');\n}","import Extend from 'flarum/common/extenders';\nimport WithdrawalPlatform from './models/WithdrawalPlatform';\nimport WithdrawalRequest from './models/WithdrawalRequest';\n\nexport default [\n  new Extend.Store()\n    .add('withdrawal-platforms', WithdrawalPlatform)\n    .add('withdrawal-requests', WithdrawalRequest),\n];","import app from 'flarum/admin/app';\nimport WithdrawalManagementPage from './components/WithdrawalManagementPage';\nimport WithdrawalPlatform from '../common/models/WithdrawalPlatform';\nimport WithdrawalRequest from '../common/models/WithdrawalRequest';\n\napp.initializers.add('wusong8899-withdrawal', () => {\n  // Register models in store\n  app.store.models['withdrawal-platforms'] = WithdrawalPlatform;\n  app.store.models['withdrawal-requests'] = WithdrawalRequest;\n  \n  app.extensionData\n    .for('wusong8899-withdrawal')\n    .registerPage(WithdrawalManagementPage);\n});\n\nexport { default as extend } from '../common/extend';"],"names":["WithdrawalManagementPage","ExtensionPage","Stream","vnode","LoadingIndicator","app","e","Button","platform","platformId","platformName","createdDate","dateDisplay","humanTime","pendingRequests","r","processedRequests","request","showActions","requestId","amount","status","accountDetails","userName","userData","user","platformData","p","statusClass","response","error","ConfirmDeleteModal","record","usersToLoad","userId","userPromises","loadedUsers","index","Modal","WithdrawalPlatform","Model","WithdrawalRequest","Extend"],"mappings":"0CA6CA,MAAqBA,UAAiCC,CAAc,CAApE,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAQ,UAAkC,CAAA,EAC1C,KAAQ,SAAgC,CAAA,EACxC,KAAQ,MAAiC,CAAA,EACzC,KAAQ,QAAU,GAClB,KAAQ,gBAAkBC,EAAO,EAAE,EACnC,KAAQ,mBAAqB,EAAA,CAE7B,OAAOC,EAAyB,CAC9B,MAAM,OAAOA,CAAK,EAClB,KAAK,SAAA,CACP,CAEA,SAAU,CACR,OAAI,KAAK,UACCC,EAAA,IAAiB,EAIzB,EAAC,MAAA,CAAI,UAAU,0BAAA,EACb,EAAC,OAAI,UAAU,aACb,EAAC,KAAA,KAAIC,EAAI,WAAW,MAAM,6BAA6B,CAAE,EAExD,KAAK,iBACL,KAAK,yBAAA,EACL,KAAK,wBAAA,CACR,CACF,CAEJ,CAEQ,gBAAmC,CACzC,OACE,EAAC,MAAA,CAAI,UAAU,kCAAA,EACb,EAAC,KAAA,KAAIA,EAAI,WAAW,MAAM,iCAAiC,CAAE,EAC7D,EAAC,MAAA,CAAI,UAAU,MAAA,EACb,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KAAOA,EAAI,WAAW,MAAM,sCAAsC,CAAE,EACpE,KAAK,sBAAsB,CAC1B,KAAM,SACN,QAAS,wBACT,YAAa,GAAA,CACd,CACH,EAEA,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KAAOA,EAAI,WAAW,MAAM,sCAAsC,CAAE,EACpE,KAAK,sBAAsB,CAC1B,KAAM,SACN,QAAS,wBACT,YAAa,OAAA,CACd,CACH,EAEA,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,KAAOA,EAAI,WAAW,MAAM,+BAA+B,CAAE,EAC7D,KAAK,sBAAsB,CAC1B,KAAM,SACN,QAAS,iBACT,YAAa,GAAA,CACd,CACH,EAEA,EAAC,MAAA,CAAI,UAAU,YAAA,EACZ,KAAK,aAAA,CACR,CACF,CACF,CAEJ,CAEQ,0BAA6C,CACnD,SACG,MAAA,CAAI,UAAU,oCACb,EAAC,KAAA,KAAIA,EAAI,WAAW,MAAM,kCAAkC,CAAE,IAE7D,MAAA,CAAI,UAAU,wCACb,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAAC,QAAA,CACC,KAAK,OACL,UAAU,cACV,YAAaA,EAAI,WAAW,MAAM,4CAA4C,EAC9E,MAAO,KAAK,gBAAA,EACZ,QAAUC,GAAa,KAAK,gBAAiBA,EAAE,OAA4B,KAAK,CAAA,CAAA,EAElF,EAACC,EAAA,CACC,UAAU,yBACV,QAAS,KAAK,mBACd,SAAU,CAAC,KAAK,gBAAA,EAChB,QAAS,KAAK,YAAY,KAAK,IAAI,CAAA,EAElCF,EAAI,WAAW,MAAM,uCAAuC,CAAA,CAEjE,CACF,EAEA,EAAC,MAAA,CAAI,UAAU,uCAAA,EACZ,KAAK,UAAU,SAAW,EACzB,EAAC,IAAA,KAAGA,EAAI,WAAW,MAAM,kCAAkC,CAAE,EAE7D,KAAK,UAAU,IAAKG,GAAa,KAAK,eAAeA,CAAQ,CAAC,CAElE,CACF,CAEJ,CAEQ,eAAeA,EAAgD,CACrE,MAAMC,EAAaD,EAAS,GAAA,EACtBE,EAAeF,EAAS,KAAOA,EAAS,OAAS,mBACjDG,EAAcH,EAAS,UAAYA,EAAS,YAAc,KAEhE,IAAII,EAAgC,MACpC,GAAID,EACF,GAAI,CACFC,EAAcC,EAAUF,CAAW,CACrC,OAASL,EAAG,CACV,QAAQ,MAAM,yBAA0BA,CAAC,EACzCM,EAAc,cAChB,CAGF,SACG,MAAA,CAAI,IAAKH,EAAY,UAAU,sBAC9B,EAAC,OAAA,CAAK,UAAU,yBAAA,EAA2BC,CAAa,EACxD,EAAC,QAAK,UAAU,yBAAA,EAA2BE,CAAY,EACvD,EAACL,EAAA,CACC,UAAU,wBACV,QAAS,IAAM,KAAK,eAAeC,CAAQ,CAAA,EAE1CH,EAAI,WAAW,MAAM,mCAAmC,CAAA,CAE7D,CAEJ,CAEQ,yBAA4C,CAClD,MAAMS,EAAkB,KAAK,SAAS,OAAOC,GAAKA,EAAE,OAASA,EAAE,WAAa,UAAY,EAAK,EACvFC,EAAoB,KAAK,SAAS,OAAOD,GAAKA,EAAE,OAASA,EAAE,WAAa,UAAY,EAAI,EAE9F,SACG,MAAA,CAAI,UAAU,kCAAA,EACb,EAAC,UAAIV,EAAI,WAAW,MAAM,iCAAiC,CAAE,EAE7D,EAAC,MAAA,CAAI,UAAU,4CACb,EAAC,KAAA,KAAIA,EAAI,WAAW,MAAM,yCAAyC,CAAE,EACpES,EAAgB,SAAW,EAC1B,EAAC,IAAA,KAAGT,EAAI,WAAW,MAAM,sCAAsC,CAAE,EAEjES,EAAgB,IAAKG,GAAY,KAAK,cAAcA,EAAS,EAAI,CAAC,CAEtE,IAEC,MAAA,CAAI,UAAU,8CACb,EAAC,UAAIZ,EAAI,WAAW,MAAM,2CAA2C,CAAE,EACtEW,EAAkB,SAAW,EAC5B,EAAC,SAAGX,EAAI,WAAW,MAAM,wCAAwC,CAAE,EAEnEW,EAAkB,IAAKC,GAAY,KAAK,cAAcA,EAAS,EAAK,CAAC,CAEzE,CACF,CAEJ,CAEQ,cAAcA,EAA4BC,EAAwC,CACxF,MAAMC,EAAYF,EAAQ,GAAA,EACpBG,EAASH,EAAQ,OAASA,EAAQ,SAAW,EAC7CI,EAASJ,EAAQ,OAASA,EAAQ,SAAW,UAC7CK,EAAiBL,EAAQ,eAAiBA,EAAQ,iBAAmB,MACrEN,EAAcM,EAAQ,UAAYA,EAAQ,YAAc,KAG9D,IAAIM,EAAW,eACf,GAAIN,EAAQ,KAAM,CAChB,MAAMO,EAAWP,EAAQ,KAAA,EACrBO,GAAYA,EAAS,cACvBD,EAAWC,EAAS,YAAA,EAExB,SAAWP,EAAQ,eAAe,MAAM,MAAM,GAAI,CAChD,MAAMQ,EAAO,KAAK,MAAMR,EAAQ,cAAc,KAAK,KAAK,EAAE,EACtDQ,GAAQA,EAAK,cACfF,EAAWE,EAAK,YAAA,EAEpB,CAGA,IAAIf,EAAe,mBACnB,GAAIO,EAAQ,SAAU,CACpB,MAAMS,EAAeT,EAAQ,SAAA,EACzBS,GAAgBA,EAAa,OAC/BhB,EAAegB,EAAa,KAAA,EAEhC,SAAWT,EAAQ,eAAe,UAAU,MAAM,GAAI,CACpD,MAAMT,EAAW,KAAK,UAAU,KAAKmB,GAAKA,EAAE,GAAA,GAAQV,EAAQ,cAAc,SAAS,KAAK,EAAE,EACtFT,GAAYA,EAAS,OACvBE,EAAeF,EAAS,KAAA,EAE5B,CAEA,MAAMoB,EAAc,UAAUP,CAAM,GAEpC,IAAIT,EAAgC,MACpC,GAAID,EACF,GAAI,CACFC,EAAcC,EAAUF,CAAW,CACrC,OAASL,EAAG,CACV,QAAQ,MAAM,iCAAkCA,CAAC,EACjDM,EAAc,cAChB,CAGF,SACG,MAAA,CAAI,IAAKO,EAAW,UAAW,qBAAqBS,CAAW,EAAA,EAC9D,EAAC,MAAA,CAAI,UAAU,0BACb,EAAC,MAAA,CAAI,UAAU,wBAAA,EACb,EAAC,cAAQL,CAAS,CACpB,EACA,EAAC,OAAI,UAAU,2BAAA,IACZ,OAAA,CAAK,UAAU,UAAS,IAAEH,CAAO,EAClC,EAAC,OAAA,CAAK,UAAU,UAAA,EAAYV,CAAa,EACzC,EAAC,OAAA,CAAK,UAAU,MAAA,EAAQE,CAAY,CACtC,IACC,MAAA,CAAI,UAAU,6BACb,EAAC,SAAA,KAAQP,EAAI,WAAW,MAAM,2CAA2C,EAAE,GAAC,EAC5E,EAAC,OAAA,KAAMiB,CAAe,CACxB,IACC,MAAA,CAAI,UAAU,0BAAA,EACb,EAAC,QAAK,UAAW,gBAAgBD,CAAM,EAAA,EACpChB,EAAI,WAAW,MAAM,oCAAoCgB,CAAM,EAAE,CACpE,CACF,CACF,EAECH,GACC,EAAC,MAAA,CAAI,UAAU,2BAAA,EACb,EAACX,EAAA,CACC,UAAU,yBACV,QAAS,IAAM,KAAK,oBAAoBU,EAAS,UAAU,CAAA,EAE1DZ,EAAI,WAAW,MAAM,mCAAmC,CAAA,EAE3D,EAACE,EAAA,CACC,UAAU,wBACV,QAAS,IAAM,KAAK,oBAAoBU,EAAS,UAAU,CAAA,EAE1DZ,EAAI,WAAW,MAAM,kCAAkC,CAAA,CAE5D,CAEJ,CAEJ,CAEA,MAAc,aAA6B,CACzC,GAAI,GAAC,KAAK,mBAAqB,KAAK,oBAEpC,MAAK,mBAAqB,GAE1B,GAAI,CACF,MAAMwB,EAAW,MAAMxB,EAAI,QAAQ,CACjC,OAAQ,OACR,IAAKA,EAAI,MAAM,UAAU,QAAQ,EAAI,wBACrC,KAAM,CACJ,KAAM,CACJ,KAAM,uBACN,WAAY,CACV,KAAM,KAAK,gBAAA,CAAgB,CAC7B,CACF,CACF,CACD,EAEGwB,GAAYA,EAAS,MACvBxB,EAAI,MAAM,YAAYwB,CAAQ,EAGhC,KAAK,gBAAgB,EAAE,EACvB,MAAM,KAAK,cAAA,EAEXxB,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,wCAAwC,CAAA,CAEjE,OAASyB,EAAO,CACd,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CzB,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,sCAAsC,CAAA,CAE/D,QAAA,CACE,KAAK,mBAAqB,GAC1B,EAAE,OAAA,CACJ,EACF,CAEQ,eAAeG,EAAoC,CACzD,MAAME,EAAeF,EAAS,KAAOA,EAAS,OAAS,mBAEvDH,EAAI,MAAM,KAAK0B,EAAoB,CACjC,aAAArB,EACA,UAAW,SAAY,CACrB,GAAI,CACF,MAAMsB,EAAS3B,EAAI,MAAM,QAAQ,uBAAwBG,EAAS,IAAI,EAClEwB,IACF,MAAMA,EAAO,OAAA,EACb,MAAM,KAAK,cAAA,EAEX3B,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,2CAA2C,CAAA,EAGtE,OAASyB,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAC/CzB,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,yCAAyC,CAAA,CAElE,CACF,CAAA,CACD,CACH,CAEA,MAAc,oBAAoBY,EAA4BI,EAA+B,CAC3F,GAAI,CACF,MAAMW,EAAS3B,EAAI,MAAM,QAAQ,sBAAuBY,EAAQ,EAAE,EAC9De,IACF,MAAMA,EAAO,KAAK,CAAE,OAAAX,EAAQ,EAC5B,MAAM,KAAK,aAAA,EAEXhB,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,6BAA6BgB,CAAM,UAAU,CAAA,EAGxE,OAASS,EAAO,CACd,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CzB,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,wCAAwC,CAAA,CAEjE,CACF,CAEA,MAAc,UAA0B,CACtC,GAAI,CACF,MAAM,QAAQ,IAAI,CAChB,KAAK,cAAA,EACL,KAAK,aAAA,CAAa,CACnB,CACH,OAASyB,EAAO,CACd,QAAQ,MAAM,sBAAuBA,CAAK,CAC5C,QAAA,CACE,KAAK,QAAU,GACf,EAAE,OAAA,CACJ,CACF,CAEA,MAAc,eAA+B,CAC3C,GAAI,CACF,MAAMD,EAAW,MAAMxB,EAAI,MAAM,KAAK,sBAAsB,EAC5D,KAAK,UAAY,MAAM,QAAQwB,CAAQ,EAAIA,EAAS,OAAOF,GAAKA,IAAM,IAAI,EAAKE,EAAW,CAACA,CAAQ,EAAI,CAAA,EAEvG,QAAQ,IAAI,oBAAqB,KAAK,SAAS,CACjD,OAASC,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAC/C,KAAK,UAAY,CAAA,CACnB,CACF,CAEA,MAAc,cAA8B,CAC1C,GAAI,CACF,MAAMD,EAAW,MAAMxB,EAAI,MAAM,KAAK,qBAAqB,EAC3D,KAAK,SAAW,MAAM,QAAQwB,CAAQ,EAAIA,EAAS,OAAOd,GAAKA,IAAM,IAAI,EAAKc,EAAW,CAACA,CAAQ,EAAI,CAAA,EAEtG,QAAQ,IAAI,mBAAoB,KAAK,QAAQ,CAC/C,OAASC,EAAO,CACd,QAAQ,MAAM,0BAA2BA,CAAK,EAC9C,KAAK,SAAW,CAAA,CAClB,CAIA,MAAMG,EADU,CAAC,GAAG,IAAI,IAAI,KAAK,SAAS,IAAIlB,GAAKA,EAAE,cAAc,KAAK,KAAK,EAAE,CAAC,CAAC,EACrD,OAAOmB,GAAU,CAAC,KAAK,MAAMA,CAAM,CAAC,EAEhE,GAAID,EAAY,OAAS,EACvB,GAAI,CACF,MAAME,EAAeF,EAAY,IAAIC,GACnC7B,EAAI,MAAM,KAAK,QAAS6B,CAAM,EAAE,MAAMJ,IACpC,QAAQ,MAAM,sBAAsBI,CAAM,IAAKJ,CAAK,EAC7C,KACR,CAAA,EAGGM,EAAc,MAAM,QAAQ,IAAID,CAAY,EAElDF,EAAY,QAAQ,CAACC,EAAQG,IAAU,CACjCD,EAAYC,CAAK,IACnB,KAAK,MAAMH,CAAM,EAAIE,EAAYC,CAAK,EAE1C,CAAC,CACH,OAASP,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC7C,CAEJ,CACF,CAEA,MAAMC,UAA2BO,CAAM,CAIrC,YAAYnC,EAAY,CACtB,MAAMA,CAAK,EACX,KAAK,aAAeA,EAAM,MAAM,aAChC,KAAK,UAAYA,EAAM,MAAM,SAC/B,CAEA,WAAY,CACV,MAAO,iCACT,CAEA,OAAQ,CACN,OAAOE,EAAI,WAAW,MAAM,iDAAiD,CAC/E,CAEA,SAAU,CACR,OACE,EAAC,OAAI,UAAU,YAAA,IACZ,IAAA,KAAGA,EAAI,WAAW,MAAM,oDAAqD,CAAE,KAAM,KAAK,aAAc,CAAE,EAC3G,EAAC,MAAA,CAAI,UAAU,YAAA,EACb,EAACE,EAAA,CACC,UAAU,yBACV,QAAS,KAAK,QAAQ,KAAK,IAAI,CAAA,EAE9BF,EAAI,WAAW,MAAM,kDAAkD,CAAA,EAE1E,EAACE,EAAA,CACC,UAAU,SACV,QAAS,KAAK,KAAK,KAAK,IAAI,CAAA,EAE3BF,EAAI,WAAW,MAAM,iDAAiD,CAAA,CAE3E,CACF,CAEJ,CAEA,SAAU,CACR,KAAK,UAAA,EACL,KAAK,KAAA,CACP,CACF,CChfA,MAAqBkC,UAA2BC,CAAM,CAAtD,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAA,KAAOA,EAAM,UAAU,MAAM,EAC7B,KAAA,OAASA,EAAM,UAAU,QAAQ,EACjC,KAAA,UAAYA,EAAM,UAAU,WAAW,EACvC,KAAA,UAAYA,EAAM,UAAU,WAAW,EACvC,KAAA,IAAMA,EAAM,UAAU,KAAK,EAC3B,KAAA,KAAOA,EAAM,UAAU,MAAM,EAC7B,KAAA,SAAWA,EAAM,UAAU,UAAU,EACrC,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,CAAA,CAC9D,CCVA,MAAqBC,UAA0BD,CAAM,CAArD,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAA,OAASA,EAAM,UAAU,QAAQ,EACjC,KAAA,eAAiBA,EAAM,UAAU,gBAAgB,EACjD,KAAA,OAASA,EAAM,UAAU,QAAQ,EACjC,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAE5D,KAAA,KAAOA,EAAM,OAAO,MAAM,EAC1B,KAAA,SAAWA,EAAM,OAAO,sBAAsB,CAAA,CAChD,CCNE,IAAIE,EAAO,MAAA,EACR,IAAI,uBAAwBH,CAAkB,EAC9C,IAAI,sBAAuBE,CAAiB,ECFjDpC,EAAI,aAAa,IAAI,wBAAyB,IAAM,CAElDA,EAAI,MAAM,OAAO,sBAAsB,EAAIkC,EAC3ClC,EAAI,MAAM,OAAO,qBAAqB,EAAIoC,EAE1CpC,EAAI,cACD,IAAI,uBAAuB,EAC3B,aAAaL,CAAwB,CAC1C,CAAC"}