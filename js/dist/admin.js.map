{"version":3,"file":"admin.js","sources":["../src/admin/components/sections/GeneralSettingsSection.tsx","../src/admin/components/forms/AddPlatformForm.tsx","../src/admin/components/items/PlatformListItem.tsx","../src/admin/components/sections/PlatformManagementSection.tsx","../src/admin/components/items/WithdrawalRequestItem.tsx","../src/admin/components/sections/RequestManagementSection.tsx","../src/admin/components/forms/AddDepositPlatformForm.tsx","../src/admin/components/items/DepositPlatformListItem.tsx","../src/admin/components/items/DepositTransactionItem.tsx","../src/admin/components/sections/DepositManagementSection.tsx","../src/admin/components/items/NetworkTypeListItem.tsx","../src/admin/components/forms/AddNetworkTypeForm.tsx","../src/admin/components/sections/NetworkTypeManagementSection.tsx","../src/admin/components/modals/ConfirmDeletePlatformModal.tsx","../src/admin/components/modals/ConfirmDeleteRequestModal.tsx","../src/admin/components/WithdrawalManagementPage.tsx","../src/common/models/WithdrawalPlatform.ts","../src/common/types/index.ts","../src/common/models/WithdrawalRequest.ts","../src/common/models/DepositPlatform.ts","../src/common/models/DepositTransaction.ts","../src/common/models/NetworkType.ts","../src/admin/index.ts"],"sourcesContent":["import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport type Mithril from 'mithril';\n\nexport interface GeneralSettingsSectionAttrs {\n  onSettingChange: (key: string, value: string) => void;\n}\n\nexport default class GeneralSettingsSection extends Component<GeneralSettingsSectionAttrs> {\n  view(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>General Settings</h3>\n        \n        <div className=\"Form\">\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('withdrawal.admin.settings.money_icon_url')}</label>\n            <input\n              type=\"url\"\n              className=\"FormControl\"\n              placeholder=\"https://i.mji.rip/2025/08/28/cd18932c68e9bbee9502b1fb6317cba9.png\"\n              value={app.forum.attribute('wusong8899-withdrawal.moneyIconUrl') || ''}\n              oninput={withAttr('value', (value: string) => \n                this.attrs.onSettingChange('wusong8899-withdrawal.moneyIconUrl', value)\n              )}\n            />\n            <small className=\"helpText\">{app.translator.trans('withdrawal.admin.settings.money_icon_url_help')}</small>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\nimport { PlatformFormData } from '../types/AdminTypes';\n\nexport interface AddPlatformFormAttrs {\n  onSubmit: (formData: PlatformFormData) => Promise<void>;\n  submitting: boolean;\n}\n\nexport default class AddPlatformForm extends Component<AddPlatformFormAttrs> {\n  private name = Stream('');\n  private symbol = Stream('');\n  private minAmount = Stream('');\n  private maxAmount = Stream('');\n  private fee = Stream('');\n  private iconUrl = Stream('');\n  private iconClass = Stream('');\n\n  view(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalManagementPage-addPlatform\">\n        <div className=\"Form-group\">\n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.name')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder={app.translator.trans('withdrawal.admin.platforms.add_placeholder')}\n                bidi={this.name}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.symbol')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"BTC, ETH, USDT...\"\n                bidi={this.symbol}\n              />\n            </div>\n          </div>\n          \n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.min_amount')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"0.001\"\n                bidi={this.minAmount}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.max_amount')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"10.0\"\n                bidi={this.maxAmount}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.fee')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"0.0005\"\n                bidi={this.fee}\n              />\n            </div>\n          </div>\n          \n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.icon_url')}</label>\n              <input\n                type=\"url\"\n                className=\"FormControl\"\n                placeholder=\"https://example.com/icon.png\"\n                bidi={this.iconUrl}\n              />\n              <small className=\"helpText\">{app.translator.trans('withdrawal.admin.platforms.icon_url_help')}</small>\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.icon_class')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"fas fa-coins\"\n                bidi={this.iconClass}\n              />\n              <small className=\"helpText\">{app.translator.trans('withdrawal.admin.platforms.icon_class_help')}</small>\n            </div>\n          </div>\n          \n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary\"\n              loading={this.attrs.submitting}\n              disabled={!this.canSubmit()}\n              onclick={this.handleSubmit.bind(this)}\n            >\n              {app.translator.trans('withdrawal.admin.platforms.add_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private canSubmit(): boolean {\n    return !!(\n      this.name() &&\n      this.name().trim() &&\n      this.symbol() &&\n      this.symbol().trim() &&\n      this.minAmount() &&\n      this.maxAmount() &&\n      parseFloat(this.minAmount()) > 0 &&\n      parseFloat(this.maxAmount()) > 0 &&\n      parseFloat(this.maxAmount()) >= parseFloat(this.minAmount())\n    );\n  }\n\n  private async handleSubmit(): Promise<void> {\n    if (!this.canSubmit() || this.attrs.submitting) return;\n\n    const formData: PlatformFormData = {\n      name: this.name(),\n      symbol: this.symbol(),\n      minAmount: this.minAmount(),\n      maxAmount: this.maxAmount(),\n      fee: this.fee(),\n      iconUrl: this.iconUrl(),\n      iconClass: this.iconClass()\n    };\n\n    try {\n      await this.attrs.onSubmit(formData);\n      this.clearForm();\n    } catch {\n      // Error handling is done in parent component\n    }\n  }\n\n  private clearForm(): void {\n    this.name('');\n    this.symbol('');\n    this.minAmount('');\n    this.maxAmount('');\n    this.fee('');\n    this.iconUrl('');\n    this.iconClass('');\n    m.redraw();\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport type Mithril from 'mithril';\nimport { WithdrawalPlatform } from '../types/AdminTypes';\n\nexport interface PlatformListItemAttrs {\n  platform: WithdrawalPlatform;\n  onToggleStatus: (platform: WithdrawalPlatform) => Promise<void>;\n  onDelete: (platform: WithdrawalPlatform) => void;\n}\n\nexport default class PlatformListItem extends Component<PlatformListItemAttrs> {\n  view(): Mithril.Children {\n    const platform = this.attrs.platform;\n    \n    // Handle both Model instances and plain objects\n    const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\n    const platformName = (typeof platform.name === 'function' ? platform.name() : platform.attributes?.name) || 'Unknown Platform';\n    const symbol = (typeof platform.symbol === 'function' ? platform.symbol() : platform.attributes?.symbol) || 'N/A';\n    const minAmount = (typeof platform.minAmount === 'function' ? platform.minAmount() : platform.attributes?.minAmount) || 'N/A';\n    const maxAmount = (typeof platform.maxAmount === 'function' ? platform.maxAmount() : platform.attributes?.maxAmount) || 'N/A';\n    const fee = (typeof platform.fee === 'function' ? platform.fee() : platform.attributes?.fee) || 'N/A';\n    const isActive = (typeof platform.isActive === 'function' ? platform.isActive() : platform.attributes?.isActive) ?? false;\n    const createdDate = (typeof platform.createdAt === 'function' ? platform.createdAt() : platform.attributes?.createdAt) || null;\n    \n    let dateDisplay: Mithril.Children = 'N/A';\n    if (createdDate) {\n      try {\n        dateDisplay = humanTime(createdDate);\n      } catch (e) {\n        console.error('Error formatting date:', e);\n        dateDisplay = 'Invalid Date';\n      }\n    }\n    \n    return (\n      <div key={platformId} className=\"WithdrawalPlatform\">\n        <div className=\"WithdrawalPlatform-info\">\n          <div className=\"WithdrawalPlatform-primary\">\n            <span className={`WithdrawalPlatform-status ${isActive ? 'active' : 'inactive'}`}>\n              {isActive ? '🟢' : '🔴'}\n            </span>\n            <span className=\"WithdrawalPlatform-name\">{platformName}</span>\n            <span className=\"platform-id\">#{platformId}</span>\n            <span className={`WithdrawalPlatform-symbol ${symbol}`}>{symbol}</span>\n          </div>\n          <div className=\"WithdrawalPlatform-details\">\n            <span className=\"WithdrawalPlatform-amounts\">\n              Min: {minAmount} | Max: {maxAmount} | Fee: {fee}\n            </span>\n            <span className=\"WithdrawalPlatform-date\">{dateDisplay}</span>\n          </div>\n        </div>\n        <div className=\"WithdrawalPlatform-actions\">\n          <Button\n            className={`Button ${isActive ? 'Button--secondary' : 'Button--primary'}`}\n            onclick={() => this.attrs.onToggleStatus(platform)}\n          >\n            {app.translator.trans(`withdrawal.admin.platforms.${isActive ? 'disable' : 'enable'}`)}\n          </Button>\n          <Button\n            className=\"Button Button--danger\"\n            onclick={() => this.attrs.onDelete(platform)}\n          >\n            {app.translator.trans('withdrawal.admin.platforms.delete')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport { WithdrawalPlatform, PlatformFormData } from '../types/AdminTypes';\nimport AddPlatformForm from '../forms/AddPlatformForm';\nimport PlatformListItem from '../items/PlatformListItem';\n\nexport interface PlatformManagementSectionAttrs {\n  platforms: WithdrawalPlatform[];\n  submittingPlatform: boolean;\n  onAddPlatform: (formData: PlatformFormData) => Promise<void>;\n  onTogglePlatformStatus: (platform: WithdrawalPlatform) => Promise<void>;\n  onDeletePlatform: (platform: WithdrawalPlatform) => void;\n}\n\nexport default class PlatformManagementSection extends Component<PlatformManagementSectionAttrs> {\n  view(): Mithril.Children {\n    const { platforms, submittingPlatform, onAddPlatform, onTogglePlatformStatus, onDeletePlatform } = this.attrs;\n\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>{app.translator.trans('withdrawal.admin.platforms.title')}</h3>\n        \n        <AddPlatformForm \n          onSubmit={onAddPlatform}\n          submitting={submittingPlatform}\n        />\n\n        <div className=\"WithdrawalManagementPage-platformList\">\n          {platforms.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.platforms.empty')}</p>\n          ) : (\n            platforms.map((platform) => (\n              <PlatformListItem\n                key={typeof platform.id === 'function' ? platform.id() : platform.id}\n                platform={platform}\n                onToggleStatus={onTogglePlatformStatus}\n                onDelete={onDeletePlatform}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport type Mithril from 'mithril';\nimport { WithdrawalRequest } from '../types/AdminTypes';\n\nexport interface WithdrawalRequestItemAttrs {\n  request: WithdrawalRequest;\n  showActions: boolean;\n  showDelete?: boolean;\n  onUpdateStatus?: (request: WithdrawalRequest, status: string) => Promise<void>;\n  onDelete?: (request: WithdrawalRequest) => void;\n}\n\nexport default class WithdrawalRequestItem extends Component<WithdrawalRequestItemAttrs> {\n  view(): Mithril.Children {\n    const request = this.attrs.request;\n    const { showActions, showDelete = false } = this.attrs;\n    \n    // Handle Flarum Model instances\n    const requestId = typeof request.id === 'function' ? request.id() : request.id;\n    const amount = typeof request.amount === 'function' ? request.amount() : (request.attributes?.amount || 0);\n    const status = typeof request.status === 'function' ? request.status() : (request.attributes?.status || 'pending');\n    const accountDetails = typeof request.accountDetails === 'function' ? request.accountDetails() : \n      (request.attributes?.accountDetails || request.attributes?.account_details || 'N/A');\n    const createdDate = typeof request.createdAt === 'function' ? request.createdAt() : (request.attributes?.createdAt || null);\n    \n    // Get user info\n    let userName = 'Unknown User';\n    if (typeof request.user === 'function') {\n      const userData = request.user();\n      if (userData && typeof userData.displayName === 'function') {\n        userName = userData.displayName();\n      } else if (userData && userData.attributes?.displayName) {\n        userName = userData.attributes.displayName;\n      }\n    }\n    \n    // Get platform info - simplified approach using Flarum Model relationships\n    let platformName = 'Unknown Platform';\n    let platformSymbol = 'N/A';\n    \n    if (typeof request.platform === 'function') {\n      const platform = request.platform();\n      if (platform) {\n        platformName = typeof platform.name === 'function' ? platform.name() : (platform.attributes?.name || 'Unknown Platform');\n        platformSymbol = typeof platform.symbol === 'function' ? platform.symbol() : (platform.attributes?.symbol || 'N/A');\n      }\n    }\n    \n    const statusClass = `status-${status}`;\n    \n    let dateDisplay: Mithril.Children = 'N/A';\n    if (createdDate) {\n      try {\n        dateDisplay = humanTime(createdDate);\n      } catch (e) {\n        console.error('Error formatting request date:', e);\n        dateDisplay = 'Invalid Date';\n      }\n    }\n\n    return (\n      <div key={requestId} className={`WithdrawalRequest ${statusClass}`}>\n        <div className=\"WithdrawalRequest-info\">\n          <div className=\"WithdrawalRequest-user\">\n            <strong>{userName}</strong>\n            <span className=\"request-id\">#{requestId}</span>\n          </div>\n          <div className=\"WithdrawalRequest-details\">\n            <span className=\"amount\">{amount}</span>\n            <span className=\"platform\">{platformName}</span>\n            <span className=\"symbol\">{platformSymbol}</span>\n            <span className=\"date\">{dateDisplay}</span>\n          </div>\n          <div className=\"WithdrawalRequest-account\">\n            <strong>{app.translator.trans('withdrawal.admin.requests.account_details')}:</strong>\n            <span>{accountDetails}</span>\n          </div>\n          <div className=\"WithdrawalRequest-status\">\n            <span className={`Badge Badge--${status}`}>\n              {app.translator.trans(`withdrawal.admin.requests.status.${status}`)}\n            </span>\n          </div>\n        </div>\n        \n        {(showActions || showDelete) && (\n          <div className=\"WithdrawalRequest-actions\">\n            {showActions && this.attrs.onUpdateStatus && (\n              <>\n                <Button\n                  className=\"Button Button--primary\"\n                  onclick={() => this.attrs.onUpdateStatus!(request, 'approved')}\n                >\n                  {app.translator.trans('withdrawal.admin.requests.approve')}\n                </Button>\n                <Button\n                  className=\"Button Button--danger\"\n                  onclick={() => this.attrs.onUpdateStatus!(request, 'rejected')}\n                >\n                  {app.translator.trans('withdrawal.admin.requests.reject')}\n                </Button>\n              </>\n            )}\n            {this.attrs.onDelete && (\n              <Button\n                className=\"Button Button--link\"\n                onclick={() => this.attrs.onDelete!(request)}\n              >\n                <i className=\"fas fa-trash\"></i>\n                {app.translator.trans('withdrawal.admin.requests.delete')}\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport { WithdrawalRequest } from '../types/AdminTypes';\nimport WithdrawalRequestItem from '../items/WithdrawalRequestItem';\n\nexport interface RequestManagementSectionAttrs {\n  requests: WithdrawalRequest[];\n  onUpdateRequestStatus: (request: WithdrawalRequest, status: string) => Promise<void>;\n  onDeleteRequest: (request: WithdrawalRequest) => void;\n}\n\nexport default class RequestManagementSection extends Component<RequestManagementSectionAttrs> {\n  view(): Mithril.Children {\n    const { requests, onUpdateRequestStatus, onDeleteRequest } = this.attrs;\n\n    const pendingRequests = requests.filter(r => {\n      const status = (typeof r.status === 'function' ? r.status() : r.attributes?.status) || 'pending';\n      return status === 'pending';\n    });\n    \n    const processedRequests = requests.filter(r => {\n      const status = (typeof r.status === 'function' ? r.status() : r.attributes?.status) || 'pending';\n      return status !== 'pending';\n    });\n\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>{app.translator.trans('withdrawal.admin.requests.title')}</h3>\n        \n        <div className=\"WithdrawalManagementPage-pendingRequests\">\n          <h4>{app.translator.trans('withdrawal.admin.requests.pending_title')}</h4>\n          {pendingRequests.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.requests.no_pending')}</p>\n          ) : (\n            pendingRequests.map((request) => (\n              <WithdrawalRequestItem\n                key={typeof request.id === 'function' ? request.id() : request.id}\n                request={request}\n                showActions={true}\n                showDelete={true}\n                onUpdateStatus={onUpdateRequestStatus}\n                onDelete={onDeleteRequest}\n              />\n            ))\n          )}\n        </div>\n\n        <div className=\"WithdrawalManagementPage-processedRequests\">\n          <h4>{app.translator.trans('withdrawal.admin.requests.processed_title')}</h4>\n          {processedRequests.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.requests.no_processed')}</p>\n          ) : (\n            processedRequests.map((request) => (\n              <WithdrawalRequestItem\n                key={typeof request.id === 'function' ? request.id() : request.id}\n                request={request}\n                showActions={false}\n                showDelete={true}\n                onDelete={onDeleteRequest}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport withAttr from 'flarum/common/utils/withAttr';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\nimport NetworkType from '../../../common/models/NetworkType';\r\n\r\nexport interface DepositPlatformFormData {\r\n  name: string;\r\n  symbol: string;\r\n  network: string;\r\n  networkTypeId: number | null;\r\n  minAmount: string;\r\n  maxAmount: string;\r\n  address: string;\r\n  iconUrl: string;\r\n  iconClass: string;\r\n  warningText: string;\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface AddDepositPlatformFormAttrs {\r\n  submitting: boolean;\r\n  onSubmit: (formData: DepositPlatformFormData) => Promise<void>;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default class AddDepositPlatformForm extends Component<AddDepositPlatformFormAttrs> {\r\n  private formData = {\r\n    name: Stream(''),\r\n    symbol: Stream(''),\r\n    network: Stream(''),\r\n    networkTypeId: Stream<number | null>(null),\r\n    minAmount: Stream(''),\r\n    maxAmount: Stream(''),\r\n    address: Stream(''),\r\n    iconUrl: Stream(''),\r\n    iconClass: Stream(''),\r\n    warningText: Stream(''),\r\n    isActive: Stream(true)\r\n  };\r\n  \r\n  private networkTypes: NetworkType[] = [];\r\n  private loadingNetworkTypes = false;\r\n\r\n  oninit(vnode: Mithril.Vnode<AddDepositPlatformFormAttrs>) {\r\n    super.oninit(vnode);\r\n    this.loadNetworkTypes();\r\n  }\r\n\r\n  view(vnode: Mithril.Vnode<AddDepositPlatformFormAttrs>) {\r\n    const { submitting, onCancel } = vnode.attrs;\r\n\r\n    return (\r\n      <div className=\"AddDepositPlatformForm\">\r\n        <div className=\"Form\">\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.name')}\r\n                <span className=\"Form-required\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"e.g., Tether\"\r\n                bidi={this.formData.name}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.symbol')}\r\n                <span className=\"Form-required\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"e.g., USDT\"\r\n                bidi={this.formData.symbol}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.network')}\r\n              </label>\r\n              <select\r\n                className=\"FormControl\"\r\n                value={this.formData.networkTypeId() || ''}\r\n                onchange={withAttr('value', (value) => {\r\n                  const networkTypeId = value ? parseInt(value) : null;\r\n                  this.formData.networkTypeId(networkTypeId);\r\n                  \r\n                  // Auto-fill network field based on selected network type\r\n                  if (networkTypeId) {\r\n                    const networkType = this.networkTypes.find(nt => nt.id() === networkTypeId);\r\n                    if (networkType) {\r\n                      this.formData.network(networkType.code());\r\n                    }\r\n                  } else {\r\n                    this.formData.network('');\r\n                  }\r\n                })}\r\n                disabled={submitting || this.loadingNetworkTypes}\r\n              >\r\n                <option value=\"\">{this.loadingNetworkTypes ? 'Loading...' : 'Select Network (Optional)'}</option>\r\n                {this.networkTypes.map(networkType => (\r\n                  <option key={networkType.id()} value={networkType.id()}>\r\n                    {networkType.name()}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.custom_network')}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"Custom network name (if not using predefined)\"\r\n                bidi={this.formData.network}\r\n                disabled={submitting}\r\n              />\r\n              <div className=\"helpText\">\r\n                Leave empty to use the selected network type above, or enter a custom network name.\r\n              </div>\r\n            </div>\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.min_amount')}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.00000001\"\r\n                min=\"0\"\r\n                className=\"FormControl\"\r\n                placeholder=\"0.0\"\r\n                bidi={this.formData.minAmount}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.max_amount')}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.00000001\"\r\n                min=\"0\"\r\n                className=\"FormControl\"\r\n                placeholder=\"Leave empty for unlimited\"\r\n                bidi={this.formData.maxAmount}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label>\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.address')}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"FormControl\"\r\n              placeholder=\"Static deposit address (optional)\"\r\n              bidi={this.formData.address}\r\n              disabled={submitting}\r\n            />\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.address_help')}\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"Form-row\">\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.icon_url')}\r\n              </label>\r\n              <input\r\n                type=\"url\"\r\n                className=\"FormControl\"\r\n                placeholder=\"https://example.com/icon.png\"\r\n                bidi={this.formData.iconUrl}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"Form-group\">\r\n              <label>\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.icon_class')}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"FormControl\"\r\n                placeholder=\"fas fa-coins\"\r\n                bidi={this.formData.iconClass}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"Form-group\">\r\n            <label>\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.warning_text')}\r\n            </label>\r\n            <textarea\r\n              className=\"FormControl\"\r\n              rows={3}\r\n              placeholder=\"Network-specific warning for users\"\r\n              bidi={this.formData.warningText}\r\n              disabled={submitting}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <Switch state={this.formData.isActive()} onchange={this.formData.isActive} disabled={submitting}>\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.is_active')}\r\n            </Switch>\r\n          </div>\r\n\r\n          <div className=\"Form-actions\">\r\n            <Button\r\n              className=\"Button Button--primary\"\r\n              type=\"submit\"\r\n              loading={submitting}\r\n              onclick={this.handleSubmit.bind(this, vnode.attrs)}\r\n            >\r\n              {app.translator.trans('withdrawal.admin.deposit.platforms.add_button')}\r\n            </Button>\r\n            <Button\r\n              className=\"Button\"\r\n              onclick={onCancel}\r\n              disabled={submitting}\r\n            >\r\n              {app.translator.trans('core.admin.basics.cancel_button')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private async loadNetworkTypes(): Promise<void> {\r\n    this.loadingNetworkTypes = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/network-types?filter[is_active]=1',\r\n      });\r\n\r\n      app.store.pushPayload(response);\r\n      this.networkTypes = app.store.all('network-types') as NetworkType[];\r\n    } catch (error) {\r\n      console.error('Failed to load network types:', error);\r\n    } finally {\r\n      this.loadingNetworkTypes = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async handleSubmit(attrs: AddDepositPlatformFormAttrs): Promise<void> {\r\n    // Basic validation\r\n    if (!this.formData.name() || !this.formData.symbol()) {\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.platforms.required_fields_error')\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!this.formData.address()) {\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.platforms.address_required_error')\r\n      );\r\n      return;\r\n    }\r\n\r\n    const formData: DepositPlatformFormData = {\r\n      name: this.formData.name(),\r\n      symbol: this.formData.symbol(),\r\n      network: this.formData.network(),\r\n      networkTypeId: this.formData.networkTypeId(),\r\n      minAmount: this.formData.minAmount(),\r\n      maxAmount: this.formData.maxAmount(),\r\n      address: this.formData.address(),\r\n      iconUrl: this.formData.iconUrl(),\r\n      iconClass: this.formData.iconClass(),\r\n      warningText: this.formData.warningText(),\r\n      isActive: this.formData.isActive()\r\n    };\r\n\r\n    try {\r\n      await attrs.onSubmit(formData);\r\n      \r\n      // Reset form\r\n      Object.keys(this.formData).forEach(key => {\r\n        if (key === 'isActive') {\r\n          this.formData[key](true);\r\n        } else if (key === 'networkTypeId') {\r\n          this.formData[key](null);\r\n        } else {\r\n          this.formData[key]('');\r\n        }\r\n      });\r\n\r\n      attrs.onCancel();\r\n    } catch (error) {\r\n      // Error handling is done in parent component\r\n      console.error('Form submission error:', error);\r\n    }\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport type Mithril from 'mithril';\r\nimport type DepositPlatform from '../../../common/models/DepositPlatform';\r\n\r\nexport interface DepositPlatformListItemAttrs {\r\n  platform: DepositPlatform;\r\n  onToggleStatus: () => Promise<void>;\r\n  onDelete: () => Promise<void>;\r\n}\r\n\r\nexport default class DepositPlatformListItem extends Component<DepositPlatformListItemAttrs> {\r\n  view(vnode: Mithril.Vnode<DepositPlatformListItemAttrs>) {\r\n    const { platform, onToggleStatus, onDelete } = vnode.attrs;\r\n\r\n    return (\r\n      <div className=\"DepositPlatformListItem\">\r\n        <div className=\"DepositPlatformListItem-content\">\r\n          <div className=\"DepositPlatformListItem-icon\">\r\n            {this.renderPlatformIcon(platform)}\r\n          </div>\r\n          \r\n          <div className=\"DepositPlatformListItem-info\">\r\n            <div className=\"DepositPlatformListItem-primary\">\r\n              <strong>{platform.name()}</strong>\r\n              <span className=\"DepositPlatformListItem-displayName\">\r\n                {platform.symbol()} ({platform.network()})\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"DepositPlatformListItem-details\">\r\n              <span className=\"DepositPlatformListItem-detail\">\r\n                Min: {platform.minAmount()} {platform.symbol()}\r\n              </span>\r\n              {platform.maxAmount && (\r\n                <span className=\"DepositPlatformListItem-detail\">\r\n                  Max: {platform.maxAmount()} {platform.symbol()}\r\n                </span>\r\n              )}\r\n              <span className=\"DepositPlatformListItem-detail\">\r\n                Address: {platform.address() ? 'Static' : 'Template'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"DepositPlatformListItem-actions\">\r\n            <Switch \r\n              state={platform.isActive()} \r\n              onchange={onToggleStatus}\r\n            >\r\n              {platform.isActive() \r\n                ? app.translator.trans('withdrawal.admin.deposit.platforms.active')\r\n                : app.translator.trans('withdrawal.admin.deposit.platforms.inactive')\r\n              }\r\n            </Switch>\r\n            \r\n            <Button\r\n              className=\"Button Button--icon Button--flat\"\r\n              icon=\"fas fa-trash\"\r\n              onclick={onDelete}\r\n              title={app.translator.trans('withdrawal.admin.deposit.platforms.delete')}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderPlatformIcon(platform: DepositPlatform): Mithril.Children {\r\n    if (platform.iconUrl()) {\r\n      return <img src={platform.iconUrl()} alt={platform.symbol()} className=\"DepositPlatformListItem-img\" />;\r\n    }\r\n\r\n    if (platform.iconClass()) {\r\n      return icon(platform.iconClass());\r\n    }\r\n\r\n    // Default currency icons\r\n    switch (platform.symbol()) {\r\n      case 'USDT':\r\n        return <span className=\"DepositPlatformListItem-currencyIcon usdt\">₮</span>;\r\n      case 'USDC':\r\n        return <span className=\"DepositPlatformListItem-currencyIcon usdc\">$</span>;\r\n      case 'BTC':\r\n        return <span className=\"DepositPlatformListItem-currencyIcon btc\">₿</span>;\r\n      case 'ETH':\r\n        return <span className=\"DepositPlatformListItem-currencyIcon eth\">Ξ</span>;\r\n      default:\r\n        return icon('fas fa-coins');\r\n    }\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport username from 'flarum/common/helpers/username';\r\nimport type Mithril from 'mithril';\r\nimport type { DepositTransaction } from '../types/AdminTypes';\r\n\r\nexport interface DepositTransactionItemAttrs {\r\n  transaction: DepositTransaction;\r\n  showActions: boolean;\r\n  onUpdateStatus: (status: string) => Promise<void>;\r\n}\r\n\r\nexport default class DepositTransactionItem extends Component<DepositTransactionItemAttrs> {\r\n  view(vnode: Mithril.Vnode<DepositTransactionItemAttrs>) {\r\n    const { transaction, showActions, onUpdateStatus } = vnode.attrs;\r\n\r\n    return (\r\n      <div className=\"DepositTransactionItem\">\r\n        <div className=\"DepositTransactionItem-header\">\r\n          <div className=\"DepositTransactionItem-user\">\r\n            <strong>{username(transaction.user)}</strong>\r\n            <span className=\"DepositTransactionItem-time\">\r\n              {humanTime(transaction.createdAt)}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"DepositTransactionItem-amount\">\r\n            <span className=\"DepositTransactionItem-amountValue\">\r\n              {transaction.amount} {transaction.platform.symbol}\r\n            </span>\r\n            <div className={`DepositTransactionItem-status status-${transaction.statusColor}`}>\r\n              {this.getStatusIcon(transaction.status)}\r\n              {this.getStatusText(transaction.status)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"DepositTransactionItem-details\">\r\n          <div className=\"DepositTransactionItem-platform\">\r\n            <span className=\"DepositTransactionItem-label\">Platform:</span>\r\n            <span>{transaction.platform.name} ({transaction.platform.network})</span>\r\n          </div>\r\n\r\n          {transaction.transactionHash && (\r\n            <div className=\"DepositTransactionItem-hash\">\r\n              <span className=\"DepositTransactionItem-label\">Hash:</span>\r\n              {transaction.explorerUrl ? (\r\n                <a \r\n                  href={transaction.explorerUrl} \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"DepositTransactionItem-hashLink\"\r\n                >\r\n                  {this.formatHash(transaction.transactionHash)}\r\n                  {icon('fas fa-external-link-alt')}\r\n                </a>\r\n              ) : (\r\n                <span className=\"DepositTransactionItem-hashText\">\r\n                  {this.formatHash(transaction.transactionHash)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {transaction.fromAddress && (\r\n            <div className=\"DepositTransactionItem-fromAddress\">\r\n              <span className=\"DepositTransactionItem-label\">From:</span>\r\n              <span className=\"DepositTransactionItem-address\">\r\n                {this.formatHash(transaction.fromAddress)}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {transaction.confirmations !== undefined && (\r\n            <div className=\"DepositTransactionItem-confirmations\">\r\n              <span className=\"DepositTransactionItem-label\">Confirmations:</span>\r\n              <span>\r\n                {transaction.confirmations}/{transaction.requiredConfirmations}\r\n                {transaction.hasEnoughConfirmations && \r\n                  <span className=\"DepositTransactionItem-confirmed\"> ✓</span>\r\n                }\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {transaction.adminNotes && (\r\n            <div className=\"DepositTransactionItem-notes\">\r\n              <span className=\"DepositTransactionItem-label\">Notes:</span>\r\n              <span>{transaction.adminNotes}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {showActions && this.renderActions(transaction, onUpdateStatus)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderActions(transaction: DepositTransaction, onUpdateStatus: (status: string) => void): Mithril.Children {\r\n    const actions = [];\r\n\r\n    if (transaction.status === 'pending') {\r\n      actions.push(\r\n        <Button\r\n          key=\"confirm\"\r\n          className=\"Button Button--primary Button--sm\"\r\n          onclick={() => onUpdateStatus('confirmed')}\r\n        >\r\n          {app.translator.trans('withdrawal.admin.deposit.transactions.confirm')}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    if (transaction.status === 'confirmed' && transaction.canBeCompleted) {\r\n      actions.push(\r\n        <Button\r\n          key=\"complete\"\r\n          className=\"Button Button--success Button--sm\"\r\n          onclick={() => onUpdateStatus('completed')}\r\n        >\r\n          {app.translator.trans('withdrawal.admin.deposit.transactions.complete')}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    if (transaction.status === 'pending' || transaction.status === 'confirmed') {\r\n      actions.push(\r\n        <Button\r\n          key=\"reject\"\r\n          className=\"Button Button--danger Button--sm\"\r\n          onclick={() => onUpdateStatus('failed')}\r\n        >\r\n          {app.translator.trans('withdrawal.admin.deposit.transactions.reject')}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return actions.length > 0 ? (\r\n      <div className=\"DepositTransactionItem-actions\">\r\n        {actions}\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  private getStatusIcon(status: string): Mithril.Children {\r\n    switch (status) {\r\n      case 'pending':\r\n        return icon('fas fa-clock');\r\n      case 'confirmed':\r\n        return icon('fas fa-check-circle');\r\n      case 'completed':\r\n        return icon('fas fa-check-double');\r\n      case 'failed':\r\n        return icon('fas fa-times-circle');\r\n      case 'cancelled':\r\n        return icon('fas fa-ban');\r\n      default:\r\n        return icon('fas fa-question-circle');\r\n    }\r\n  }\r\n\r\n  private getStatusText(status: string): string {\r\n    switch (status) {\r\n      case 'pending':\r\n        return app.translator.trans('withdrawal.admin.deposit.transactions.status.pending');\r\n      case 'confirmed':\r\n        return app.translator.trans('withdrawal.admin.deposit.transactions.status.confirmed');\r\n      case 'completed':\r\n        return app.translator.trans('withdrawal.admin.deposit.transactions.status.completed');\r\n      case 'failed':\r\n        return app.translator.trans('withdrawal.admin.deposit.transactions.status.failed');\r\n      case 'cancelled':\r\n        return app.translator.trans('withdrawal.admin.deposit.transactions.status.cancelled');\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n\r\n  private formatHash(hash: string): string {\r\n    if (hash.length <= 16) return hash;\r\n    return `${hash.substring(0, 8)}...${hash.substring(hash.length - 8)}`;\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport type Mithril from 'mithril';\r\nimport type DepositPlatform from '../../../common/models/DepositPlatform';\r\nimport type { DepositTransaction } from '../types/AdminTypes';\r\nimport AddDepositPlatformForm from '../forms/AddDepositPlatformForm';\r\nimport DepositPlatformListItem from '../items/DepositPlatformListItem';\r\nimport DepositTransactionItem from '../items/DepositTransactionItem';\r\n\r\nexport interface DepositManagementSectionAttrs {\r\n  platforms: DepositPlatform[];\r\n  transactions: DepositTransaction[];\r\n  submittingPlatform: boolean;\r\n  onAddPlatform: (formData: any) => Promise<void>;\r\n  onTogglePlatformStatus: (platform: DepositPlatform) => Promise<void>;\r\n  onDeletePlatform: (platform: DepositPlatform) => Promise<void>;\r\n  onUpdateTransactionStatus: (transaction: DepositTransaction, status: string) => Promise<void>;\r\n}\r\n\r\nexport default class DepositManagementSection extends Component<DepositManagementSectionAttrs> {\r\n  private showPlatformForm = false;\r\n  private activeTransactionTab = 'pending';\r\n\r\n  view(vnode: Mithril.Vnode<DepositManagementSectionAttrs>) {\r\n    const { \r\n      platforms, \r\n      transactions, \r\n      submittingPlatform,\r\n      onAddPlatform,\r\n      onTogglePlatformStatus,\r\n      onDeletePlatform,\r\n      onUpdateTransactionStatus\r\n    } = vnode.attrs;\r\n\r\n    const pendingTransactions = transactions.filter(t => t.status === 'pending' || t.status === 'confirmed');\r\n    const completedTransactions = transactions.filter(t => t.status === 'completed' || t.status === 'failed' || t.status === 'cancelled');\r\n\r\n    return (\r\n      <div className=\"DepositManagementSection\">\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('withdrawal.admin.deposit.platforms.title')}</h3>\r\n          \r\n          <div className=\"DepositPlatforms\">\r\n            <div className=\"DepositPlatforms-header\">\r\n              <Button\r\n                className=\"Button Button--primary\"\r\n                onclick={() => { this.showPlatformForm = !this.showPlatformForm; }}\r\n              >\r\n                {app.translator.trans('withdrawal.admin.deposit.platforms.add_button')}\r\n              </Button>\r\n            </div>\r\n\r\n            {this.showPlatformForm && (\r\n              <AddDepositPlatformForm\r\n                submitting={submittingPlatform}\r\n                onSubmit={onAddPlatform}\r\n                onCancel={() => { this.showPlatformForm = false; }}\r\n              />\r\n            )}\r\n\r\n            <div className=\"DepositPlatforms-list\">\r\n              {platforms.length === 0 ? (\r\n                <p className=\"DepositPlatforms-empty\">\r\n                  {app.translator.trans('withdrawal.admin.deposit.platforms.empty')}\r\n                </p>\r\n              ) : (\r\n                platforms.map(platform => (\r\n                  <DepositPlatformListItem\r\n                    key={platform.id}\r\n                    platform={platform}\r\n                    onToggleStatus={() => onTogglePlatformStatus(platform)}\r\n                    onDelete={() => onDeletePlatform(platform)}\r\n                  />\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('withdrawal.admin.deposit.transactions.title')}</h3>\r\n          \r\n          <div className=\"DepositTransactions\">\r\n            <div className=\"DepositTransactions-tabs\">\r\n              <button\r\n                className={`DepositTransactions-tab ${this.activeTransactionTab === 'pending' ? 'active' : ''}`}\r\n                onclick={() => { this.activeTransactionTab = 'pending'; }}\r\n              >\r\n                {app.translator.trans('withdrawal.admin.deposit.transactions.pending_title')} ({pendingTransactions.length})\r\n              </button>\r\n              <button\r\n                className={`DepositTransactions-tab ${this.activeTransactionTab === 'completed' ? 'active' : ''}`}\r\n                onclick={() => { this.activeTransactionTab = 'completed'; }}\r\n              >\r\n                {app.translator.trans('withdrawal.admin.deposit.transactions.completed_title')} ({completedTransactions.length})\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"DepositTransactions-content\">\r\n              {this.activeTransactionTab === 'pending' ? (\r\n                <div className=\"DepositTransactions-pending\">\r\n                  {pendingTransactions.length === 0 ? (\r\n                    <p className=\"DepositTransactions-empty\">\r\n                      {app.translator.trans('withdrawal.admin.deposit.transactions.no_pending')}\r\n                    </p>\r\n                  ) : (\r\n                    pendingTransactions.map(transaction => (\r\n                      <DepositTransactionItem\r\n                        key={transaction.id}\r\n                        transaction={transaction}\r\n                        onUpdateStatus={(status) => onUpdateTransactionStatus(transaction, status)}\r\n                        showActions={true}\r\n                      />\r\n                    ))\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"DepositTransactions-completed\">\r\n                  {completedTransactions.length === 0 ? (\r\n                    <p className=\"DepositTransactions-empty\">\r\n                      {app.translator.trans('withdrawal.admin.deposit.transactions.no_completed')}\r\n                    </p>\r\n                  ) : (\r\n                    completedTransactions.map(transaction => (\r\n                      <DepositTransactionItem\r\n                        key={transaction.id}\r\n                        transaction={transaction}\r\n                        onUpdateStatus={(status) => onUpdateTransactionStatus(transaction, status)}\r\n                        showActions={false}\r\n                      />\r\n                    ))\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Switch from 'flarum/common/components/Switch';\nimport Stream from 'flarum/common/utils/Stream';\nimport m from 'mithril';\nimport type Mithril from 'mithril';\nimport NetworkType from '../../../common/models/NetworkType';\n\nexport interface NetworkTypeListItemAttrs {\n  networkType: NetworkType;\n  onUpdate: (networkType: NetworkType, data: any) => Promise<void>;\n  onDelete: (networkType: NetworkType) => Promise<void>;\n}\n\nexport default class NetworkTypeListItem extends Component<NetworkTypeListItemAttrs> {\n  private editing = false;\n  private submitting = false;\n  private formData: Record<string, Stream<any>> = {};\n\n  oninit(vnode: Mithril.Vnode<NetworkTypeListItemAttrs>) {\n    super.oninit(vnode);\n    this.initFormData(vnode.attrs.networkType);\n  }\n\n  view(vnode: Mithril.Vnode<NetworkTypeListItemAttrs>) {\n    const { networkType } = vnode.attrs;\n\n    return (\n      <div className=\"NetworkTypeListItem\">\n        <div className=\"item-header\">\n          <div className=\"item-info\">\n            <div className=\"item-icon\">\n              {networkType.iconClass() ? (\n                <i className={networkType.iconClass()}></i>\n              ) : networkType.iconUrl() ? (\n                <img src={networkType.iconUrl()} alt={networkType.name()} style=\"width: 24px; height: 24px;\" />\n              ) : (\n                <i className=\"fas fa-network-wired\"></i>\n              )}\n            </div>\n            <div className=\"item-details\">\n              <h4>{networkType.name()}</h4>\n              <span className=\"code\">{networkType.code()}</span>\n              {networkType.description() && (\n                <p className=\"description\">{networkType.description()}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"item-actions\">\n            <Button\n              className=\"Button Button--link\"\n              icon=\"fas fa-edit\"\n              onclick={() => this.toggleEdit()}\n              disabled={this.submitting}\n            >\n              {this.editing ? app.translator.trans('core.admin.basics.cancel_button') : app.translator.trans('core.admin.edit')}\n            </Button>\n            <Button\n              className=\"Button Button--link text-danger\"\n              icon=\"fas fa-trash\"\n              onclick={() => vnode.attrs.onDelete(networkType)}\n              disabled={this.submitting}\n            >\n              {app.translator.trans('core.admin.delete')}\n            </Button>\n          </div>\n        </div>\n\n        {this.editing && (\n          <div className=\"item-edit-form\">\n            <div className=\"Form\">\n              <div className=\"Form-row\">\n                <div className=\"Form-group\">\n                  <label>Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"FormControl\"\n                    bidi={this.formData.name}\n                    disabled={this.submitting}\n                  />\n                </div>\n                <div className=\"Form-group\">\n                  <label>Code</label>\n                  <input\n                    type=\"text\"\n                    className=\"FormControl\"\n                    bidi={this.formData.code}\n                    disabled={this.submitting}\n                  />\n                </div>\n              </div>\n\n              <div className=\"Form-group\">\n                <label>Description</label>\n                <textarea\n                  className=\"FormControl\"\n                  rows={2}\n                  bidi={this.formData.description}\n                  disabled={this.submitting}\n                />\n              </div>\n\n              <div className=\"Form-row\">\n                <div className=\"Form-group\">\n                  <label>Icon URL</label>\n                  <input\n                    type=\"url\"\n                    className=\"FormControl\"\n                    bidi={this.formData.iconUrl}\n                    disabled={this.submitting}\n                  />\n                </div>\n                <div className=\"Form-group\">\n                  <label>Icon Class</label>\n                  <input\n                    type=\"text\"\n                    className=\"FormControl\"\n                    bidi={this.formData.iconClass}\n                    disabled={this.submitting}\n                  />\n                </div>\n              </div>\n\n              <div className=\"Form-group\">\n                <label>Sort Order</label>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  className=\"FormControl\"\n                  bidi={this.formData.sortOrder}\n                  disabled={this.submitting}\n                />\n              </div>\n\n              <div className=\"Form-group\">\n                <Switch state={this.formData.isActive()} onchange={this.formData.isActive} disabled={this.submitting}>\n                  Active\n                </Switch>\n              </div>\n\n              <div className=\"Form-actions\">\n                <Button\n                  className=\"Button Button--primary\"\n                  loading={this.submitting}\n                  onclick={this.handleSave.bind(this, vnode.attrs)}\n                >\n                  {app.translator.trans('core.admin.basics.save_changes_button')}\n                </Button>\n                <Button\n                  className=\"Button\"\n                  onclick={() => this.toggleEdit()}\n                  disabled={this.submitting}\n                >\n                  {app.translator.trans('core.admin.basics.cancel_button')}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private initFormData(networkType: NetworkType): void {\n    this.formData = {\n      name: Stream(networkType.name() || ''),\n      code: Stream(networkType.code() || ''),\n      description: Stream(networkType.description() || ''),\n      iconUrl: Stream(networkType.iconUrl() || ''),\n      iconClass: Stream(networkType.iconClass() || ''),\n      isActive: Stream(networkType.isActive() ?? true),\n      sortOrder: Stream(String(networkType.sortOrder() || 0))\n    };\n  }\n\n  private toggleEdit(): void {\n    this.editing = !this.editing;\n    if (!this.editing) {\n      // Reset form data when cancelling\n      this.initFormData(this.attrs.networkType);\n    }\n    m.redraw();\n  }\n\n  private async handleSave(attrs: NetworkTypeListItemAttrs): Promise<void> {\n    this.submitting = true;\n    m.redraw();\n\n    const data = {\n      name: this.formData.name(),\n      code: this.formData.code().toUpperCase(),\n      description: this.formData.description() || null,\n      iconUrl: this.formData.iconUrl() || null,\n      iconClass: this.formData.iconClass() || null,\n      isActive: this.formData.isActive(),\n      sortOrder: parseInt(this.formData.sortOrder()) || 0\n    };\n\n    try {\n      await attrs.onUpdate(attrs.networkType, data);\n      this.editing = false;\n    } catch {\n      // Error handling is done in parent\n    } finally {\n      this.submitting = false;\n      m.redraw();\n    }\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Switch from 'flarum/common/components/Switch';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\n\nexport interface NetworkTypeFormData {\n  name: string;\n  code: string;\n  description: string;\n  iconUrl: string;\n  iconClass: string;\n  isActive: boolean;\n  sortOrder: number;\n}\n\nexport interface AddNetworkTypeFormAttrs {\n  submitting: boolean;\n  onSubmit: (formData: NetworkTypeFormData) => Promise<void>;\n  onCancel: () => void;\n}\n\nexport default class AddNetworkTypeForm extends Component<AddNetworkTypeFormAttrs> {\n  private formData = {\n    name: Stream(''),\n    code: Stream(''),\n    description: Stream(''),\n    iconUrl: Stream(''),\n    iconClass: Stream(''),\n    isActive: Stream(true),\n    sortOrder: Stream('0')\n  };\n\n  view(vnode: Mithril.Vnode<AddNetworkTypeFormAttrs>) {\n    const { submitting, onCancel } = vnode.attrs;\n\n    return (\n      <div className=\"AddNetworkTypeForm\">\n        <div className=\"Form\">\n          <div className=\"Form-row\">\n            <div className=\"Form-group\">\n              <label>\n                {app.translator.trans('withdrawal.admin.network_types.name')}\n                <span className=\"Form-required\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"e.g., TRON (TRC20)\"\n                bidi={this.formData.name}\n                disabled={submitting}\n              />\n            </div>\n            <div className=\"Form-group\">\n              <label>\n                {app.translator.trans('withdrawal.admin.network_types.code')}\n                <span className=\"Form-required\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"e.g., TRC20\"\n                bidi={this.formData.code}\n                disabled={submitting}\n              />\n            </div>\n          </div>\n\n          <div className=\"Form-group\">\n            <label>\n              {app.translator.trans('withdrawal.admin.network_types.description')}\n            </label>\n            <textarea\n              className=\"FormControl\"\n              rows={3}\n              placeholder=\"Optional description of the network\"\n              bidi={this.formData.description}\n              disabled={submitting}\n            />\n          </div>\n\n          <div className=\"Form-row\">\n            <div className=\"Form-group\">\n              <label>\n                {app.translator.trans('withdrawal.admin.network_types.icon_url')}\n              </label>\n              <input\n                type=\"url\"\n                className=\"FormControl\"\n                placeholder=\"https://example.com/icon.png\"\n                bidi={this.formData.iconUrl}\n                disabled={submitting}\n              />\n            </div>\n            <div className=\"Form-group\">\n              <label>\n                {app.translator.trans('withdrawal.admin.network_types.icon_class')}\n              </label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"fab fa-tron\"\n                bidi={this.formData.iconClass}\n                disabled={submitting}\n              />\n            </div>\n          </div>\n\n          <div className=\"Form-group\">\n            <label>\n              {app.translator.trans('withdrawal.admin.network_types.sort_order')}\n            </label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"FormControl\"\n              placeholder=\"0\"\n              bidi={this.formData.sortOrder}\n              disabled={submitting}\n            />\n          </div>\n\n          <div className=\"Form-group\">\n            <Switch state={this.formData.isActive()} onchange={this.formData.isActive} disabled={submitting}>\n              {app.translator.trans('withdrawal.admin.network_types.is_active')}\n            </Switch>\n          </div>\n\n          <div className=\"Form-actions\">\n            <Button\n              className=\"Button Button--primary\"\n              type=\"submit\"\n              loading={submitting}\n              onclick={this.handleSubmit.bind(this, vnode.attrs)}\n            >\n              {app.translator.trans('withdrawal.admin.network_types.add_button')}\n            </Button>\n            <Button\n              className=\"Button\"\n              onclick={onCancel}\n              disabled={submitting}\n            >\n              {app.translator.trans('core.admin.basics.cancel_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private async handleSubmit(attrs: AddNetworkTypeFormAttrs): Promise<void> {\n    // Basic validation\n    if (!this.formData.name() || !this.formData.code()) {\n      app.alerts.show(\n        { type: 'error', dismissible: true },\n        app.translator.trans('withdrawal.admin.network_types.required_fields_error')\n      );\n      return;\n    }\n\n    const formData: NetworkTypeFormData = {\n      name: this.formData.name(),\n      code: this.formData.code().toUpperCase(),\n      description: this.formData.description(),\n      iconUrl: this.formData.iconUrl(),\n      iconClass: this.formData.iconClass(),\n      isActive: this.formData.isActive(),\n      sortOrder: parseInt(this.formData.sortOrder()) || 0\n    };\n\n    try {\n      await attrs.onSubmit(formData);\n      \n      // Reset form\n      Object.keys(this.formData).forEach(key => {\n        if (key === 'isActive') {\n          this.formData[key](true);\n        } else if (key === 'sortOrder') {\n          this.formData[key]('0');\n        } else {\n          this.formData[key]('');\n        }\n      });\n\n      attrs.onCancel();\n    } catch (error) {\n      // Error handling is done in parent component\n      console.error('Form submission error:', error);\n    }\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport type Mithril from 'mithril';\nimport NetworkType from '../../../common/models/NetworkType';\nimport NetworkTypeListItem from '../items/NetworkTypeListItem';\nimport AddNetworkTypeForm from '../forms/AddNetworkTypeForm';\n\ninterface NetworkTypeManagementSectionAttrs {}\n\nexport default class NetworkTypeManagementSection extends Component<NetworkTypeManagementSectionAttrs> {\n  private networkTypes: NetworkType[] = [];\n  private loading = false;\n  private showAddForm = false;\n\n  oninit(vnode: Mithril.Vnode<NetworkTypeManagementSectionAttrs>) {\n    super.oninit(vnode);\n    this.loadNetworkTypes();\n  }\n\n  view(): Mithril.Children {\n    return (\n      <div className=\"NetworkTypeManagementSection\">\n        <div className=\"section-header\">\n          <h3>{app.translator.trans('withdrawal.admin.network_types.title')}</h3>\n          <Button\n            className=\"Button Button--primary\"\n            icon=\"fas fa-plus\"\n            onclick={() => this.toggleAddForm()}\n          >\n            {app.translator.trans('withdrawal.admin.network_types.add_button')}\n          </Button>\n        </div>\n\n        {this.showAddForm && (\n          <div className=\"section-content\">\n            <AddNetworkTypeForm\n              submitting={this.loading}\n              onSubmit={this.handleAddNetworkType.bind(this)}\n              onCancel={() => this.toggleAddForm()}\n            />\n          </div>\n        )}\n\n        <div className=\"section-content\">\n          {this.loading && !this.networkTypes.length ? (\n            <LoadingIndicator />\n          ) : this.networkTypes.length === 0 ? (\n            <div className=\"empty-state\">\n              <p>{app.translator.trans('withdrawal.admin.network_types.empty')}</p>\n            </div>\n          ) : (\n            <div className=\"network-types-list\">\n              {this.networkTypes.map((networkType) => (\n                <NetworkTypeListItem\n                  key={networkType.id()}\n                  networkType={networkType}\n                  onUpdate={this.handleUpdateNetworkType.bind(this)}\n                  onDelete={this.handleDeleteNetworkType.bind(this)}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private toggleAddForm(): void {\n    this.showAddForm = !this.showAddForm;\n    m.redraw();\n  }\n\n  private async loadNetworkTypes(): Promise<void> {\n    this.loading = true;\n    m.redraw();\n\n    try {\n      const response = await app.request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + '/network-types',\n      });\n\n      app.store.pushPayload(response);\n      this.networkTypes = app.store.all('network-types') as NetworkType[];\n    } catch (error) {\n      console.error('Failed to load network types:', error);\n      app.alerts.show(\n        { type: 'error', dismissible: true },\n        app.translator.trans('withdrawal.admin.network_types.load_error')\n      );\n    } finally {\n      this.loading = false;\n      m.redraw();\n    }\n  }\n\n  private async handleAddNetworkType(formData: any): Promise<void> {\n    this.loading = true;\n    m.redraw();\n\n    try {\n      const response = await app.request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/network-types',\n        body: {\n          data: {\n            type: 'network-types',\n            attributes: formData\n          }\n        }\n      });\n\n      app.store.pushPayload(response);\n      this.networkTypes = app.store.all('network-types') as NetworkType[];\n      this.showAddForm = false;\n\n      app.alerts.show(\n        { type: 'success', dismissible: true },\n        app.translator.trans('withdrawal.admin.network_types.created')\n      );\n    } catch (error) {\n      console.error('Failed to create network type:', error);\n      app.alerts.show(\n        { type: 'error', dismissible: true },\n        app.translator.trans('withdrawal.admin.network_types.create_error')\n      );\n      throw error;\n    } finally {\n      this.loading = false;\n      m.redraw();\n    }\n  }\n\n  private async handleUpdateNetworkType(networkType: NetworkType, data: any): Promise<void> {\n    try {\n      const response = await app.request({\n        method: 'PATCH',\n        url: app.forum.attribute('apiUrl') + '/network-types/' + networkType.id(),\n        body: {\n          data: {\n            type: 'network-types',\n            id: networkType.id(),\n            attributes: data\n          }\n        }\n      });\n\n      app.store.pushPayload(response);\n      m.redraw();\n\n      app.alerts.show(\n        { type: 'success', dismissible: true },\n        app.translator.trans('withdrawal.admin.network_types.updated')\n      );\n    } catch (error) {\n      console.error('Failed to update network type:', error);\n      app.alerts.show(\n        { type: 'error', dismissible: true },\n        app.translator.trans('withdrawal.admin.network_types.update_error')\n      );\n    }\n  }\n\n  private async handleDeleteNetworkType(networkType: NetworkType): Promise<void> {\n    if (!confirm(app.translator.trans('withdrawal.admin.network_types.delete_confirm'))) {\n      return;\n    }\n\n    try {\n      await app.request({\n        method: 'DELETE',\n        url: app.forum.attribute('apiUrl') + '/network-types/' + networkType.id()\n      });\n\n      // Remove from store and local array\n      this.networkTypes = this.networkTypes.filter(nt => nt.id() !== networkType.id());\n      app.store.remove(networkType);\n\n      app.alerts.show(\n        { type: 'success', dismissible: true },\n        app.translator.trans('withdrawal.admin.network_types.deleted')\n      );\n    } catch (error) {\n      console.error('Failed to delete network type:', error);\n      \n      let errorMessage = app.translator.trans('withdrawal.admin.network_types.delete_error');\n      if (error.responseJSON?.errors?.[0]?.detail) {\n        errorMessage = error.responseJSON.errors[0].detail;\n      }\n\n      app.alerts.show(\n        { type: 'error', dismissible: true },\n        errorMessage\n      );\n    } finally {\n      m.redraw();\n    }\n  }\n}","import app from 'flarum/admin/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\n\nexport interface ConfirmDeletePlatformModalAttrs {\n  platformName: string;\n  onConfirm: () => void;\n}\n\nexport default class ConfirmDeletePlatformModal extends Modal<ConfirmDeletePlatformModalAttrs> {\n  className() {\n    return 'ConfirmDeleteModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('withdrawal.admin.platforms.delete_confirm_title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <p>{app.translator.trans('withdrawal.admin.platforms.delete_confirm_message', { name: this.attrs.platformName() })}</p>\n        <div className=\"Form-group\">\n          <Button \n            className=\"Button Button--primary\" \n            onclick={this.confirm.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.platforms.delete_confirm_button')}\n          </Button>\n          <Button \n            className=\"Button\" \n            onclick={this.hide.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.platforms.delete_cancel_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  confirm() {\n    this.attrs.onConfirm();\n    app.modal.close();\n  }\n}","import app from 'flarum/admin/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\n\nexport interface ConfirmDeleteRequestModalAttrs {\n  requestInfo: string;\n  onConfirm: () => void;\n}\n\nexport default class ConfirmDeleteRequestModal extends Modal<ConfirmDeleteRequestModalAttrs> {\n  className() {\n    return 'ConfirmDeleteRequestModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('withdrawal.admin.requests.delete_confirm_title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <p>{app.translator.trans('withdrawal.admin.requests.delete_confirm_message', { info: this.attrs.requestInfo })}</p>\n        <div className=\"Form-group\">\n          <Button \n            className=\"Button Button--danger\" \n            onclick={this.confirm.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.requests.delete_confirm_button')}\n          </Button>\n          <Button \n            className=\"Button\" \n            onclick={this.hide.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.requests.delete_cancel_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  confirm() {\n    this.attrs.onConfirm();\n    app.modal.close();\n  }\n}","import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport type Mithril from 'mithril';\r\nimport { WithdrawalPlatform, WithdrawalRequest, User, PlatformFormData, DepositTransaction } from './types/AdminTypes';\r\nimport type DepositPlatform from '../../common/models/DepositPlatform';\r\nimport GeneralSettingsSection from './sections/GeneralSettingsSection';\r\nimport PlatformManagementSection from './sections/PlatformManagementSection';\r\nimport RequestManagementSection from './sections/RequestManagementSection';\r\nimport DepositManagementSection from './sections/DepositManagementSection';\r\nimport NetworkTypeManagementSection from './sections/NetworkTypeManagementSection';\r\nimport ConfirmDeletePlatformModal from './modals/ConfirmDeletePlatformModal';\r\nimport ConfirmDeleteRequestModal from './modals/ConfirmDeleteRequestModal';\r\n\r\nexport default class WithdrawalManagementPage extends ExtensionPage {\r\n  private platforms: WithdrawalPlatform[] = [];\r\n  private requests: WithdrawalRequest[] = [];\r\n  private depositPlatforms: DepositPlatform[] = [];\r\n  private depositTransactions: DepositTransaction[] = [];\r\n  private users: { [key: number]: User } = {};\r\n  private loading = true;\r\n  private submittingPlatform = false;\r\n  private activeTab = 'withdrawals';\r\n\r\n  oninit(vnode: Mithril.VnodeDOM) {\r\n    super.oninit(vnode);\r\n    this.loadData();\r\n  }\r\n\r\n  content() {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"WithdrawalManagementPage\">\r\n        <div className=\"container\">\r\n          <h2>{app.translator.trans('withdrawal.admin.page.title')}</h2>\r\n          \r\n          <GeneralSettingsSection onSettingChange={this.saveSetting.bind(this)} />\r\n          \r\n          <div className=\"AdminTabs\">\r\n            <div className=\"AdminTabs-nav\">\r\n              <button \r\n                className={`AdminTabs-tab ${this.activeTab === 'withdrawals' ? 'active' : ''}`}\r\n                onclick={() => { this.activeTab = 'withdrawals'; }}\r\n              >\r\n                {app.translator.trans('withdrawal.admin.tabs.withdrawals')}\r\n              </button>\r\n              <button \r\n                className={`AdminTabs-tab ${this.activeTab === 'deposits' ? 'active' : ''}`}\r\n                onclick={() => { this.activeTab = 'deposits'; }}\r\n              >\r\n                {app.translator.trans('withdrawal.admin.tabs.deposits')}\r\n              </button>\r\n              <button \r\n                className={`AdminTabs-tab ${this.activeTab === 'network-types' ? 'active' : ''}`}\r\n                onclick={() => { this.activeTab = 'network-types'; }}\r\n              >\r\n                {app.translator.trans('withdrawal.admin.tabs.network_types')}\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"AdminTabs-content\">\r\n              {this.activeTab === 'withdrawals' ? (\r\n                <div>\r\n                  <PlatformManagementSection\r\n                    platforms={this.platforms}\r\n                    submittingPlatform={this.submittingPlatform}\r\n                    onAddPlatform={this.addPlatform.bind(this)}\r\n                    onTogglePlatformStatus={this.togglePlatformStatus.bind(this)}\r\n                    onDeletePlatform={this.deletePlatform.bind(this)}\r\n                  />\r\n                  \r\n                  <RequestManagementSection\r\n                    requests={this.requests}\r\n                    onUpdateRequestStatus={this.updateRequestStatus.bind(this)}\r\n                    onDeleteRequest={this.deleteRequest.bind(this)}\r\n                  />\r\n                </div>\r\n              ) : this.activeTab === 'deposits' ? (\r\n                <DepositManagementSection\r\n                  platforms={this.depositPlatforms}\r\n                  transactions={this.depositTransactions}\r\n                  submittingPlatform={this.submittingPlatform}\r\n                  onAddPlatform={this.addDepositPlatform.bind(this)}\r\n                  onTogglePlatformStatus={this.toggleDepositPlatformStatus.bind(this)}\r\n                  onDeletePlatform={this.deleteDepositPlatform.bind(this)}\r\n                  onUpdateTransactionStatus={this.updateDepositTransactionStatus.bind(this)}\r\n                />\r\n              ) : this.activeTab === 'network-types' ? (\r\n                <NetworkTypeManagementSection />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  private async addPlatform(formData: PlatformFormData): Promise<void> {\r\n    if (this.submittingPlatform) return;\r\n\r\n    this.submittingPlatform = true;\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/withdrawal-platforms',\r\n        body: {\r\n          data: {\r\n            type: 'withdrawal-platforms',\r\n            attributes: {\r\n              name: formData.name,\r\n              symbol: formData.symbol,\r\n              minAmount: parseFloat(formData.minAmount),\r\n              maxAmount: parseFloat(formData.maxAmount),\r\n              fee: parseFloat(formData.fee || '0'),\r\n              iconUrl: formData.iconUrl || null,\r\n              iconClass: formData.iconClass || null,\r\n              isActive: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (response && response.data) {\r\n        app.store.pushPayload(response);\r\n      }\r\n      \r\n      await this.loadPlatforms();\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.add_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding platform:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.add_error')\r\n      );\r\n    } finally {\r\n      this.submittingPlatform = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async togglePlatformStatus(platform: WithdrawalPlatform): Promise<void> {\r\n    try {\r\n      const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n      const currentStatus = (typeof platform.isActive === 'function' ? platform.isActive() : platform.attributes?.isActive) ?? false;\r\n      const record = app.store.getById('withdrawal-platforms', platformId);\r\n      \r\n      if (record) {\r\n        await record.save({ isActive: !currentStatus });\r\n        await this.loadPlatforms();\r\n        \r\n        app.alerts.show(\r\n          { type: 'success', dismissible: true },\r\n          app.translator.trans(`withdrawal.admin.platforms.${!currentStatus ? 'enable' : 'disable'}_success`)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling platform status:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.toggle_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private deletePlatform(platform: WithdrawalPlatform): void {\r\n    const platformName = (typeof platform.name === 'function' ? platform.name() : platform.attributes?.name) || 'Unknown Platform';\r\n    \r\n    app.modal.show(ConfirmDeletePlatformModal, {\r\n      platformName: platformName,\r\n      onConfirm: async () => {\r\n        try {\r\n          const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n          const record = app.store.getById('withdrawal-platforms', platformId);\r\n          if (record) {\r\n            await record.delete();\r\n            await this.loadPlatforms();\r\n            \r\n            app.alerts.show(\r\n              { type: 'success', dismissible: true },\r\n              app.translator.trans('withdrawal.admin.platforms.delete_success')\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting platform:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.platforms.delete_error')\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async updateRequestStatus(request: WithdrawalRequest, status: string): Promise<void> {\r\n    try {\r\n      const requestId = typeof request.id === 'function' ? request.id() : request.id;\r\n      const record = app.store.getById('withdrawal-requests', requestId);\r\n      if (record) {\r\n        await record.save({ status });\r\n        await this.loadRequests();\r\n        \r\n        app.alerts.show(\r\n          { type: 'success', dismissible: true },\r\n          app.translator.trans(`withdrawal.admin.requests.${status}_success`)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating request:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.requests.update_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private deleteRequest(request: WithdrawalRequest): void {\r\n    const requestId = typeof request.id === 'function' ? request.id() : request.id;\r\n    const amount = typeof request.amount === 'function' ? request.amount() : (request.attributes?.amount || 0);\r\n    \r\n    // Get user name for display in confirmation\r\n    let userName = 'Unknown User';\r\n    if (typeof request.user === 'function') {\r\n      const userData = request.user();\r\n      if (userData && typeof userData.displayName === 'function') {\r\n        userName = userData.displayName();\r\n      } else if (userData && userData.attributes?.displayName) {\r\n        userName = userData.attributes.displayName;\r\n      }\r\n    }\r\n    \r\n    app.modal.show(ConfirmDeleteRequestModal, {\r\n      requestInfo: `${userName} - ${amount}`,\r\n      onConfirm: async () => {\r\n        try {\r\n          const record = app.store.getById('withdrawal-requests', requestId);\r\n          if (record) {\r\n            await record.delete();\r\n            await this.loadRequests();\r\n            \r\n            app.alerts.show(\r\n              { type: 'success', dismissible: true },\r\n              app.translator.trans('withdrawal.admin.requests.delete_success')\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting request:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.requests.delete_error')\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async loadData(): Promise<void> {\r\n    try {\r\n      // Load platforms first to ensure they're in the store\r\n      await this.loadPlatforms();\r\n      // Then load requests which reference platforms\r\n      await this.loadRequests();\r\n      // Load deposit data\r\n      await this.loadDepositPlatforms();\r\n      await this.loadDepositTransactions();\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async loadPlatforms(): Promise<void> {\r\n    try {\r\n      const response = await app.store.find('withdrawal-platforms');\r\n      this.platforms = Array.isArray(response) ? response.filter(p => p !== null) : (response ? [response] : []);\r\n      \r\n      console.log('Loaded platforms:', this.platforms);\r\n    } catch (error) {\r\n      console.error('Error loading platforms:', error);\r\n      this.platforms = [];\r\n    }\r\n  }\r\n\r\n  private async loadRequests(): Promise<void> {\r\n    try {\r\n      const response = await app.store.find('withdrawal-requests', {\r\n        include: 'user,platform'\r\n      });\r\n      this.requests = Array.isArray(response) ? response.filter(r => r !== null) : (response ? [response] : []);\r\n      \r\n      console.log('Loaded requests:', this.requests);\r\n    } catch (error) {\r\n      console.error('Error loading requests:', error);\r\n      this.requests = [];\r\n    }\r\n    \r\n    // Load user data for each request - skip if no requests\r\n    if (this.requests.length === 0) {\r\n      return;\r\n    }\r\n    \r\n    const userIds = [...new Set(this.requests\r\n      .map(r => {\r\n        // Check both data.relationships and direct relationships structures\r\n        const userRelation = r?.data?.relationships?.user?.data || r?.relationships?.user?.data;\r\n        if (userRelation) {\r\n          return userRelation.id;\r\n        }\r\n        return null;\r\n      })\r\n      .filter(id => id !== null && id !== undefined)\r\n    )];\r\n    const usersToLoad = userIds.filter(userId => !this.users[userId]);\r\n    \r\n    if (usersToLoad.length > 0) {\r\n      try {\r\n        const userPromises = usersToLoad.map(userId => \r\n          app.store.find('users', userId).catch(error => {\r\n            console.error(`Error loading user ${userId}:`, error);\r\n            return null;\r\n          })\r\n        );\r\n        \r\n        const loadedUsers = await Promise.all(userPromises);\r\n        \r\n        usersToLoad.forEach((userId, index) => {\r\n          if (loadedUsers[index]) {\r\n            this.users[userId] = loadedUsers[index];\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading users:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async saveSetting(key: string, value: string): Promise<void> {\r\n    try {\r\n      await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/settings',\r\n        body: { [key]: value }\r\n      });\r\n      \r\n      // Update the forum attribute immediately so the UI reflects the change\r\n      app.forum.pushAttributes({ [key]: value });\r\n      \r\n    } catch (error) {\r\n      console.error('Error saving setting:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        'Failed to save setting'\r\n      );\r\n    }\r\n  }\r\n\r\n  // Deposit management methods\r\n  private async addDepositPlatform(formData: any): Promise<void> {\r\n    if (this.submittingPlatform) return;\r\n\r\n    this.submittingPlatform = true;\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/deposit-platforms',\r\n        body: {\r\n          data: {\r\n            type: 'deposit-platforms',\r\n            attributes: {\r\n              name: formData.name,\r\n              symbol: formData.symbol,\r\n              network: formData.network,\r\n              minAmount: parseFloat(formData.minAmount) || 0,\r\n              maxAmount: formData.maxAmount ? parseFloat(formData.maxAmount) : null,\r\n              address: formData.address || null,\r\n              addressTemplate: formData.addressTemplate || null,\r\n              iconUrl: formData.iconUrl || null,\r\n              iconClass: formData.iconClass || null,\r\n              qrCodeTemplate: formData.qrCodeTemplate || null,\r\n              warningText: formData.warningText || null,\r\n              isActive: formData.isActive\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (response && response.data) {\r\n        app.store.pushPayload(response);\r\n      }\r\n      \r\n      await this.loadDepositPlatforms();\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.platforms.add_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding deposit platform:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.platforms.add_error')\r\n      );\r\n    } finally {\r\n      this.submittingPlatform = false;\r\n    }\r\n  }\r\n\r\n  private async toggleDepositPlatformStatus(platform: DepositPlatform): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'PATCH',\r\n        url: `${app.forum.attribute('apiUrl')}/deposit-platforms/${platform.id}`,\r\n        body: {\r\n          data: {\r\n            type: 'deposit-platforms',\r\n            attributes: {\r\n              isActive: !platform.isActive\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      if (response && response.data) {\r\n        app.store.pushPayload(response);\r\n      }\r\n\r\n      await this.loadDepositPlatforms();\r\n      \r\n      const statusKey = !platform.isActive ? 'enable_success' : 'disable_success';\r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans(`withdrawal.admin.deposit.platforms.${statusKey}`)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error toggling platform status:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.platforms.toggle_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private deleteDepositPlatform(platform: DepositPlatform): void {\r\n    app.modal.show(ConfirmDeletePlatformModal, {\r\n      platformName: platform.name,\r\n      onConfirm: async () => {\r\n        try {\r\n          await app.request({\r\n            method: 'DELETE',\r\n            url: `${app.forum.attribute('apiUrl')}/deposit-platforms/${platform.id}`\r\n          });\r\n\r\n          await this.loadDepositPlatforms();\r\n          \r\n          app.alerts.show(\r\n            { type: 'success', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.deposit.platforms.delete_success')\r\n          );\r\n        } catch (error) {\r\n          console.error('Error deleting deposit platform:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.deposit.platforms.delete_error')\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async updateDepositTransactionStatus(transaction: DepositTransaction, status: string): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'PATCH',\r\n        url: `${app.forum.attribute('apiUrl')}/deposit-transactions/${transaction.id}`,\r\n        body: {\r\n          data: {\r\n            type: 'deposit-transactions',\r\n            attributes: {\r\n              status: status\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      if (response && response.data) {\r\n        app.store.pushPayload(response);\r\n      }\r\n\r\n      await this.loadDepositTransactions();\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans(`withdrawal.admin.deposit.transactions.${status}_success`)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating deposit transaction:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.deposit.transactions.update_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private async loadDepositPlatforms(): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/deposit-platforms'\r\n      });\r\n\r\n      app.store.pushPayload(response);\r\n      this.depositPlatforms = app.store.all('deposit-platforms');\r\n      \r\n      console.log('Loaded deposit platforms:', this.depositPlatforms);\r\n    } catch (error) {\r\n      console.error('Error loading deposit platforms:', error);\r\n      this.depositPlatforms = [];\r\n    }\r\n  }\r\n\r\n  private async loadDepositTransactions(): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/deposit-transactions'\r\n      });\r\n\r\n      app.store.pushPayload(response);\r\n      this.depositTransactions = app.store.all('deposit-transactions');\r\n      \r\n      console.log('Loaded deposit transactions:', this.depositTransactions);\r\n    } catch (error) {\r\n      console.error('Error loading deposit transactions:', error);\r\n      this.depositTransactions = [];\r\n    }\r\n  }\r\n}\r\n\r\n","import Model from 'flarum/common/Model';\r\n\r\n/**\r\n * WithdrawalPlatform model for Flarum\r\n * \r\n * This model represents a withdrawal platform that users can use\r\n * to withdraw their virtual currency.\r\n */\r\nexport default class WithdrawalPlatform extends Model {\r\n  // Basic attributes\r\n  name = Model.attribute<string>('name');\r\n  symbol = Model.attribute<string>('symbol');\r\n  minAmount = Model.attribute<number>('minAmount');\r\n  maxAmount = Model.attribute<number>('maxAmount');\r\n  fee = Model.attribute<number>('fee');\r\n  \r\n  // Optional attributes\r\n  iconUrl = Model.attribute<string | null>('iconUrl');\r\n  iconClass = Model.attribute<string | null>('iconClass');\r\n  \r\n  // Status\r\n  isActive = Model.attribute<boolean>('isActive');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-platforms/${this.id()}`;\r\n  }\r\n  \r\n  // Helper methods\r\n  displayName(): string {\r\n    const symbol = this.symbol();\r\n    const name = this.name();\r\n    return symbol ? `${name} (${symbol})` : name;\r\n  }\r\n  \r\n  isValidAmount(amount: number): boolean {\r\n    const min = this.minAmount();\r\n    const max = this.maxAmount();\r\n    return amount >= min && amount <= max;\r\n  }\r\n  \r\n  getTotalCost(amount: number): number {\r\n    return amount + this.fee();\r\n  }\r\n}","/**\r\n * Shared type definitions for the Withdrawal extension\r\n */\r\n\r\n/**\r\n * Withdrawal platform data structure\r\n */\r\nexport interface WithdrawalPlatformData {\r\n  id: string | number;\r\n  name: string;\r\n  symbol: string;\r\n  minAmount: number;\r\n  maxAmount: number;\r\n  fee: number;\r\n  iconUrl?: string | null;\r\n  iconClass?: string | null;\r\n  isActive: boolean;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * Withdrawal request data structure\r\n */\r\nexport interface WithdrawalRequestData {\r\n  id: string | number;\r\n  amount: number;\r\n  accountDetails: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  platformId: number;\r\n  userId: number;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * User withdrawal data extension\r\n */\r\nexport interface UserWithdrawalData {\r\n  money?: number;\r\n  withdrawalRequests?: WithdrawalRequestData[];\r\n}\r\n\r\n/**\r\n * API response structures\r\n */\r\nexport interface ApiSuccessResponse<T = any> {\r\n  data: T;\r\n}\r\n\r\nexport interface ApiErrorResponse {\r\n  errors: Array<{\r\n    status: string;\r\n    code: string;\r\n    title: string;\r\n    detail?: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Form validation errors\r\n */\r\nexport interface ValidationErrors {\r\n  [field: string]: string[];\r\n}\r\n\r\n/**\r\n * Configuration constants\r\n */\r\nexport const WITHDRAWAL_STATUS = {\r\n  PENDING: 'pending',\r\n  APPROVED: 'approved',\r\n  REJECTED: 'rejected',\r\n} as const;\r\n\r\nexport type WithdrawalStatus = typeof WITHDRAWAL_STATUS[keyof typeof WITHDRAWAL_STATUS];\r\n\r\n/**\r\n * Default values\r\n */\r\nexport const DEFAULT_MIN_AMOUNT = 0.001;\r\nexport const DEFAULT_MAX_AMOUNT = 10;\r\nexport const DEFAULT_FEE = 0.0005;\r\n\r\n/**\r\n * Helper type guards\r\n */\r\nexport function isWithdrawalPlatform(obj: any): obj is WithdrawalPlatformData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'name' in obj &&\r\n    'symbol' in obj &&\r\n    'minAmount' in obj &&\r\n    'maxAmount' in obj;\r\n}\r\n\r\nexport function isWithdrawalRequest(obj: any): obj is WithdrawalRequestData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'amount' in obj &&\r\n    'accountDetails' in obj &&\r\n    'status' in obj &&\r\n    'platformId' in obj &&\r\n    'userId' in obj;\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport WithdrawalPlatform from './WithdrawalPlatform';\r\nimport { WithdrawalStatus, WITHDRAWAL_STATUS } from '../types';\r\n\r\n/**\r\n * WithdrawalRequest model for Flarum\r\n * \r\n * This model represents a user's withdrawal request.\r\n */\r\nexport default class WithdrawalRequest extends Model {\r\n  // Basic attributes\r\n  amount = Model.attribute<number>('amount');\r\n  accountDetails = Model.attribute<string>('accountDetails');\r\n  message = Model.attribute<string>('message');\r\n  status = Model.attribute<WithdrawalStatus>('status');\r\n  \r\n  // Foreign keys\r\n  platformId = Model.attribute<number>('platformId');\r\n  userId = Model.attribute<number>('userId');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Relationships\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<WithdrawalPlatform>('platform');\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-requests/${this.id()}`;\r\n  }\r\n  \r\n  // Status helpers\r\n  isPending(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.PENDING;\r\n  }\r\n  \r\n  isApproved(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.APPROVED;\r\n  }\r\n  \r\n  isRejected(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.REJECTED;\r\n  }\r\n  \r\n  canBeModified(): boolean {\r\n    return this.isPending();\r\n  }\r\n  \r\n  // Display helpers\r\n  statusLabel(): string {\r\n    const status = this.status();\r\n    return app.translator.trans(`withdrawal.forum.status.${status}`);\r\n  }\r\n  \r\n  statusColor(): string {\r\n    const status = this.status();\r\n    switch (status) {\r\n      case WITHDRAWAL_STATUS.APPROVED:\r\n        return 'success';\r\n      case WITHDRAWAL_STATUS.REJECTED:\r\n        return 'danger';\r\n      case WITHDRAWAL_STATUS.PENDING:\r\n      default:\r\n        return 'warning';\r\n    }\r\n  }\r\n}","import Model from 'flarum/common/Model';\r\n\r\nexport default class DepositPlatform extends Model {\r\n  name = Model.attribute('name');\r\n  symbol = Model.attribute('symbol');\r\n  network = Model.attribute('network');\r\n  networkTypeId = Model.attribute('networkTypeId');\r\n  displayName = Model.attribute('displayName');\r\n  minAmount = Model.attribute('minAmount');\r\n  maxAmount = Model.attribute('maxAmount');\r\n  address = Model.attribute('address');\r\n  iconUrl = Model.attribute('iconUrl');\r\n  iconClass = Model.attribute('iconClass');\r\n  warningText = Model.attribute('warningText');\r\n  networkConfig = Model.attribute('networkConfig');\r\n  isActive = Model.attribute('isActive');\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport DepositPlatform from './DepositPlatform';\r\nimport DepositAddress from './DepositAddress';\r\n\r\nexport default class DepositTransaction extends Model {\r\n  amount = Model.attribute('amount');\r\n  fee = Model.attribute('fee');\r\n  creditedAmount = Model.attribute('creditedAmount');\r\n  transactionHash = Model.attribute('transactionHash');\r\n  fromAddress = Model.attribute('fromAddress');\r\n  memo = Model.attribute('memo');\r\n  userMessage = Model.attribute('userMessage');\r\n  status = Model.attribute('status');\r\n  statusColor = Model.attribute('statusColor');\r\n  blockchainData = Model.attribute('blockchainData');\r\n  confirmations = Model.attribute('confirmations');\r\n  requiredConfirmations = Model.attribute('requiredConfirmations');\r\n  hasEnoughConfirmations = Model.attribute('hasEnoughConfirmations');\r\n  canBeCompleted = Model.attribute('canBeCompleted');\r\n  explorerUrl = Model.attribute('explorerUrl');\r\n  detectedAt = Model.attribute('detectedAt', Model.transformDate);\r\n  confirmedAt = Model.attribute('confirmedAt', Model.transformDate);\r\n  completedAt = Model.attribute('completedAt', Model.transformDate);\r\n  adminNotes = Model.attribute('adminNotes');\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<DepositPlatform>('platform');\r\n  depositAddress = Model.hasOne<DepositAddress>('depositAddress');\r\n  processedBy = Model.hasOne<User>('processedBy');\r\n}","import Model from 'flarum/common/Model';\n\nexport default class NetworkType extends Model {\n  id = Model.attribute<number>('id');\n  name = Model.attribute<string>('name');\n  code = Model.attribute<string>('code');\n  description = Model.attribute<string>('description');\n  iconUrl = Model.attribute<string>('iconUrl');\n  iconClass = Model.attribute<string>('iconClass');\n  config = Model.attribute<Record<string, any>>('config');\n  isActive = Model.attribute<boolean>('isActive');\n  sortOrder = Model.attribute<number>('sortOrder');\n  createdAt = Model.attribute<Date>('createdAt', Model.transformDate);\n  updatedAt = Model.attribute<Date>('updatedAt', Model.transformDate);\n}","import app from 'flarum/admin/app';\r\nimport WithdrawalManagementPage from './components/WithdrawalManagementPage';\r\nimport WithdrawalPlatform from '../common/models/WithdrawalPlatform';\r\nimport WithdrawalRequest from '../common/models/WithdrawalRequest';\r\nimport DepositPlatform from '../common/models/DepositPlatform';\r\nimport DepositTransaction from '../common/models/DepositTransaction';\r\nimport NetworkType from '../common/models/NetworkType';\r\n\r\napp.initializers.add('wusong8899-withdrawal', () => {\r\n  // Register models in store\r\n  app.store.models['withdrawal-platforms'] = WithdrawalPlatform;\r\n  app.store.models['withdrawal-requests'] = WithdrawalRequest;\r\n  app.store.models['deposit-platforms'] = DepositPlatform;\r\n  app.store.models['deposit-transactions'] = DepositTransaction;\r\n  app.store.models['network-types'] = NetworkType;\r\n\r\n  app.extensionData\r\n    .for('wusong8899-withdrawal')\r\n    .registerPage(WithdrawalManagementPage);\r\n});"],"names":["GeneralSettingsSection","Component","app","withAttr","value","AddPlatformForm","Stream","Button","formData","PlatformListItem","platform","platformId","platformName","symbol","minAmount","maxAmount","fee","isActive","createdDate","dateDisplay","humanTime","e","PlatformManagementSection","platforms","submittingPlatform","onAddPlatform","onTogglePlatformStatus","onDeletePlatform","WithdrawalRequestItem","request","showActions","showDelete","requestId","amount","status","accountDetails","userName","userData","platformSymbol","statusClass","RequestManagementSection","requests","onUpdateRequestStatus","onDeleteRequest","pendingRequests","r","processedRequests","AddDepositPlatformForm","vnode","submitting","onCancel","m","networkTypeId","networkType","nt","Switch","response","error","attrs","key","DepositPlatformListItem","onToggleStatus","onDelete","icon","DepositTransactionItem","transaction","onUpdateStatus","username","actions","hash","DepositManagementSection","transactions","onUpdateTransactionStatus","pendingTransactions","t","completedTransactions","NetworkTypeListItem","data","AddNetworkTypeForm","NetworkTypeManagementSection","LoadingIndicator","errorMessage","ConfirmDeletePlatformModal","Modal","ConfirmDeleteRequestModal","WithdrawalManagementPage","ExtensionPage","currentStatus","record","p","usersToLoad","userRelation","id","userId","userPromises","loadedUsers","index","statusKey","WithdrawalPlatform","Model","name","min","max","WITHDRAWAL_STATUS","WithdrawalRequest","DepositPlatform","DepositTransaction","NetworkType"],"mappings":"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"}