{"version":3,"file":"admin.js","sources":["../src/admin/components/sections/GeneralSettingsSection.tsx","../src/admin/components/forms/AddPlatformForm.tsx","../src/admin/components/items/PlatformListItem.tsx","../src/admin/components/sections/PlatformManagementSection.tsx","../src/admin/components/items/WithdrawalRequestItem.tsx","../src/admin/components/sections/RequestManagementSection.tsx","../src/admin/components/modals/ConfirmDeletePlatformModal.tsx","../src/admin/components/modals/ConfirmDeleteRequestModal.tsx","../src/admin/components/WithdrawalManagementPage.tsx","../src/common/models/WithdrawalPlatform.ts","../src/common/types/index.ts","../src/common/models/WithdrawalRequest.ts","../src/admin/index.ts"],"sourcesContent":["import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\n\nexport interface GeneralSettingsSectionAttrs {\n  onSettingChange: (key: string, value: string) => void;\n}\n\nexport default class GeneralSettingsSection extends Component<GeneralSettingsSectionAttrs> {\n  view(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>General Settings</h3>\n        \n        <div className=\"Form\">\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('withdrawal.admin.settings.money_icon_url')}</label>\n            <input\n              type=\"url\"\n              className=\"FormControl\"\n              placeholder=\"https://i.mji.rip/2025/08/28/cd18932c68e9bbee9502b1fb6317cba9.png\"\n              value={app.forum.attribute('wusong8899-withdrawal.moneyIconUrl') || ''}\n              oninput={(e: Event) => {\n                const value = (e.target as HTMLInputElement).value;\n                this.attrs.onSettingChange('wusong8899-withdrawal.moneyIconUrl', value);\n              }}\n            />\n            <small className=\"helpText\">{app.translator.trans('withdrawal.admin.settings.money_icon_url_help')}</small>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\nimport { PlatformFormData } from '../types/AdminTypes';\n\nexport interface AddPlatformFormAttrs {\n  onSubmit: (formData: PlatformFormData) => Promise<void>;\n  submitting: boolean;\n}\n\nexport default class AddPlatformForm extends Component<AddPlatformFormAttrs> {\n  private name = Stream('');\n  private symbol = Stream('');\n  private minAmount = Stream('');\n  private maxAmount = Stream('');\n  private fee = Stream('');\n  private iconUrl = Stream('');\n  private iconClass = Stream('');\n\n  view(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalManagementPage-addPlatform\">\n        <div className=\"Form-group\">\n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.name')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder={app.translator.trans('withdrawal.admin.platforms.add_placeholder')}\n                value={this.name()}\n                oninput={(e: Event) => this.name((e.target as HTMLInputElement).value)}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.symbol')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"BTC, ETH, USDT...\"\n                value={this.symbol()}\n                oninput={(e: Event) => this.symbol((e.target as HTMLInputElement).value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.min_amount')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"0.001\"\n                value={this.minAmount()}\n                oninput={(e: Event) => this.minAmount((e.target as HTMLInputElement).value)}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.max_amount')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"10.0\"\n                value={this.maxAmount()}\n                oninput={(e: Event) => this.maxAmount((e.target as HTMLInputElement).value)}\n              />\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.fee')}</label>\n              <input\n                type=\"number\"\n                step=\"0.00000001\"\n                className=\"FormControl\"\n                placeholder=\"0.0005\"\n                value={this.fee()}\n                oninput={(e: Event) => this.fee((e.target as HTMLInputElement).value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"Form-row\">\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.icon_url')}</label>\n              <input\n                type=\"url\"\n                className=\"FormControl\"\n                placeholder=\"https://example.com/icon.png\"\n                value={this.iconUrl()}\n                oninput={(e: Event) => this.iconUrl((e.target as HTMLInputElement).value)}\n              />\n              <small className=\"helpText\">{app.translator.trans('withdrawal.admin.platforms.icon_url_help')}</small>\n            </div>\n            <div className=\"Form-col\">\n              <label>{app.translator.trans('withdrawal.admin.platforms.icon_class')}</label>\n              <input\n                type=\"text\"\n                className=\"FormControl\"\n                placeholder=\"fas fa-coins\"\n                value={this.iconClass()}\n                oninput={(e: Event) => this.iconClass((e.target as HTMLInputElement).value)}\n              />\n              <small className=\"helpText\">{app.translator.trans('withdrawal.admin.platforms.icon_class_help')}</small>\n            </div>\n          </div>\n          \n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary\"\n              loading={this.attrs.submitting}\n              disabled={!this.canSubmit()}\n              onclick={this.handleSubmit.bind(this)}\n            >\n              {app.translator.trans('withdrawal.admin.platforms.add_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private canSubmit(): boolean {\n    return !!(\n      this.name() &&\n      this.name().trim() &&\n      this.symbol() &&\n      this.symbol().trim() &&\n      this.minAmount() &&\n      this.maxAmount() &&\n      parseFloat(this.minAmount()) > 0 &&\n      parseFloat(this.maxAmount()) > 0 &&\n      parseFloat(this.maxAmount()) >= parseFloat(this.minAmount())\n    );\n  }\n\n  private async handleSubmit(): Promise<void> {\n    if (!this.canSubmit() || this.attrs.submitting) return;\n\n    const formData: PlatformFormData = {\n      name: this.name(),\n      symbol: this.symbol(),\n      minAmount: this.minAmount(),\n      maxAmount: this.maxAmount(),\n      fee: this.fee(),\n      iconUrl: this.iconUrl(),\n      iconClass: this.iconClass()\n    };\n\n    try {\n      await this.attrs.onSubmit(formData);\n      this.clearForm();\n    } catch {\n      // Error handling is done in parent component\n    }\n  }\n\n  private clearForm(): void {\n    this.name('');\n    this.symbol('');\n    this.minAmount('');\n    this.maxAmount('');\n    this.fee('');\n    this.iconUrl('');\n    this.iconClass('');\n    m.redraw();\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport type Mithril from 'mithril';\nimport { WithdrawalPlatform } from '../types/AdminTypes';\n\nexport interface PlatformListItemAttrs {\n  platform: WithdrawalPlatform;\n  onToggleStatus: (platform: WithdrawalPlatform) => Promise<void>;\n  onDelete: (platform: WithdrawalPlatform) => void;\n}\n\nexport default class PlatformListItem extends Component<PlatformListItemAttrs> {\n  view(): Mithril.Children {\n    const platform = this.attrs.platform;\n    \n    // Handle both Model instances and plain objects\n    const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\n    const platformName = (typeof platform.name === 'function' ? platform.name() : platform.attributes?.name) || 'Unknown Platform';\n    const symbol = (typeof platform.symbol === 'function' ? platform.symbol() : platform.attributes?.symbol) || 'N/A';\n    const minAmount = (typeof platform.minAmount === 'function' ? platform.minAmount() : platform.attributes?.minAmount) || 'N/A';\n    const maxAmount = (typeof platform.maxAmount === 'function' ? platform.maxAmount() : platform.attributes?.maxAmount) || 'N/A';\n    const fee = (typeof platform.fee === 'function' ? platform.fee() : platform.attributes?.fee) || 'N/A';\n    const isActive = (typeof platform.isActive === 'function' ? platform.isActive() : platform.attributes?.isActive) ?? false;\n    const createdDate = (typeof platform.createdAt === 'function' ? platform.createdAt() : platform.attributes?.createdAt) || null;\n    \n    let dateDisplay: Mithril.Children = 'N/A';\n    if (createdDate) {\n      try {\n        dateDisplay = humanTime(createdDate);\n      } catch (e) {\n        console.error('Error formatting date:', e);\n        dateDisplay = 'Invalid Date';\n      }\n    }\n    \n    return (\n      <div key={platformId} className=\"WithdrawalPlatform\">\n        <div className=\"WithdrawalPlatform-info\">\n          <div className=\"WithdrawalPlatform-primary\">\n            <span className={`WithdrawalPlatform-status ${isActive ? 'active' : 'inactive'}`}>\n              {isActive ? '🟢' : '🔴'}\n            </span>\n            <span className=\"WithdrawalPlatform-name\">{platformName}</span>\n            <span className=\"platform-id\">#{platformId}</span>\n            <span className={`WithdrawalPlatform-symbol ${symbol}`}>{symbol}</span>\n          </div>\n          <div className=\"WithdrawalPlatform-details\">\n            <span className=\"WithdrawalPlatform-amounts\">\n              Min: {minAmount} | Max: {maxAmount} | Fee: {fee}\n            </span>\n            <span className=\"WithdrawalPlatform-date\">{dateDisplay}</span>\n          </div>\n        </div>\n        <div className=\"WithdrawalPlatform-actions\">\n          <Button\n            className={`Button ${isActive ? 'Button--secondary' : 'Button--primary'}`}\n            onclick={() => this.attrs.onToggleStatus(platform)}\n          >\n            {app.translator.trans(`withdrawal.admin.platforms.${isActive ? 'disable' : 'enable'}`)}\n          </Button>\n          <Button\n            className=\"Button Button--danger\"\n            onclick={() => this.attrs.onDelete(platform)}\n          >\n            {app.translator.trans('withdrawal.admin.platforms.delete')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport { WithdrawalPlatform, PlatformFormData } from '../types/AdminTypes';\nimport AddPlatformForm from '../forms/AddPlatformForm';\nimport PlatformListItem from '../items/PlatformListItem';\n\nexport interface PlatformManagementSectionAttrs {\n  platforms: WithdrawalPlatform[];\n  submittingPlatform: boolean;\n  onAddPlatform: (formData: PlatformFormData) => Promise<void>;\n  onTogglePlatformStatus: (platform: WithdrawalPlatform) => Promise<void>;\n  onDeletePlatform: (platform: WithdrawalPlatform) => void;\n}\n\nexport default class PlatformManagementSection extends Component<PlatformManagementSectionAttrs> {\n  view(): Mithril.Children {\n    const { platforms, submittingPlatform, onAddPlatform, onTogglePlatformStatus, onDeletePlatform } = this.attrs;\n\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>{app.translator.trans('withdrawal.admin.platforms.title')}</h3>\n        \n        <AddPlatformForm \n          onSubmit={onAddPlatform}\n          submitting={submittingPlatform}\n        />\n\n        <div className=\"WithdrawalManagementPage-platformList\">\n          {platforms.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.platforms.empty')}</p>\n          ) : (\n            platforms.map((platform) => (\n              <PlatformListItem\n                key={typeof platform.id === 'function' ? platform.id() : platform.id}\n                platform={platform}\n                onToggleStatus={onTogglePlatformStatus}\n                onDelete={onDeletePlatform}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport type Mithril from 'mithril';\nimport { WithdrawalRequest } from '../types/AdminTypes';\n\nexport interface WithdrawalRequestItemAttrs {\n  request: WithdrawalRequest;\n  showActions: boolean;\n  showDelete?: boolean;\n  onUpdateStatus?: (request: WithdrawalRequest, status: string) => Promise<void>;\n  onDelete?: (request: WithdrawalRequest) => void;\n}\n\nexport default class WithdrawalRequestItem extends Component<WithdrawalRequestItemAttrs> {\n  view(): Mithril.Children {\n    const request = this.attrs.request;\n    const { showActions, showDelete = false } = this.attrs;\n    \n    // Handle Flarum Model instances\n    const requestId = typeof request.id === 'function' ? request.id() : request.id;\n    const amount = typeof request.amount === 'function' ? request.amount() : (request.attributes?.amount || 0);\n    const status = typeof request.status === 'function' ? request.status() : (request.attributes?.status || 'pending');\n    const accountDetails = typeof request.accountDetails === 'function' ? request.accountDetails() : \n      (request.attributes?.accountDetails || request.attributes?.account_details || 'N/A');\n    const createdDate = typeof request.createdAt === 'function' ? request.createdAt() : (request.attributes?.createdAt || null);\n    \n    // Get user info\n    let userName = 'Unknown User';\n    if (typeof request.user === 'function') {\n      const userData = request.user();\n      if (userData && typeof userData.displayName === 'function') {\n        userName = userData.displayName();\n      } else if (userData && userData.attributes?.displayName) {\n        userName = userData.attributes.displayName;\n      }\n    }\n    \n    // Get platform info - simplified approach using Flarum Model relationships\n    let platformName = 'Unknown Platform';\n    let platformSymbol = 'N/A';\n    \n    if (typeof request.platform === 'function') {\n      const platform = request.platform();\n      if (platform) {\n        platformName = typeof platform.name === 'function' ? platform.name() : (platform.attributes?.name || 'Unknown Platform');\n        platformSymbol = typeof platform.symbol === 'function' ? platform.symbol() : (platform.attributes?.symbol || 'N/A');\n      }\n    }\n    \n    const statusClass = `status-${status}`;\n    \n    let dateDisplay: Mithril.Children = 'N/A';\n    if (createdDate) {\n      try {\n        dateDisplay = humanTime(createdDate);\n      } catch (e) {\n        console.error('Error formatting request date:', e);\n        dateDisplay = 'Invalid Date';\n      }\n    }\n\n    return (\n      <div key={requestId} className={`WithdrawalRequest ${statusClass}`}>\n        <div className=\"WithdrawalRequest-info\">\n          <div className=\"WithdrawalRequest-user\">\n            <strong>{userName}</strong>\n            <span className=\"request-id\">#{requestId}</span>\n          </div>\n          <div className=\"WithdrawalRequest-details\">\n            <span className=\"amount\">{amount}</span>\n            <span className=\"platform\">{platformName}</span>\n            <span className=\"symbol\">{platformSymbol}</span>\n            <span className=\"date\">{dateDisplay}</span>\n          </div>\n          <div className=\"WithdrawalRequest-account\">\n            <strong>{app.translator.trans('withdrawal.admin.requests.account_details')}:</strong>\n            <span>{accountDetails}</span>\n          </div>\n          <div className=\"WithdrawalRequest-status\">\n            <span className={`Badge Badge--${status}`}>\n              {app.translator.trans(`withdrawal.admin.requests.status.${status}`)}\n            </span>\n          </div>\n        </div>\n        \n        {(showActions || showDelete) && (\n          <div className=\"WithdrawalRequest-actions\">\n            {showActions && this.attrs.onUpdateStatus && (\n              <>\n                <Button\n                  className=\"Button Button--primary\"\n                  onclick={() => this.attrs.onUpdateStatus!(request, 'approved')}\n                >\n                  {app.translator.trans('withdrawal.admin.requests.approve')}\n                </Button>\n                <Button\n                  className=\"Button Button--danger\"\n                  onclick={() => this.attrs.onUpdateStatus!(request, 'rejected')}\n                >\n                  {app.translator.trans('withdrawal.admin.requests.reject')}\n                </Button>\n              </>\n            )}\n            {this.attrs.onDelete && (\n              <Button\n                className=\"Button Button--link\"\n                onclick={() => this.attrs.onDelete!(request)}\n              >\n                <i className=\"fas fa-trash\"></i>\n                {app.translator.trans('withdrawal.admin.requests.delete')}\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport { WithdrawalRequest } from '../types/AdminTypes';\nimport WithdrawalRequestItem from '../items/WithdrawalRequestItem';\n\nexport interface RequestManagementSectionAttrs {\n  requests: WithdrawalRequest[];\n  onUpdateRequestStatus: (request: WithdrawalRequest, status: string) => Promise<void>;\n  onDeleteRequest: (request: WithdrawalRequest) => void;\n}\n\nexport default class RequestManagementSection extends Component<RequestManagementSectionAttrs> {\n  view(): Mithril.Children {\n    const { requests, onUpdateRequestStatus, onDeleteRequest } = this.attrs;\n\n    const pendingRequests = requests.filter(r => {\n      const status = (typeof r.status === 'function' ? r.status() : r.attributes?.status) || 'pending';\n      return status === 'pending';\n    });\n    \n    const processedRequests = requests.filter(r => {\n      const status = (typeof r.status === 'function' ? r.status() : r.attributes?.status) || 'pending';\n      return status !== 'pending';\n    });\n\n    return (\n      <div className=\"WithdrawalManagementPage-section\">\n        <h3>{app.translator.trans('withdrawal.admin.requests.title')}</h3>\n        \n        <div className=\"WithdrawalManagementPage-pendingRequests\">\n          <h4>{app.translator.trans('withdrawal.admin.requests.pending_title')}</h4>\n          {pendingRequests.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.requests.no_pending')}</p>\n          ) : (\n            pendingRequests.map((request) => (\n              <WithdrawalRequestItem\n                key={typeof request.id === 'function' ? request.id() : request.id}\n                request={request}\n                showActions={true}\n                showDelete={true}\n                onUpdateStatus={onUpdateRequestStatus}\n                onDelete={onDeleteRequest}\n              />\n            ))\n          )}\n        </div>\n\n        <div className=\"WithdrawalManagementPage-processedRequests\">\n          <h4>{app.translator.trans('withdrawal.admin.requests.processed_title')}</h4>\n          {processedRequests.length === 0 ? (\n            <p>{app.translator.trans('withdrawal.admin.requests.no_processed')}</p>\n          ) : (\n            processedRequests.map((request) => (\n              <WithdrawalRequestItem\n                key={typeof request.id === 'function' ? request.id() : request.id}\n                request={request}\n                showActions={false}\n                showDelete={true}\n                onDelete={onDeleteRequest}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/admin/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\n\nexport interface ConfirmDeletePlatformModalAttrs {\n  platformName: string;\n  onConfirm: () => void;\n}\n\nexport default class ConfirmDeletePlatformModal extends Modal<ConfirmDeletePlatformModalAttrs> {\n  className() {\n    return 'ConfirmDeleteModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('withdrawal.admin.platforms.delete_confirm_title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <p>{app.translator.trans('withdrawal.admin.platforms.delete_confirm_message', { name: this.attrs.platformName })}</p>\n        <div className=\"Form-group\">\n          <Button \n            className=\"Button Button--primary\" \n            onclick={this.confirm.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.platforms.delete_confirm_button')}\n          </Button>\n          <Button \n            className=\"Button\" \n            onclick={this.hide.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.platforms.delete_cancel_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  confirm() {\n    this.attrs.onConfirm();\n    app.modal.close();\n  }\n}","import app from 'flarum/admin/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\n\nexport interface ConfirmDeleteRequestModalAttrs {\n  requestInfo: string;\n  onConfirm: () => void;\n}\n\nexport default class ConfirmDeleteRequestModal extends Modal<ConfirmDeleteRequestModalAttrs> {\n  className() {\n    return 'ConfirmDeleteRequestModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('withdrawal.admin.requests.delete_confirm_title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <p>{app.translator.trans('withdrawal.admin.requests.delete_confirm_message', { info: this.attrs.requestInfo })}</p>\n        <div className=\"Form-group\">\n          <Button \n            className=\"Button Button--danger\" \n            onclick={this.confirm.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.requests.delete_confirm_button')}\n          </Button>\n          <Button \n            className=\"Button\" \n            onclick={this.hide.bind(this)}\n          >\n            {app.translator.trans('withdrawal.admin.requests.delete_cancel_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  confirm() {\n    this.attrs.onConfirm();\n    app.modal.close();\n  }\n}","import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport type Mithril from 'mithril';\r\nimport { WithdrawalPlatform, WithdrawalRequest, User, PlatformFormData } from './types/AdminTypes';\r\nimport GeneralSettingsSection from './sections/GeneralSettingsSection';\r\nimport PlatformManagementSection from './sections/PlatformManagementSection';\r\nimport RequestManagementSection from './sections/RequestManagementSection';\r\nimport ConfirmDeletePlatformModal from './modals/ConfirmDeletePlatformModal';\r\nimport ConfirmDeleteRequestModal from './modals/ConfirmDeleteRequestModal';\r\n\r\nexport default class WithdrawalManagementPage extends ExtensionPage {\r\n  private platforms: WithdrawalPlatform[] = [];\r\n  private requests: WithdrawalRequest[] = [];\r\n  private users: { [key: number]: User } = {};\r\n  private loading = true;\r\n  private submittingPlatform = false;\r\n\r\n  oninit(vnode: Mithril.VnodeDOM) {\r\n    super.oninit(vnode);\r\n    this.loadData();\r\n  }\r\n\r\n  content() {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"WithdrawalManagementPage\">\r\n        <div className=\"container\">\r\n          <h2>{app.translator.trans('withdrawal.admin.page.title')}</h2>\r\n          \r\n          <GeneralSettingsSection onSettingChange={this.saveSetting.bind(this)} />\r\n          \r\n          <PlatformManagementSection\r\n            platforms={this.platforms}\r\n            submittingPlatform={this.submittingPlatform}\r\n            onAddPlatform={this.addPlatform.bind(this)}\r\n            onTogglePlatformStatus={this.togglePlatformStatus.bind(this)}\r\n            onDeletePlatform={this.deletePlatform.bind(this)}\r\n          />\r\n          \r\n          <RequestManagementSection\r\n            requests={this.requests}\r\n            onUpdateRequestStatus={this.updateRequestStatus.bind(this)}\r\n            onDeleteRequest={this.deleteRequest.bind(this)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  private async addPlatform(formData: PlatformFormData): Promise<void> {\r\n    if (this.submittingPlatform) return;\r\n\r\n    this.submittingPlatform = true;\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/withdrawal-platforms',\r\n        body: {\r\n          data: {\r\n            type: 'withdrawal-platforms',\r\n            attributes: {\r\n              name: formData.name,\r\n              symbol: formData.symbol,\r\n              minAmount: parseFloat(formData.minAmount),\r\n              maxAmount: parseFloat(formData.maxAmount),\r\n              fee: parseFloat(formData.fee || '0'),\r\n              iconUrl: formData.iconUrl || null,\r\n              iconClass: formData.iconClass || null,\r\n              isActive: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (response && response.data) {\r\n        app.store.pushPayload(response);\r\n      }\r\n      \r\n      await this.loadPlatforms();\r\n      \r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.add_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding platform:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.add_error')\r\n      );\r\n    } finally {\r\n      this.submittingPlatform = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async togglePlatformStatus(platform: WithdrawalPlatform): Promise<void> {\r\n    try {\r\n      const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n      const currentStatus = (typeof platform.isActive === 'function' ? platform.isActive() : platform.attributes?.isActive) ?? false;\r\n      const record = app.store.getById('withdrawal-platforms', platformId);\r\n      \r\n      if (record) {\r\n        await record.save({ isActive: !currentStatus });\r\n        await this.loadPlatforms();\r\n        \r\n        app.alerts.show(\r\n          { type: 'success', dismissible: true },\r\n          app.translator.trans(`withdrawal.admin.platforms.${!currentStatus ? 'enable' : 'disable'}_success`)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling platform status:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.platforms.toggle_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private deletePlatform(platform: WithdrawalPlatform): void {\r\n    const platformName = (typeof platform.name === 'function' ? platform.name() : platform.attributes?.name) || 'Unknown Platform';\r\n    \r\n    app.modal.show(ConfirmDeletePlatformModal, {\r\n      platformName: platformName,\r\n      onConfirm: async () => {\r\n        try {\r\n          const platformId = typeof platform.id === 'function' ? platform.id() : platform.id;\r\n          const record = app.store.getById('withdrawal-platforms', platformId);\r\n          if (record) {\r\n            await record.delete();\r\n            await this.loadPlatforms();\r\n            \r\n            app.alerts.show(\r\n              { type: 'success', dismissible: true },\r\n              app.translator.trans('withdrawal.admin.platforms.delete_success')\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting platform:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.platforms.delete_error')\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async updateRequestStatus(request: WithdrawalRequest, status: string): Promise<void> {\r\n    try {\r\n      const requestId = typeof request.id === 'function' ? request.id() : request.id;\r\n      const record = app.store.getById('withdrawal-requests', requestId);\r\n      if (record) {\r\n        await record.save({ status });\r\n        await this.loadRequests();\r\n        \r\n        app.alerts.show(\r\n          { type: 'success', dismissible: true },\r\n          app.translator.trans(`withdrawal.admin.requests.${status}_success`)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating request:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.admin.requests.update_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private deleteRequest(request: WithdrawalRequest): void {\r\n    const requestId = typeof request.id === 'function' ? request.id() : request.id;\r\n    const amount = typeof request.amount === 'function' ? request.amount() : (request.attributes?.amount || 0);\r\n    \r\n    // Get user name for display in confirmation\r\n    let userName = 'Unknown User';\r\n    if (typeof request.user === 'function') {\r\n      const userData = request.user();\r\n      if (userData && typeof userData.displayName === 'function') {\r\n        userName = userData.displayName();\r\n      } else if (userData && userData.attributes?.displayName) {\r\n        userName = userData.attributes.displayName;\r\n      }\r\n    }\r\n    \r\n    app.modal.show(ConfirmDeleteRequestModal, {\r\n      requestInfo: `${userName} - ${amount}`,\r\n      onConfirm: async () => {\r\n        try {\r\n          const record = app.store.getById('withdrawal-requests', requestId);\r\n          if (record) {\r\n            await record.delete();\r\n            await this.loadRequests();\r\n            \r\n            app.alerts.show(\r\n              { type: 'success', dismissible: true },\r\n              app.translator.trans('withdrawal.admin.requests.delete_success')\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting request:', error);\r\n          app.alerts.show(\r\n            { type: 'error', dismissible: true },\r\n            app.translator.trans('withdrawal.admin.requests.delete_error')\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async loadData(): Promise<void> {\r\n    try {\r\n      // Load platforms first to ensure they're in the store\r\n      await this.loadPlatforms();\r\n      // Then load requests which reference platforms\r\n      await this.loadRequests();\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async loadPlatforms(): Promise<void> {\r\n    try {\r\n      const response = await app.store.find('withdrawal-platforms');\r\n      this.platforms = Array.isArray(response) ? response.filter(p => p !== null) : (response ? [response] : []);\r\n      \r\n      console.log('Loaded platforms:', this.platforms);\r\n    } catch (error) {\r\n      console.error('Error loading platforms:', error);\r\n      this.platforms = [];\r\n    }\r\n  }\r\n\r\n  private async loadRequests(): Promise<void> {\r\n    try {\r\n      const response = await app.store.find('withdrawal-requests', {\r\n        include: 'user,platform'\r\n      });\r\n      this.requests = Array.isArray(response) ? response.filter(r => r !== null) : (response ? [response] : []);\r\n      \r\n      console.log('Loaded requests:', this.requests);\r\n    } catch (error) {\r\n      console.error('Error loading requests:', error);\r\n      this.requests = [];\r\n    }\r\n    \r\n    // Load user data for each request - skip if no requests\r\n    if (this.requests.length === 0) {\r\n      return;\r\n    }\r\n    \r\n    const userIds = [...new Set(this.requests\r\n      .map(r => {\r\n        // Check both data.relationships and direct relationships structures\r\n        const userRelation = r?.data?.relationships?.user?.data || r?.relationships?.user?.data;\r\n        if (userRelation) {\r\n          return userRelation.id;\r\n        }\r\n        return null;\r\n      })\r\n      .filter(id => id !== null && id !== undefined)\r\n    )];\r\n    const usersToLoad = userIds.filter(userId => !this.users[userId]);\r\n    \r\n    if (usersToLoad.length > 0) {\r\n      try {\r\n        const userPromises = usersToLoad.map(userId => \r\n          app.store.find('users', userId).catch(error => {\r\n            console.error(`Error loading user ${userId}:`, error);\r\n            return null;\r\n          })\r\n        );\r\n        \r\n        const loadedUsers = await Promise.all(userPromises);\r\n        \r\n        usersToLoad.forEach((userId, index) => {\r\n          if (loadedUsers[index]) {\r\n            this.users[userId] = loadedUsers[index];\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading users:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async saveSetting(key: string, value: string): Promise<void> {\r\n    try {\r\n      await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/settings',\r\n        body: { [key]: value }\r\n      });\r\n      \r\n      // Update the forum attribute immediately so the UI reflects the change\r\n      app.forum.pushAttributes({ [key]: value });\r\n      \r\n    } catch (error) {\r\n      console.error('Error saving setting:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        'Failed to save setting'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n","import Model from 'flarum/common/Model';\r\n\r\n/**\r\n * WithdrawalPlatform model for Flarum\r\n * \r\n * This model represents a withdrawal platform that users can use\r\n * to withdraw their virtual currency.\r\n */\r\nexport default class WithdrawalPlatform extends Model {\r\n  // Basic attributes\r\n  name = Model.attribute<string>('name');\r\n  symbol = Model.attribute<string>('symbol');\r\n  minAmount = Model.attribute<number>('minAmount');\r\n  maxAmount = Model.attribute<number>('maxAmount');\r\n  fee = Model.attribute<number>('fee');\r\n  \r\n  // Optional attributes\r\n  iconUrl = Model.attribute<string | null>('iconUrl');\r\n  iconClass = Model.attribute<string | null>('iconClass');\r\n  \r\n  // Status\r\n  isActive = Model.attribute<boolean>('isActive');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-platforms/${this.id()}`;\r\n  }\r\n  \r\n  // Helper methods\r\n  displayName(): string {\r\n    const symbol = this.symbol();\r\n    const name = this.name();\r\n    return symbol ? `${name} (${symbol})` : name;\r\n  }\r\n  \r\n  isValidAmount(amount: number): boolean {\r\n    const min = this.minAmount();\r\n    const max = this.maxAmount();\r\n    return amount >= min && amount <= max;\r\n  }\r\n  \r\n  getTotalCost(amount: number): number {\r\n    return amount + this.fee();\r\n  }\r\n}","/**\r\n * Shared type definitions for the Withdrawal extension\r\n */\r\n\r\n/**\r\n * Withdrawal platform data structure\r\n */\r\nexport interface WithdrawalPlatformData {\r\n  id: string | number;\r\n  name: string;\r\n  symbol: string;\r\n  minAmount: number;\r\n  maxAmount: number;\r\n  fee: number;\r\n  iconUrl?: string | null;\r\n  iconClass?: string | null;\r\n  isActive: boolean;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * Withdrawal request data structure\r\n */\r\nexport interface WithdrawalRequestData {\r\n  id: string | number;\r\n  amount: number;\r\n  accountDetails: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  platformId: number;\r\n  userId: number;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * User withdrawal data extension\r\n */\r\nexport interface UserWithdrawalData {\r\n  money?: number;\r\n  withdrawalRequests?: WithdrawalRequestData[];\r\n}\r\n\r\n/**\r\n * API response structures\r\n */\r\nexport interface ApiSuccessResponse<T = any> {\r\n  data: T;\r\n}\r\n\r\nexport interface ApiErrorResponse {\r\n  errors: Array<{\r\n    status: string;\r\n    code: string;\r\n    title: string;\r\n    detail?: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Form validation errors\r\n */\r\nexport interface ValidationErrors {\r\n  [field: string]: string[];\r\n}\r\n\r\n/**\r\n * Configuration constants\r\n */\r\nexport const WITHDRAWAL_STATUS = {\r\n  PENDING: 'pending',\r\n  APPROVED: 'approved',\r\n  REJECTED: 'rejected',\r\n} as const;\r\n\r\nexport type WithdrawalStatus = typeof WITHDRAWAL_STATUS[keyof typeof WITHDRAWAL_STATUS];\r\n\r\n/**\r\n * Default values\r\n */\r\nexport const DEFAULT_MIN_AMOUNT = 0.001;\r\nexport const DEFAULT_MAX_AMOUNT = 10;\r\nexport const DEFAULT_FEE = 0.0005;\r\n\r\n/**\r\n * Helper type guards\r\n */\r\nexport function isWithdrawalPlatform(obj: any): obj is WithdrawalPlatformData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'name' in obj &&\r\n    'symbol' in obj &&\r\n    'minAmount' in obj &&\r\n    'maxAmount' in obj;\r\n}\r\n\r\nexport function isWithdrawalRequest(obj: any): obj is WithdrawalRequestData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'amount' in obj &&\r\n    'accountDetails' in obj &&\r\n    'status' in obj &&\r\n    'platformId' in obj &&\r\n    'userId' in obj;\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport WithdrawalPlatform from './WithdrawalPlatform';\r\nimport { WithdrawalStatus, WITHDRAWAL_STATUS } from '../types';\r\n\r\n/**\r\n * WithdrawalRequest model for Flarum\r\n * \r\n * This model represents a user's withdrawal request.\r\n */\r\nexport default class WithdrawalRequest extends Model {\r\n  // Basic attributes\r\n  amount = Model.attribute<number>('amount');\r\n  accountDetails = Model.attribute<string>('accountDetails');\r\n  status = Model.attribute<WithdrawalStatus>('status');\r\n  \r\n  // Foreign keys\r\n  platformId = Model.attribute<number>('platformId');\r\n  userId = Model.attribute<number>('userId');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Relationships\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<WithdrawalPlatform>('platform');\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-requests/${this.id()}`;\r\n  }\r\n  \r\n  // Status helpers\r\n  isPending(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.PENDING;\r\n  }\r\n  \r\n  isApproved(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.APPROVED;\r\n  }\r\n  \r\n  isRejected(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.REJECTED;\r\n  }\r\n  \r\n  canBeModified(): boolean {\r\n    return this.isPending();\r\n  }\r\n  \r\n  // Display helpers\r\n  statusLabel(): string {\r\n    const status = this.status();\r\n    return app.translator.trans(`withdrawal.forum.status.${status}`);\r\n  }\r\n  \r\n  statusColor(): string {\r\n    const status = this.status();\r\n    switch (status) {\r\n      case WITHDRAWAL_STATUS.APPROVED:\r\n        return 'success';\r\n      case WITHDRAWAL_STATUS.REJECTED:\r\n        return 'danger';\r\n      case WITHDRAWAL_STATUS.PENDING:\r\n      default:\r\n        return 'warning';\r\n    }\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport WithdrawalManagementPage from './components/WithdrawalManagementPage';\r\nimport WithdrawalPlatform from '../common/models/WithdrawalPlatform';\r\nimport WithdrawalRequest from '../common/models/WithdrawalRequest';\r\n\r\napp.initializers.add('wusong8899-withdrawal', () => {\r\n  // Register models in store\r\n  app.store.models['withdrawal-platforms'] = WithdrawalPlatform;\r\n  app.store.models['withdrawal-requests'] = WithdrawalRequest;\r\n\r\n  app.extensionData\r\n    .for('wusong8899-withdrawal')\r\n    .registerPage(WithdrawalManagementPage);\r\n});"],"names":["GeneralSettingsSection","Component","app","e","value","AddPlatformForm","Stream","Button","formData","PlatformListItem","platform","platformId","platformName","symbol","minAmount","maxAmount","fee","isActive","createdDate","dateDisplay","humanTime","PlatformManagementSection","platforms","submittingPlatform","onAddPlatform","onTogglePlatformStatus","onDeletePlatform","WithdrawalRequestItem","request","showActions","showDelete","requestId","amount","status","accountDetails","userName","userData","platformSymbol","statusClass","RequestManagementSection","requests","onUpdateRequestStatus","onDeleteRequest","pendingRequests","processedRequests","ConfirmDeletePlatformModal","Modal","ConfirmDeleteRequestModal","WithdrawalManagementPage","ExtensionPage","vnode","LoadingIndicator","response","error","currentStatus","record","p","r","usersToLoad","userRelation","id","userId","userPromises","loadedUsers","index","key","WithdrawalPlatform","Model","name","min","max","WITHDRAWAL_STATUS","WithdrawalRequest"],"mappings":"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"}