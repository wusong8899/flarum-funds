(function(a,y,c,q,d,v,f,n,b){"use strict";class R extends y{constructor(){super(...arguments),this.platforms=[],this.requests=[],this.users={},this.loading=!0,this.newPlatformName=v(""),this.submittingPlatform=!1}oninit(t){super.oninit(t),this.loadData()}content(){return this.loading?m(q,null):m("div",{className:"WithdrawalManagementPage"},m("div",{className:"container"},m("h2",null,a.translator.trans("withdrawal.admin.page.title")),this.renderSettings(),this.renderPlatformManagement(),this.renderRequestManagement()))}renderSettings(){return m("div",{className:"WithdrawalManagementPage-section"},m("h3",null,a.translator.trans("withdrawal.admin.settings.title")),m("div",{className:"Form"},m("div",{className:"Form-group"},m("label",null,a.translator.trans("withdrawal.admin.settings.min_amount")),this.buildSettingComponent({type:"number",setting:"withdrawal.min_amount",placeholder:"0"})),m("div",{className:"Form-group"},m("label",null,a.translator.trans("withdrawal.admin.settings.max_amount")),this.buildSettingComponent({type:"number",setting:"withdrawal.max_amount",placeholder:"10000"})),m("div",{className:"Form-group"},m("label",null,a.translator.trans("withdrawal.admin.settings.fee")),this.buildSettingComponent({type:"number",setting:"withdrawal.fee",placeholder:"0"})),m("div",{className:"Form-group"},this.submitButton())))}renderPlatformManagement(){return m("div",{className:"WithdrawalManagementPage-section"},m("h3",null,a.translator.trans("withdrawal.admin.platforms.title")),m("div",{className:"WithdrawalManagementPage-addPlatform"},m("div",{className:"Form-group"},m("input",{type:"text",className:"FormControl",placeholder:a.translator.trans("withdrawal.admin.platforms.add_placeholder"),value:this.newPlatformName(),oninput:t=>this.newPlatformName(t.target.value)}),m(c,{className:"Button Button--primary",loading:this.submittingPlatform,disabled:!this.newPlatformName(),onclick:this.addPlatform.bind(this)},a.translator.trans("withdrawal.admin.platforms.add_button")))),m("div",{className:"WithdrawalManagementPage-platformList"},this.platforms.length===0?m("p",null,a.translator.trans("withdrawal.admin.platforms.empty")):this.platforms.map(t=>this.renderPlatform(t))))}renderPlatform(t){const s=t.id(),r=t.name?t.name():"Unknown Platform",l=t.createdAt?t.createdAt():null;let o="N/A";if(l)try{o=f(l)}catch(i){console.error("Error formatting date:",i),o="Invalid Date"}return m("div",{key:s,className:"WithdrawalPlatform"},m("span",{className:"WithdrawalPlatform-name"},r),m("span",{className:"WithdrawalPlatform-date"},o),m(c,{className:"Button Button--danger",onclick:()=>this.deletePlatform(t)},a.translator.trans("withdrawal.admin.platforms.delete")))}renderRequestManagement(){const t=this.requests.filter(r=>r.status?r.status()==="pending":!1),s=this.requests.filter(r=>r.status?r.status()!=="pending":!0);return m("div",{className:"WithdrawalManagementPage-section"},m("h3",null,a.translator.trans("withdrawal.admin.requests.title")),m("div",{className:"WithdrawalManagementPage-pendingRequests"},m("h4",null,a.translator.trans("withdrawal.admin.requests.pending_title")),t.length===0?m("p",null,a.translator.trans("withdrawal.admin.requests.no_pending")):t.map(r=>this.renderRequest(r,!0))),m("div",{className:"WithdrawalManagementPage-processedRequests"},m("h4",null,a.translator.trans("withdrawal.admin.requests.processed_title")),s.length===0?m("p",null,a.translator.trans("withdrawal.admin.requests.no_processed")):s.map(r=>this.renderRequest(r,!1))))}renderRequest(t,s){const r=t.id(),l=t.amount?t.amount():0,o=t.status?t.status():"pending",i=t.accountDetails?t.accountDetails():"N/A",P=t.createdAt?t.createdAt():null;let u="Unknown User";if(t.user){const e=t.user();e&&e.displayName&&(u=e.displayName())}else if(t.relationships?.user?.data?.id){const e=this.users[t.relationships.user.data.id];e&&e.displayName&&(u=e.displayName())}let h="Unknown Platform";if(t.platform){const e=t.platform();e&&e.name&&(h=e.name())}else if(t.relationships?.platform?.data?.id){const e=this.platforms.find(D=>D.id()==t.relationships.platform.data.id);e&&e.name&&(h=e.name())}const W=`status-${o}`;let w="N/A";if(P)try{w=f(P)}catch(e){console.error("Error formatting request date:",e),w="Invalid Date"}return m("div",{key:r,className:`WithdrawalRequest ${W}`},m("div",{className:"WithdrawalRequest-info"},m("div",{className:"WithdrawalRequest-user"},m("strong",null,u)),m("div",{className:"WithdrawalRequest-details"},m("span",{className:"amount"},"$",l),m("span",{className:"platform"},h),m("span",{className:"date"},w)),m("div",{className:"WithdrawalRequest-account"},m("strong",null,a.translator.trans("withdrawal.admin.requests.account_details"),":"),m("span",null,i)),m("div",{className:"WithdrawalRequest-status"},m("span",{className:`Badge Badge--${o}`},a.translator.trans(`withdrawal.admin.requests.status.${o}`)))),s&&m("div",{className:"WithdrawalRequest-actions"},m(c,{className:"Button Button--primary",onclick:()=>this.updateRequestStatus(t,"approved")},a.translator.trans("withdrawal.admin.requests.approve")),m(c,{className:"Button Button--danger",onclick:()=>this.updateRequestStatus(t,"rejected")},a.translator.trans("withdrawal.admin.requests.reject"))))}async addPlatform(){if(!(!this.newPlatformName()||this.submittingPlatform)){this.submittingPlatform=!0;try{const t=await a.request({method:"POST",url:a.forum.attribute("apiUrl")+"/withdrawal-platforms",body:{data:{type:"withdrawal-platforms",attributes:{name:this.newPlatformName()}}}});t&&t.data&&a.store.pushPayload(t),this.newPlatformName(""),await this.loadPlatforms(),a.alerts.show(d.component({type:"success",children:a.translator.trans("withdrawal.admin.platforms.add_success")}))}catch(t){console.error("Error adding platform:",t),a.alerts.show(d.component({type:"error",children:a.translator.trans("withdrawal.admin.platforms.add_error")}))}finally{this.submittingPlatform=!1,m.redraw()}}}async deletePlatform(t){const s=t.name?t.name():"Unknown Platform";if(confirm(a.translator.trans("withdrawal.admin.platforms.delete_confirm",{name:s})))try{const r=a.store.getById("withdrawal-platforms",t.id());r&&(await r.delete(),await this.loadPlatforms(),a.alerts.show(d.component({type:"success",children:a.translator.trans("withdrawal.admin.platforms.delete_success")})))}catch(r){console.error("Error deleting platform:",r),a.alerts.show(d.component({type:"error",children:a.translator.trans("withdrawal.admin.platforms.delete_error")}))}}async updateRequestStatus(t,s){try{const r=a.store.getById("withdrawal-requests",t.id);r&&(await r.save({status:s}),await this.loadRequests(),a.alerts.show(d.component({type:"success",children:a.translator.trans(`withdrawal.admin.requests.${s}_success`)})))}catch(r){console.error("Error updating request:",r),a.alerts.show(d.component({type:"error",children:a.translator.trans("withdrawal.admin.requests.update_error")}))}}async loadData(){try{await Promise.all([this.loadPlatforms(),this.loadRequests()])}catch(t){console.error("Error loading data:",t)}finally{this.loading=!1,m.redraw()}}async loadPlatforms(){try{const t=await a.store.find("withdrawal-platforms");this.platforms=Array.isArray(t)?t.filter(s=>s!==null):t?[t]:[],console.log("Loaded platforms:",this.platforms)}catch(t){console.error("Error loading platforms:",t),this.platforms=[]}}async loadRequests(){try{const r=await a.store.find("withdrawal-requests");this.requests=Array.isArray(r)?r.filter(l=>l!==null):r?[r]:[],console.log("Loaded requests:",this.requests)}catch(r){console.error("Error loading requests:",r),this.requests=[]}const s=[...new Set(this.requests.map(r=>r.relationships.user.data.id))].filter(r=>!this.users[r]);if(s.length>0)try{const r=s.map(o=>a.store.find("users",o).catch(i=>(console.error(`Error loading user ${o}:`,i),null))),l=await Promise.all(r);s.forEach((o,i)=>{l[i]&&(this.users[o]=l[i])})}catch(r){console.error("Error loading users:",r)}}}class g extends n{constructor(){super(...arguments),this.name=n.attribute("name"),this.createdAt=n.attribute("createdAt",n.transformDate),this.updatedAt=n.attribute("updatedAt",n.transformDate)}}class p extends n{constructor(){super(...arguments),this.amount=n.attribute("amount"),this.accountDetails=n.attribute("accountDetails"),this.status=n.attribute("status"),this.createdAt=n.attribute("createdAt",n.transformDate),this.updatedAt=n.attribute("updatedAt",n.transformDate),this.user=n.hasOne("user"),this.platform=n.hasOne("withdrawal-platforms")}}new b.Store().add("withdrawal-platforms",g).add("withdrawal-requests",p),a.initializers.add("wusong8899-withdrawal",()=>{a.store.models["withdrawal-platforms"]=g,a.store.models["withdrawal-requests"]=p,a.extensionData.for("wusong8899-withdrawal").registerPage(R)})})(flarum.core.compat["admin/app"],flarum.core.compat["admin/components/ExtensionPage"],flarum.core.compat["common/components/Button"],flarum.core.compat["common/components/LoadingIndicator"],flarum.core.compat["common/components/Alert"],flarum.core.compat["common/utils/Stream"],flarum.core.compat["common/helpers/humanTime"],flarum.core.compat["common/Model"],flarum.core.compat["common/extenders"]);
//# sourceMappingURL=admin.js.map

module.exports={};