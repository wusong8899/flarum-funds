{"version":3,"file":"forum.js","sources":["../src/forum/components/withdrawal/utils/modelHelpers.ts","../src/forum/components/withdrawal/utils/constants.ts","../src/forum/components/withdrawal/common/PlatformIcon.tsx","../src/forum/components/withdrawal/forms/PlatformSelector.tsx","../src/forum/components/withdrawal/forms/AmountInput.tsx","../src/forum/components/withdrawal/forms/AddressInput.tsx","../src/forum/components/withdrawal/forms/SubmitButton.tsx","../src/forum/components/withdrawal/forms/WithdrawalForm.tsx","../src/forum/components/withdrawal/common/StatusBadge.tsx","../src/forum/components/withdrawal/history/HistoryItem.tsx","../src/forum/components/withdrawal/common/EmptyState.tsx","../src/forum/components/withdrawal/common/LoadingState.tsx","../src/forum/components/withdrawal/history/WithdrawalHistory.tsx","../src/forum/components/WithdrawalPage.tsx","../src/common/models/WithdrawalPlatform.ts","../src/common/types/index.ts","../src/common/models/WithdrawalRequest.ts","../src/forum/components/MoneyDisplay.tsx","../src/forum/utils/ConfigManager.ts","../src/forum/index.ts"],"sourcesContent":["/**\n * Helper functions for accessing Flarum model data\n * These handle both Model instances and plain object data\n */\n\n/**\n * Get ID from Flarum model or plain object\n */\nexport const getId = (obj: any): string | number => {\n  return typeof obj.id === 'function' ? obj.id() : obj.id;\n};\n\n/**\n * Get attribute value from Flarum model or plain object\n */\nexport const getAttr = (obj: any, attr: string): any => {\n  if (typeof obj[attr] === 'function') {\n    return obj[attr]();\n  }\n  return obj.attributes ? obj.attributes[attr] : obj[attr];\n};\n\n/**\n * Get string representation of ID for comparison\n */\nexport const getIdString = (obj: any): string => {\n  return String(getId(obj));\n};\n\n/**\n * Find platform by ID with proper type handling\n */\nexport const findPlatformById = (platforms: any[], platformId: string | number): any => {\n  const platformIdStr = String(platformId);\n  return platforms.find(p => {\n    const pId = getId(p);\n    return String(pId) === platformIdStr;\n  });\n};\n\n/**\n * Safe date creation from model attribute\n */\nexport const getDateFromAttr = (obj: any, attr: string): Date => {\n  const dateStr = getAttr(obj, attr);\n  return dateStr ? new Date(dateStr) : new Date();\n};","import type { StatusType, StatusClass } from '../types/interfaces';\n\n/**\n * Withdrawal request status constants\n */\nexport const WITHDRAWAL_STATUS: Record<string, StatusType> = {\n  PENDING: 'pending',\n  APPROVED: 'approved',\n  REJECTED: 'rejected',\n} as const;\n\n/**\n * Status class mapping for UI styling\n */\nexport const STATUS_CLASS_MAP: Record<StatusType, StatusClass> = {\n  pending: 'warning',\n  approved: 'success',\n  rejected: 'danger',\n} as const;\n\n/**\n * Tab types\n */\nexport const TABS = {\n  WITHDRAWAL: 'withdrawal',\n  HISTORY: 'history',\n} as const;\n\n/**\n * Default values\n */\nexport const DEFAULTS = {\n  MIN_AMOUNT: 0.001,\n  MAX_AMOUNT: 10,\n  FEE: 0.0005,\n  BALANCE_PRECISION: 8,\n} as const;\n\n/**\n * CSS class names\n */\nexport const CSS_CLASSES = {\n  WITHDRAWAL_PAGE: 'WithdrawalPage',\n  MODAL: 'WithdrawalPage-modal',\n  HEADER: 'WithdrawalPage-header',\n  TABS: 'WithdrawalPage-tabs',\n  TAB: 'WithdrawalPage-tab',\n  TAB_ACTIVE: 'active',\n  CONTENT: 'WithdrawalPage-content',\n  LOADING: 'WithdrawalPage-loading',\n  EMPTY_STATE: 'WithdrawalPage-emptyState',\n} as const;\n\n/**\n * Icon names\n */\nexport const ICONS = {\n  CLOSE: 'fas fa-times',\n  COINS: 'fas fa-coins',\n  HISTORY: 'fas fa-history',\n  BITCOIN: 'fas fa-bitcoin',\n  CHEVRON_DOWN: 'fas fa-chevron-down',\n  PASTE: 'fas fa-paste',\n  BOOKMARK: 'fas fa-bookmark',\n} as const;","import icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { ICONS } from '../utils/constants';\n\ninterface PlatformIconProps {\n  platform: WithdrawalPlatform | null;\n  className?: string;\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport default class PlatformIcon {\n  view(vnode: Mithril.Vnode<PlatformIconProps>): Mithril.Children {\n    const { platform, className = '', size = 'medium' } = vnode.attrs;\n\n    // Add null checks to prevent errors\n    if (!platform) {\n      return icon(ICONS.COINS, { className: `crypto-icon default ${className}` });\n    }\n\n    // Handle both Model instances and plain objects\n    const iconUrl = getAttr(platform, 'iconUrl');\n    const iconClass = getAttr(platform, 'iconClass');\n    const name = getAttr(platform, 'name');\n    const symbol = getAttr(platform, 'symbol');\n\n    // Size classes\n    const sizeClass = `platform-icon-${size}`;\n\n    // Priority: iconUrl > iconClass > default\n    if (iconUrl) {\n      return (\n        <img \n          src={iconUrl} \n          alt={name || 'Platform'}\n          className={`platform-icon-image ${sizeClass} ${className}`}\n          onerror={(e) => {\n            // Fallback to iconClass or default icon if image fails to load\n            const target = e.target as HTMLImageElement;\n            target.style.display = 'none';\n            const fallbackIcon = document.createElement('i');\n            const fallbackIconClass = iconClass || ICONS.COINS;\n            fallbackIcon.className = `${fallbackIconClass} crypto-icon ${className}`;\n            target.parentElement?.appendChild(fallbackIcon);\n          }}\n        />\n      );\n    }\n\n    // Use Font Awesome icon class if specified, otherwise default\n    const finalIconClass = iconClass || ICONS.COINS;\n    const finalSymbol = symbol?.toLowerCase() || 'default';\n    return icon(finalIconClass, { \n      className: `crypto-icon ${finalSymbol} ${sizeClass} ${className}` \n    });\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport PlatformIcon from '../common/PlatformIcon';\nimport { getAttr } from '../utils/modelHelpers';\nimport { ICONS } from '../utils/constants';\n\ninterface PlatformSelectorProps {\n  platforms: WithdrawalPlatform[];\n  selectedPlatform: WithdrawalPlatform | null;\n  onPlatformSelect: (platform: WithdrawalPlatform) => void;\n  onAmountChange?: () => void; // Callback when platform changes to clear amount\n}\n\ninterface PlatformSelectorState {\n  showDropdown: boolean;\n}\n\nexport default class PlatformSelector extends Component<PlatformSelectorProps, PlatformSelectorState> {\n  oninit(vnode: Mithril.Vnode<PlatformSelectorProps, PlatformSelectorState>) {\n    super.oninit(vnode);\n    this.state = {\n      showDropdown: false,\n    };\n  }\n\n  view(): Mithril.Children {\n    const { selectedPlatform } = this.attrs;\n    const { showDropdown } = this.state;\n\n    return (\n      <div className=\"WithdrawalPage-platformSelector\">\n        <div className=\"WithdrawalPage-label\">提取平台</div>\n        <div \n          className=\"WithdrawalPage-platformDropdown\" \n          onclick={() => this.toggleDropdown()}\n        >\n          <div className=\"WithdrawalPage-platformSelected\">\n            <div className=\"WithdrawalPage-platformInfo\">\n              <div className=\"WithdrawalPage-platformIcon\">\n                <PlatformIcon \n                  platform={selectedPlatform} \n                  size=\"medium\"\n                />\n              </div>\n              <div className=\"WithdrawalPage-platformDetails\">\n                <div className=\"WithdrawalPage-platformName\">\n                  {this.getPlatformName(selectedPlatform)}\n                </div>\n              </div>\n            </div>\n          </div>\n          {icon(ICONS.CHEVRON_DOWN, { className: 'WithdrawalPage-dropdownIcon' })}\n        </div>\n\n        {showDropdown && this.renderPlatformDropdown()}\n      </div>\n    );\n  }\n\n  private toggleDropdown(): void {\n    this.state.showDropdown = !this.state.showDropdown;\n  }\n\n  private getPlatformName(platform: WithdrawalPlatform | null): string {\n    if (!platform) {\n      return '请选择平台';\n    }\n    return getAttr(platform, 'name') || '请选择平台';\n  }\n\n  private renderPlatformDropdown(): Mithril.Children {\n    const { platforms } = this.attrs;\n\n    // Ensure platforms array is valid and filter out invalid items\n    const validPlatforms = (platforms || []).filter(platform => !!platform);\n\n    if (validPlatforms.length === 0) {\n      return (\n        <div className=\"WithdrawalPage-dropdownMenu\">\n          <div className=\"WithdrawalPage-dropdownItem WithdrawalPage-noData\">\n            {app.translator.trans('withdrawal.forum.no_platforms')}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"WithdrawalPage-dropdownMenu\">\n        {validPlatforms.map(platform => (\n          <div \n            key={platform.id}\n            className=\"WithdrawalPage-dropdownItem\"\n            onclick={() => this.selectPlatform(platform)}\n          >\n            <div className=\"WithdrawalPage-platformIcon\">\n              <PlatformIcon platform={platform} size=\"small\" />\n            </div>\n            <div className=\"WithdrawalPage-platformName\">\n              {getAttr(platform, 'name')}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private selectPlatform(platform: WithdrawalPlatform): void {\n    const { onPlatformSelect, onAmountChange } = this.attrs;\n    \n    onPlatformSelect(platform);\n    this.state.showDropdown = false;\n    \n    // Clear amount when switching platforms\n    if (onAmountChange) {\n      onAmountChange();\n    }\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { DEFAULTS, ICONS } from '../utils/constants';\n\ninterface AmountInputProps {\n  amount: string;\n  selectedPlatform: WithdrawalPlatform | null;\n  loadingBalance: boolean;\n  onAmountChange: (amount: string) => void;\n  onFillAllAmount: () => void;\n}\n\nexport default class AmountInput extends Component<AmountInputProps> {\n  view(): Mithril.Children {\n    const { \n      amount, \n      selectedPlatform, \n      loadingBalance,\n      onAmountChange,\n      onFillAllAmount \n    } = this.attrs;\n\n    const minAmount = this.getMinAmount(selectedPlatform);\n    const maxAmount = this.getMaxAmount(selectedPlatform);\n    const fee = this.getFee(selectedPlatform);\n\n    return (\n      <div className=\"WithdrawalPage-amountSection\">\n        <div className=\"WithdrawalPage-formGroup\">\n          <div className=\"WithdrawalPage-label\">\n            {app.translator.trans('withdrawal.forum.form.amount')}\n          </div>\n\n          <div className=\"WithdrawalPage-amountInput\">\n            <input\n              type=\"text\"\n              className=\"WithdrawalPage-input\"\n              placeholder=\"0.00000000\"\n              value={amount}\n              oninput={(e: Event) => onAmountChange((e.target as HTMLInputElement).value)}\n            />\n            <Button\n              className=\"WithdrawalPage-allButton\"\n              onclick={onFillAllAmount}\n              disabled={loadingBalance}\n            >\n              {app.translator.trans('withdrawal.forum.form.all_button')}\n            </Button>\n          </div>\n\n          <div className=\"WithdrawalPage-amountLimits\">\n            <div className=\"WithdrawalPage-limitRow\">\n              <span className=\"WithdrawalPage-limitLabel\">\n                {app.translator.trans('withdrawal.forum.limits.min_max')}\n              </span>\n              <span className=\"WithdrawalPage-limitValue\">\n                {icon(ICONS.COINS)} {minAmount} ~ {maxAmount}\n              </span>\n            </div>\n            <div className=\"WithdrawalPage-limitRow\">\n              <span className=\"WithdrawalPage-limitLabel\">\n                {app.translator.trans('withdrawal.forum.limits.fee')}\n              </span>\n              <span className=\"WithdrawalPage-limitValue\">\n                {icon(ICONS.COINS)} {fee}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private getMinAmount(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.MIN_AMOUNT;\n    return getAttr(platform, 'minAmount') || DEFAULTS.MIN_AMOUNT;\n  }\n\n  private getMaxAmount(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.MAX_AMOUNT;\n    return getAttr(platform, 'maxAmount') || DEFAULTS.MAX_AMOUNT;\n  }\n\n  private getFee(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.FEE;\n    return getAttr(platform, 'fee') || DEFAULTS.FEE;\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { ICONS } from '../utils/constants';\n\ninterface AddressInputProps {\n  accountDetails: string;\n  selectedPlatform: WithdrawalPlatform | null;\n  saveAddress: boolean;\n  onAccountDetailsChange: (details: string) => void;\n  onSaveAddressToggle: (save: boolean) => void;\n}\n\nexport default class AddressInput extends Component<AddressInputProps> {\n  view(): Mithril.Children {\n    const { \n      accountDetails, \n      selectedPlatform, \n      saveAddress,\n      onAccountDetailsChange,\n      onSaveAddressToggle\n    } = this.attrs;\n\n    const symbol = this.getSymbol(selectedPlatform);\n\n    return (\n      <div className=\"WithdrawalPage-addressSection\">\n        <div className=\"WithdrawalPage-formGroup\">\n          <div className=\"WithdrawalPage-addressHeader\">\n            <span className=\"WithdrawalPage-label\">\n              {app.translator.trans('withdrawal.forum.form.address', { symbol })}\n              <span className=\"WithdrawalPage-required\">*</span>\n            </span>\n            <div \n              className=\"WithdrawalPage-saveAddress\" \n              onclick={() => onSaveAddressToggle(!saveAddress)}\n            >\n              {icon(ICONS.BOOKMARK)}\n              {app.translator.trans('withdrawal.forum.form.save_address')}\n            </div>\n          </div>\n\n          <div className=\"WithdrawalPage-addressInput\">\n            <input\n              type=\"text\"\n              className=\"WithdrawalPage-input\"\n              placeholder={app.translator.trans('withdrawal.forum.form.address_placeholder')}\n              value={accountDetails}\n              oninput={(e: Event) => onAccountDetailsChange((e.target as HTMLInputElement).value)}\n            />\n            <button \n              className=\"WithdrawalPage-pasteButton\" \n              onclick={() => this.pasteFromClipboard()}\n            >\n              {icon(ICONS.PASTE)}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private getSymbol(platform: WithdrawalPlatform | null): string {\n    if (!platform) return '';\n    return getAttr(platform, 'symbol') || '';\n  }\n\n  private async pasteFromClipboard(): Promise<void> {\n    const { onAccountDetailsChange } = this.attrs;\n    \n    try {\n      if (navigator.clipboard && navigator.clipboard.readText) {\n        const text = await navigator.clipboard.readText();\n        onAccountDetailsChange(text.trim());\n        m.redraw();\n      }\n    } catch (error) {\n      console.error('Failed to read from clipboard:', error);\n      app.alerts.show({\n        type: 'error',\n        dismissible: true\n      }, app.translator.trans('withdrawal.forum.clipboard_error'));\n    }\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { DEFAULTS } from '../utils/constants';\n\ninterface SubmitButtonProps {\n  amount: string;\n  selectedPlatform: WithdrawalPlatform | null;\n  accountDetails: string;\n  submitting: boolean;\n  canSubmit: boolean;\n  onSubmit: () => void;\n}\n\nexport default class SubmitButton extends Component<SubmitButtonProps> {\n  view(): Mithril.Children {\n    const { \n      amount, \n      selectedPlatform, \n      submitting, \n      canSubmit, \n      onSubmit \n    } = this.attrs;\n\n    const numericAmount = parseFloat(amount) || 0;\n    const fee = this.getFee(selectedPlatform);\n    const finalAmount = Math.max(0, numericAmount - fee);\n    const symbol = this.getSymbol(selectedPlatform);\n\n    return (\n      <div className=\"WithdrawalPage-submitSection\">\n        <Button\n          className=\"WithdrawalPage-submitButton\"\n          loading={submitting}\n          disabled={!canSubmit}\n          onclick={onSubmit}\n        >\n          {app.translator.trans('withdrawal.forum.form.submit')}\n        </Button>\n\n        {numericAmount > 0 && (\n          <div className=\"WithdrawalPage-finalAmount\">\n            {app.translator.trans('withdrawal.forum.final_amount', { \n              amount: finalAmount.toFixed(DEFAULTS.BALANCE_PRECISION), \n              symbol \n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private getFee(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.FEE;\n    return getAttr(platform, 'fee') || DEFAULTS.FEE;\n  }\n\n  private getSymbol(platform: WithdrawalPlatform | null): string {\n    if (!platform) return '';\n    return getAttr(platform, 'symbol') || '';\n  }\n}","import Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform, WithdrawalFormData } from '../types/interfaces';\nimport PlatformSelector from './PlatformSelector';\nimport AmountInput from './AmountInput';\nimport AddressInput from './AddressInput';\nimport SubmitButton from './SubmitButton';\n\ninterface WithdrawalFormProps {\n  platforms: WithdrawalPlatform[];\n  formData: WithdrawalFormData;\n  loadingBalance: boolean;\n  submitting: boolean;\n  onFormDataChange: (data: Partial<WithdrawalFormData>) => void;\n  onFillAllAmount: () => void;\n  onSubmit: () => void;\n}\n\nexport default class WithdrawalForm extends Component<WithdrawalFormProps> {\n  view(): Mithril.Children {\n    const { \n      platforms, \n      formData, \n      loadingBalance,\n      submitting,\n      onFormDataChange,\n      onFillAllAmount,\n      onSubmit \n    } = this.attrs;\n\n    return [\n      <PlatformSelector \n        platforms={platforms}\n        selectedPlatform={formData.selectedPlatform}\n        onPlatformSelect={(platform) => onFormDataChange({ selectedPlatform: platform })}\n        onAmountChange={() => onFormDataChange({ amount: '' })}\n      />,\n      \n      <AmountInput \n        amount={formData.amount}\n        selectedPlatform={formData.selectedPlatform}\n        loadingBalance={loadingBalance}\n        onAmountChange={(amount) => onFormDataChange({ amount })}\n        onFillAllAmount={onFillAllAmount}\n      />,\n      \n      <AddressInput \n        accountDetails={formData.accountDetails}\n        selectedPlatform={formData.selectedPlatform}\n        saveAddress={formData.saveAddress}\n        onAccountDetailsChange={(accountDetails) => onFormDataChange({ accountDetails })}\n        onSaveAddressToggle={(saveAddress) => onFormDataChange({ saveAddress })}\n      />,\n      \n      <SubmitButton \n        amount={formData.amount}\n        selectedPlatform={formData.selectedPlatform}\n        accountDetails={formData.accountDetails}\n        submitting={submitting}\n        canSubmit={this.canSubmit()}\n        onSubmit={onSubmit}\n      />\n    ];\n  }\n\n  private canSubmit(): boolean {\n    const { formData, submitting } = this.attrs;\n    const { selectedPlatform, amount, accountDetails } = formData;\n\n    return !!(\n      selectedPlatform &&\n      amount &&\n      accountDetails &&\n      !submitting &&\n      parseFloat(amount) > 0\n    );\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { StatusType } from '../types/interfaces';\nimport { STATUS_CLASS_MAP } from '../utils/constants';\n\ninterface StatusBadgeProps {\n  status: StatusType;\n  className?: string;\n}\n\nexport default class StatusBadge extends Component<StatusBadgeProps> {\n  view(): Mithril.Children {\n    const { status, className = '' } = this.attrs;\n    \n    const statusClass = this.getStatusClass(status);\n    const statusLabel = this.getStatusLabel(status);\n\n    return (\n      <div className={`WithdrawalPage-historyStatus ${statusClass} ${className}`}>\n        {statusLabel}\n      </div>\n    );\n  }\n\n  private getStatusClass(status: StatusType): string {\n    return STATUS_CLASS_MAP[status] || STATUS_CLASS_MAP.pending;\n  }\n\n  private getStatusLabel(status: StatusType): string {\n    return app.translator.trans(`withdrawal.forum.status.${status}`);\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform, WithdrawalRequest, StatusType } from '../types/interfaces';\nimport PlatformIcon from '../common/PlatformIcon';\nimport StatusBadge from '../common/StatusBadge';\nimport { getAttr, findPlatformById, getDateFromAttr, getIdString } from '../utils/modelHelpers';\n\ninterface HistoryItemProps {\n  request: WithdrawalRequest;\n  platforms: WithdrawalPlatform[];\n}\n\nexport default class HistoryItem extends Component<HistoryItemProps> {\n  view(): Mithril.Children {\n    const { request, platforms } = this.attrs;\n\n    // Add null checks and handle both Model instances and plain objects\n    if (!request) {\n      return null;\n    }\n\n    const platformId = this.getPlatformId(request);\n    const platform = findPlatformById(platforms, platformId);\n    \n    const status = (getAttr(request, 'status') || 'pending') as StatusType;\n    const date = getDateFromAttr(request, 'createdAt');\n    const amount = getAttr(request, 'amount') || 0;\n    const accountDetails = getAttr(request, 'accountDetails') || '';\n\n    console.log('Looking for platform with ID:', platformId, 'Available platforms:', platforms.map(p => ({ id: getIdString(p), name: getAttr(p, 'name') })));\n\n    return (\n      <div key={getIdString(request)} className=\"WithdrawalPage-historyItem\">\n        <div className=\"WithdrawalPage-historyHeader\">\n          <div className=\"WithdrawalPage-historyPlatform\">\n            <div className=\"WithdrawalPage-platformIcon\">\n              <PlatformIcon platform={platform} size=\"small\" />\n            </div>\n            <div className=\"WithdrawalPage-historyInfo\">\n              <div className=\"WithdrawalPage-historyPlatformName\">\n                {this.getPlatformName(platform)}\n              </div>\n              <div className=\"WithdrawalPage-historyDate\">\n                {date.toLocaleDateString()} {date.toLocaleTimeString()}\n              </div>\n            </div>\n          </div>\n          <StatusBadge status={status} />\n        </div>\n        <div className=\"WithdrawalPage-historyDetails\">\n          <div className=\"WithdrawalPage-historyAmount\">\n            <span className=\"WithdrawalPage-historyLabel\">\n              {app.translator.trans('withdrawal.forum.history.amount')}:\n            </span>\n            <span className=\"WithdrawalPage-historyValue\">\n              {amount} {this.getPlatformSymbol(platform)}\n            </span>\n          </div>\n          <div className=\"WithdrawalPage-historyAddress\">\n            <span className=\"WithdrawalPage-historyLabel\">\n              {app.translator.trans('withdrawal.forum.history.address')}:\n            </span>\n            <span className=\"WithdrawalPage-historyValue\">\n              {accountDetails}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private getPlatformId(request: WithdrawalRequest): string | number {\n    return getAttr(request, 'platformId') || \n           (request.relationships?.platform?.data?.id) || '';\n  }\n\n  private getPlatformName(platform: WithdrawalPlatform | null): string {\n    if (!platform) return 'Unknown Platform';\n    return getAttr(platform, 'name') || 'Unknown Platform';\n  }\n\n  private getPlatformSymbol(platform: WithdrawalPlatform | null): string {\n    if (!platform) return '';\n    return getAttr(platform, 'symbol') || '';\n  }\n}","import Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\n\ninterface EmptyStateProps {\n  iconName: string;\n  title: string;\n  description: string;\n  className?: string;\n}\n\nexport default class EmptyState extends Component<EmptyStateProps> {\n  view(): Mithril.Children {\n    const { iconName, title, description, className = '' } = this.attrs;\n    \n    return (\n      <div className={`WithdrawalPage-emptyState ${className}`}>\n        <div className=\"WithdrawalPage-emptyIcon\">\n          {icon(iconName)}\n        </div>\n        <h3 className=\"WithdrawalPage-emptyTitle\">\n          {title}\n        </h3>\n        <p className=\"WithdrawalPage-emptyDescription\">\n          {description}\n        </p>\n      </div>\n    );\n  }\n}","import LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport type Mithril from 'mithril';\n\ninterface LoadingStateProps {\n  className?: string;\n}\n\nexport default function LoadingState(props: LoadingStateProps): Mithril.Children {\n  const { className = '' } = props;\n  \n  return (\n    <div className={`WithdrawalPage-loading ${className}`}>\n      <LoadingIndicator />\n    </div>\n  );\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform, WithdrawalRequest } from '../types/interfaces';\nimport HistoryItem from './HistoryItem';\nimport EmptyState from '../common/EmptyState';\nimport LoadingState from '../common/LoadingState';\n\ninterface WithdrawalHistoryProps {\n  requests: WithdrawalRequest[];\n  platforms: WithdrawalPlatform[];\n  loading: boolean;\n}\n\nexport default class WithdrawalHistory extends Component<WithdrawalHistoryProps> {\n  view(): Mithril.Children {\n    const { requests, platforms, loading } = this.attrs;\n\n    if (loading) {\n      return <LoadingState className=\"WithdrawalPage-historyLoading\" />;\n    }\n\n    if (!requests || requests.length === 0) {\n      return (\n        <EmptyState\n          iconName=\"fas fa-history\"\n          title={app.translator.trans('withdrawal.forum.history.empty.title')}\n          description={app.translator.trans('withdrawal.forum.history.empty.description')}\n          className=\"WithdrawalPage-historyEmpty\"\n        />\n      );\n    }\n\n    return (\n      <div className=\"WithdrawalPage-historyList\">\n        {requests.map(request => (\n          <HistoryItem\n            key={this.getRequestKey(request)}\n            request={request}\n            platforms={platforms}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  private getRequestKey(request: WithdrawalRequest): string {\n    // Handle both Flarum Model instances and plain objects\n    if (typeof request.id === 'function') {\n      return `request-${request.id()}`;\n    }\n    return `request-${request.id || Math.random()}`;\n  }\n}","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform, WithdrawalFormData, WithdrawalPageState } from './withdrawal/types/interfaces';\nimport WithdrawalForm from './withdrawal/forms/WithdrawalForm';\nimport WithdrawalHistory from './withdrawal/history/WithdrawalHistory';\nimport { getAttr, getIdString } from './withdrawal/utils/modelHelpers';\n\nexport default class WithdrawalPage extends Page {\n  private state: WithdrawalPageState = {\n    platforms: [],\n    requests: [],\n    loading: true,\n    loadingBalance: true,\n    userBalance: 0,\n    submitting: false,\n    activeTab: Stream('withdrawal')\n  };\n\n  private formData: WithdrawalFormData = {\n    amount: Stream(''),\n    selectedPlatform: Stream<WithdrawalPlatform | null>(null),\n    accountDetails: Stream(''),\n    saveAddress: Stream(false)\n  };\n\n  oninit(vnode: Mithril.VnodeDOM) {\n    super.oninit(vnode);\n\n    app.setTitle(app.translator.trans('withdrawal.forum.page.title'));\n\n    this.loadData();\n    this.loadUserBalance();\n  }\n\n  view() {\n    if (this.state.loading) {\n      return (\n        <div className=\"WithdrawalPage\">\n          <div className=\"WithdrawalPage-loading\">\n            <LoadingIndicator />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"WithdrawalPage\">\n        <div className=\"WithdrawalPage-modal\">\n          {this.renderHeader()}\n          <div className=\"WithdrawalPage-content\">\n            {this.state.activeTab() === 'withdrawal' ? this.renderWithdrawalTab() : this.renderHistoryTab()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderHeader(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalPage-header\">\n        <div className=\"WithdrawalPage-tabs\">\n          <div \n            className={`WithdrawalPage-tab ${this.state.activeTab() === 'withdrawal' ? 'active' : ''}`}\n            onclick={() => this.handleTabChange('withdrawal')}\n          >\n            {app.translator.trans('withdrawal.forum.tabs.withdrawal')}\n          </div>\n          <div \n            className={`WithdrawalPage-tab ${this.state.activeTab() === 'history' ? 'active' : ''}`}\n            onclick={() => this.handleTabChange('history')}\n          >\n            {app.translator.trans('withdrawal.forum.tabs.history')}\n          </div>\n        </div>\n        <Button\n          className=\"WithdrawalPage-close\"\n          icon=\"fas fa-times\"\n          onclick={() => app.history.back()}\n        />\n      </div>\n    );\n  }\n\n  private renderWithdrawalTab(): Mithril.Children {\n    const validPlatforms = (this.state.platforms || []).filter(platform => !!platform);\n\n    if (validPlatforms.length === 0) {\n      return (\n        <div className=\"WithdrawalPage-emptyState\">\n          <div className=\"WithdrawalPage-emptyIcon\">\n            {icon('fas fa-coins')}\n          </div>\n          <h3 className=\"WithdrawalPage-emptyTitle\">\n            {app.translator.trans('withdrawal.forum.no_platforms')}\n          </h3>\n          <p className=\"WithdrawalPage-emptyDescription\">\n            {app.translator.trans('withdrawal.forum.no_platforms_description')}\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <WithdrawalForm\n        platforms={this.state.platforms}\n        formData={this.getFormDataForComponent()}\n        loadingBalance={this.state.loadingBalance}\n        submitting={this.state.submitting}\n        onFormDataChange={this.handleFormDataChange.bind(this)}\n        onFillAllAmount={this.handleFillAllAmount.bind(this)}\n        onSubmit={this.handleSubmit.bind(this)}\n      />\n    );\n  }\n\n  private renderHistoryTab(): Mithril.Children {\n    return (\n      <WithdrawalHistory\n        requests={this.state.requests}\n        platforms={this.state.platforms}\n        loading={false}\n      />\n    );\n  }\n\n  private handleTabChange(tab: 'withdrawal' | 'history'): void {\n    this.state.activeTab(tab);\n  }\n\n  private getFormDataForComponent() {\n    return {\n      selectedPlatform: this.formData.selectedPlatform(),\n      amount: this.formData.amount(),\n      accountDetails: this.formData.accountDetails(),\n      saveAddress: this.formData.saveAddress()\n    };\n  }\n\n  private handleFormDataChange(data: Partial<WithdrawalFormData>): void {\n    if (data.selectedPlatform !== undefined) {\n      this.formData.selectedPlatform(data.selectedPlatform);\n    }\n    if (data.amount !== undefined) {\n      this.formData.amount(data.amount);\n    }\n    if (data.accountDetails !== undefined) {\n      this.formData.accountDetails(data.accountDetails);\n    }\n    if (data.saveAddress !== undefined) {\n      this.formData.saveAddress(data.saveAddress);\n    }\n  }\n\n  private handleFillAllAmount(): void {\n    const selectedPlatform = this.formData.selectedPlatform();\n    if (!selectedPlatform) return;\n\n    const fee = getAttr(selectedPlatform, 'fee') || 0;\n    const maxAmount = getAttr(selectedPlatform, 'maxAmount') || Infinity;\n    let availableAmount = this.state.userBalance - fee;\n    \n    if (maxAmount < Infinity && availableAmount > maxAmount) {\n      availableAmount = maxAmount;\n    }\n    \n    if (availableAmount > 0) {\n      this.formData.amount(availableAmount.toString());\n    }\n  }\n\n  private async handleSubmit(): Promise<void> {\n    if (this.state.submitting) return;\n\n    const selectedPlatform = this.formData.selectedPlatform();\n    const amount = this.formData.amount();\n    const accountDetails = this.formData.accountDetails();\n\n    if (!selectedPlatform || !amount || !accountDetails) {\n      return;\n    }\n\n    this.state.submitting = true;\n\n    try {\n      const response = await app.request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/withdrawal-requests',\n        body: {\n          data: {\n            type: 'withdrawal-requests',\n            attributes: {\n              platformId: getIdString(selectedPlatform),\n              amount: parseFloat(amount),\n              accountDetails,\n              saveAddress: this.formData.saveAddress()\n            }\n          }\n        }\n      });\n\n      app.store.pushPayload(response);\n\n      this.formData.amount('');\n      this.formData.accountDetails('');\n      if (!this.formData.saveAddress()) {\n        this.formData.selectedPlatform(null);\n      }\n\n      this.loadUserBalance();\n      this.loadWithdrawalRequests();\n\n      app.alerts.show(\n        { type: 'success', dismissible: true },\n        app.translator.trans('withdrawal.forum.submit_success')\n      );\n\n    } catch (error) {\n      console.error('Withdrawal request failed:', error);\n      app.alerts.show(\n        { type: 'error', dismissible: true },\n        app.translator.trans('withdrawal.forum.submit_error')\n      );\n    } finally {\n      this.state.submitting = false;\n    }\n  }\n\n  private async loadData(): Promise<void> {\n    try {\n      const [platformsResponse, requestsResponse] = await Promise.all([\n        app.request({\n          method: 'GET',\n          url: app.forum.attribute('apiUrl') + '/withdrawal-platforms'\n        }),\n        app.request({\n          method: 'GET', \n          url: app.forum.attribute('apiUrl') + '/withdrawal-requests'\n        })\n      ]);\n\n      app.store.pushPayload(platformsResponse);\n      app.store.pushPayload(requestsResponse);\n\n      this.state.platforms = app.store.all('withdrawal-platforms');\n      this.state.requests = app.store.all('withdrawal-requests');\n      this.state.loading = false;\n    } catch (error) {\n      console.error('Error loading data:', error);\n      this.state.loading = false;\n    }\n  }\n\n  private async loadUserBalance(): Promise<void> {\n    try {\n      this.state.loadingBalance = true;\n      this.state.userBalance = app.session.user?.attribute('money') || 0;\n      this.state.loadingBalance = false;\n    } catch (error) {\n      console.error('Error loading user balance:', error);\n      this.state.loadingBalance = false;\n    }\n  }\n\n  private async loadWithdrawalRequests(): Promise<void> {\n    try {\n      const response = await app.request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + '/withdrawal-requests'\n      });\n\n      app.store.pushPayload(response);\n      this.state.requests = app.store.all('withdrawal-requests');\n    } catch (error) {\n      console.error('Error loading withdrawal requests:', error);\n    }\n  }\n}\n","import Model from 'flarum/common/Model';\r\n\r\n/**\r\n * WithdrawalPlatform model for Flarum\r\n * \r\n * This model represents a withdrawal platform that users can use\r\n * to withdraw their virtual currency.\r\n */\r\nexport default class WithdrawalPlatform extends Model {\r\n  // Basic attributes\r\n  name = Model.attribute<string>('name');\r\n  symbol = Model.attribute<string>('symbol');\r\n  minAmount = Model.attribute<number>('minAmount');\r\n  maxAmount = Model.attribute<number>('maxAmount');\r\n  fee = Model.attribute<number>('fee');\r\n  \r\n  // Optional attributes\r\n  iconUrl = Model.attribute<string | null>('iconUrl');\r\n  iconClass = Model.attribute<string | null>('iconClass');\r\n  \r\n  // Status\r\n  isActive = Model.attribute<boolean>('isActive');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-platforms/${this.id()}`;\r\n  }\r\n  \r\n  // Helper methods\r\n  displayName(): string {\r\n    const symbol = this.symbol();\r\n    const name = this.name();\r\n    return symbol ? `${name} (${symbol})` : name;\r\n  }\r\n  \r\n  isValidAmount(amount: number): boolean {\r\n    const min = this.minAmount();\r\n    const max = this.maxAmount();\r\n    return amount >= min && amount <= max;\r\n  }\r\n  \r\n  getTotalCost(amount: number): number {\r\n    return amount + this.fee();\r\n  }\r\n}","/**\r\n * Shared type definitions for the Withdrawal extension\r\n */\r\n\r\n/**\r\n * Withdrawal platform data structure\r\n */\r\nexport interface WithdrawalPlatformData {\r\n  id: string | number;\r\n  name: string;\r\n  symbol: string;\r\n  minAmount: number;\r\n  maxAmount: number;\r\n  fee: number;\r\n  iconUrl?: string | null;\r\n  iconClass?: string | null;\r\n  isActive: boolean;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * Withdrawal request data structure\r\n */\r\nexport interface WithdrawalRequestData {\r\n  id: string | number;\r\n  amount: number;\r\n  accountDetails: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  platformId: number;\r\n  userId: number;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * User withdrawal data extension\r\n */\r\nexport interface UserWithdrawalData {\r\n  money?: number;\r\n  withdrawalRequests?: WithdrawalRequestData[];\r\n}\r\n\r\n/**\r\n * API response structures\r\n */\r\nexport interface ApiSuccessResponse<T = any> {\r\n  data: T;\r\n}\r\n\r\nexport interface ApiErrorResponse {\r\n  errors: Array<{\r\n    status: string;\r\n    code: string;\r\n    title: string;\r\n    detail?: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Form validation errors\r\n */\r\nexport interface ValidationErrors {\r\n  [field: string]: string[];\r\n}\r\n\r\n/**\r\n * Configuration constants\r\n */\r\nexport const WITHDRAWAL_STATUS = {\r\n  PENDING: 'pending',\r\n  APPROVED: 'approved',\r\n  REJECTED: 'rejected',\r\n} as const;\r\n\r\nexport type WithdrawalStatus = typeof WITHDRAWAL_STATUS[keyof typeof WITHDRAWAL_STATUS];\r\n\r\n/**\r\n * Default values\r\n */\r\nexport const DEFAULT_MIN_AMOUNT = 0.001;\r\nexport const DEFAULT_MAX_AMOUNT = 10;\r\nexport const DEFAULT_FEE = 0.0005;\r\n\r\n/**\r\n * Helper type guards\r\n */\r\nexport function isWithdrawalPlatform(obj: any): obj is WithdrawalPlatformData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'name' in obj &&\r\n    'symbol' in obj &&\r\n    'minAmount' in obj &&\r\n    'maxAmount' in obj;\r\n}\r\n\r\nexport function isWithdrawalRequest(obj: any): obj is WithdrawalRequestData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'amount' in obj &&\r\n    'accountDetails' in obj &&\r\n    'status' in obj &&\r\n    'platformId' in obj &&\r\n    'userId' in obj;\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport WithdrawalPlatform from './WithdrawalPlatform';\r\nimport { WithdrawalStatus, WITHDRAWAL_STATUS } from '../types';\r\n\r\n/**\r\n * WithdrawalRequest model for Flarum\r\n * \r\n * This model represents a user's withdrawal request.\r\n */\r\nexport default class WithdrawalRequest extends Model {\r\n  // Basic attributes\r\n  amount = Model.attribute<number>('amount');\r\n  accountDetails = Model.attribute<string>('accountDetails');\r\n  status = Model.attribute<WithdrawalStatus>('status');\r\n  \r\n  // Foreign keys\r\n  platformId = Model.attribute<number>('platformId');\r\n  userId = Model.attribute<number>('userId');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Relationships\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<WithdrawalPlatform>('platform');\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-requests/${this.id()}`;\r\n  }\r\n  \r\n  // Status helpers\r\n  isPending(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.PENDING;\r\n  }\r\n  \r\n  isApproved(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.APPROVED;\r\n  }\r\n  \r\n  isRejected(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.REJECTED;\r\n  }\r\n  \r\n  canBeModified(): boolean {\r\n    return this.isPending();\r\n  }\r\n  \r\n  // Display helpers\r\n  statusLabel(): string {\r\n    const status = this.status();\r\n    return app.translator.trans(`withdrawal.forum.status.${status}`);\r\n  }\r\n  \r\n  statusColor(): string {\r\n    const status = this.status();\r\n    switch (status) {\r\n      case WITHDRAWAL_STATUS.APPROVED:\r\n        return 'success';\r\n      case WITHDRAWAL_STATUS.REJECTED:\r\n        return 'danger';\r\n      case WITHDRAWAL_STATUS.PENDING:\r\n      default:\r\n        return 'warning';\r\n    }\r\n  }\r\n}","import Component, { ComponentAttrs } from 'flarum/common/Component';\nimport app from 'flarum/forum/app';\nimport type Mithril from 'mithril';\n\n/**\n * MoneyDisplay component shows the user's money balance with withdrawal button\n */\nexport default class MoneyDisplay extends Component<ComponentAttrs> {\n  view(): Mithril.Children {\n    if (!app.session.user) {\n      return null;\n    }\n\n    const moneyName = app.forum.attribute('antoinefr-money.moneyname') || '[money]';\n    const userMoneyText = moneyName.replace('[money]', app.session.user.attribute(\"money\"));\n\n    return (\n      <div\n        id=\"moneyDisplayContainer\"\n        className=\"client1-header-adv-wrapper clientCustomizeWithdrawalHeaderTotalMoney\"\n      >\n        <div className=\"clientCustomizeWithdrawalHeaderText\">\n          <span>\n            <i className=\"fab fa-bitcoin\" style={{ paddingRight: '8px', color: 'gold' }} />\n          </span>\n          {userMoneyText}\n        </div>\n        \n        <div className=\"clientCustomizeWithdrawalHeaderIcon\">\n          <i className=\"fas fa-wallet\" />\n        </div>\n\n        <div\n          className=\"clientCustomizeWithdrawalButton\"\n          onclick={this.handleWithdrawalClick.bind(this)}\n          title=\"提款\"\n        >\n          <i className=\"fas fa-money-bill-transfer\" />\n          <span style={{ marginLeft: '4px', fontSize: '12px' }}>提款</span>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Handle withdrawal button click\n   */\n  private handleWithdrawalClick(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    // Navigate to withdrawal page\n    window.location.href = '/withdrawal';\n  }\n}","import app from 'flarum/forum/app';\n\n/**\n * ConfigManager utility for flarum-withdrawal extension\n */\nexport class ConfigManager {\n  private static instance: ConfigManager;\n\n  private constructor() {}\n\n  public static getInstance(): ConfigManager {\n    if (!ConfigManager.instance) {\n      ConfigManager.instance = new ConfigManager();\n    }\n    return ConfigManager.instance;\n  }\n\n  /**\n   * Check if current page is the tags page (main forum page)\n   */\n  public isTagsPage(): boolean {\n    try {\n      const routeName = app.current?.get('routeName');\n      return routeName === 'index';\n    } catch {\n      return false;\n    }\n  }\n}","import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport LinkButton from 'flarum/common/components/LinkButton';\r\nimport ItemList from 'flarum/common/utils/ItemList';\r\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\r\nimport HeaderPrimary from 'flarum/forum/components/HeaderPrimary';\r\nimport WithdrawalPage from './components/WithdrawalPage';\r\nimport WithdrawalPlatform from '../common/models/WithdrawalPlatform';\r\nimport WithdrawalRequest from '../common/models/WithdrawalRequest';\r\nimport MoneyDisplay from './components/MoneyDisplay';\r\nimport { ConfigManager } from './utils/ConfigManager';\r\n\r\napp.initializers.add('wusong8899-withdrawal', () => {\r\n  // Register models in store\r\n  app.store.models['withdrawal-platforms'] = WithdrawalPlatform;\r\n  app.store.models['withdrawal-requests'] = WithdrawalRequest;\r\n  \r\n  app.routes.withdrawal = { path: '/withdrawal', component: WithdrawalPage };\r\n\r\n  extend(HeaderSecondary.prototype, 'items', function (items: ItemList<any>) {\r\n    if (app.session.user) {\r\n      items.add(\r\n        'withdrawal',\r\n        LinkButton.component(\r\n          {\r\n            href: app.route('withdrawal'),\r\n            icon: 'fas fa-money-bill-transfer',\r\n          },\r\n          app.translator.trans('withdrawal.forum.header.withdrawal_button')\r\n        ),\r\n        10\r\n      );\r\n    }\r\n  });\r\n\r\n  // Add money display to header primary\r\n  extend(HeaderPrimary.prototype, 'view', function (vnode) {\r\n    // Only add on tags page for logged-in users\r\n    const configManager = ConfigManager.getInstance();\r\n    if (app.session.user && configManager.isTagsPage()) {\r\n      // Add money display to the header primary view\r\n      vnode.children.push(MoneyDisplay.component());\r\n    }\r\n  });\r\n});"],"names":["getId","obj","getAttr","attr","getIdString","findPlatformById","platforms","platformId","platformIdStr","p","pId","getDateFromAttr","dateStr","STATUS_CLASS_MAP","DEFAULTS","ICONS","PlatformIcon","vnode","platform","className","size","icon","iconUrl","iconClass","name","symbol","sizeClass","e","target","fallbackIcon","fallbackIconClass","finalIconClass","finalSymbol","PlatformSelector","Component","selectedPlatform","showDropdown","validPlatforms","app","onPlatformSelect","onAmountChange","AmountInput","amount","loadingBalance","onFillAllAmount","minAmount","maxAmount","fee","Button","AddressInput","accountDetails","saveAddress","onAccountDetailsChange","onSaveAddressToggle","text","error","SubmitButton","submitting","canSubmit","onSubmit","numericAmount","finalAmount","WithdrawalForm","formData","onFormDataChange","StatusBadge","status","statusClass","statusLabel","HistoryItem","request","date","EmptyState","iconName","title","description","LoadingState","props","LoadingIndicator","WithdrawalHistory","requests","loading","WithdrawalPage","Page","Stream","tab","data","availableAmount","response","platformsResponse","requestsResponse","WithdrawalPlatform","Model","min","max","WITHDRAWAL_STATUS","WithdrawalRequest","MoneyDisplay","userMoneyText","ConfigManager","extend","HeaderSecondary","items","LinkButton","HeaderPrimary","configManager"],"mappings":"gDAQO,MAAMA,EAASC,GACb,OAAOA,EAAI,IAAO,WAAaA,EAAI,GAAA,EAAOA,EAAI,GAM1CC,EAAU,CAACD,EAAUE,IAC5B,OAAOF,EAAIE,CAAI,GAAM,WAChBF,EAAIE,CAAI,EAAA,EAEVF,EAAI,WAAaA,EAAI,WAAWE,CAAI,EAAIF,EAAIE,CAAI,EAM5CC,EAAeH,GACnB,OAAOD,EAAMC,CAAG,CAAC,EAMbI,EAAmB,CAACC,EAAkBC,IAAqC,CACtF,MAAMC,EAAgB,OAAOD,CAAU,EACvC,OAAOD,EAAU,KAAKG,GAAK,CACzB,MAAMC,EAAMV,EAAMS,CAAC,EACnB,OAAO,OAAOC,CAAG,IAAMF,CACzB,CAAC,CACH,EAKaG,EAAkB,CAACV,EAAUE,IAAuB,CAC/D,MAAMS,EAAUV,EAAQD,EAAKE,CAAI,EACjC,OAAOS,EAAU,IAAI,KAAKA,CAAO,MAAQ,IAC3C,EChCaC,EAAoD,CAC/D,QAAS,UACT,SAAU,UACV,SAAU,QACZ,EAaaC,EAAW,CACtB,WAAY,KACZ,WAAY,GACZ,IAAK,KACL,kBAAmB,CACrB,EAoBaC,EAAQ,CAEnB,MAAO,eAGP,aAAc,sBACd,MAAO,eACP,SAAU,iBACZ,ECpDA,MAAqBC,CAAa,CAChC,KAAKC,EAA2D,CAC9D,KAAM,CAAE,SAAAC,EAAU,UAAAC,EAAY,GAAI,KAAAC,EAAO,QAAA,EAAaH,EAAM,MAG5D,GAAI,CAACC,EACH,OAAOG,EAAKN,EAAM,MAAO,CAAE,UAAW,uBAAuBI,CAAS,GAAI,EAI5E,MAAMG,EAAUpB,EAAQgB,EAAU,SAAS,EACrCK,EAAYrB,EAAQgB,EAAU,WAAW,EACzCM,EAAOtB,EAAQgB,EAAU,MAAM,EAC/BO,EAASvB,EAAQgB,EAAU,QAAQ,EAGnCQ,EAAY,iBAAiBN,CAAI,GAGvC,GAAIE,EACF,OACE,EAAC,MAAA,CACC,IAAKA,EACL,IAAKE,GAAQ,WACb,UAAW,uBAAuBE,CAAS,IAAIP,CAAS,GACxD,QAAUQ,GAAM,CAEd,MAAMC,EAASD,EAAE,OACjBC,EAAO,MAAM,QAAU,OACvB,MAAMC,EAAe,SAAS,cAAc,GAAG,EACzCC,EAAoBP,GAAaR,EAAM,MAC7Cc,EAAa,UAAY,GAAGC,CAAiB,gBAAgBX,CAAS,GACtES,EAAO,eAAe,YAAYC,CAAY,CAChD,CAAA,CAAA,EAMN,MAAME,EAAiBR,GAAaR,EAAM,MACpCiB,EAAcP,GAAQ,YAAA,GAAiB,UAC7C,OAAOJ,EAAKU,EAAgB,CAC1B,UAAW,eAAeC,CAAW,IAAIN,CAAS,IAAIP,CAAS,EAAA,CAChE,CACH,CACF,CCrCA,MAAqBc,UAAyBC,CAAwD,CACpG,OAAOjB,EAAoE,CACzE,MAAM,OAAOA,CAAK,EAClB,KAAK,MAAQ,CACX,aAAc,EAAA,CAElB,CAEA,MAAyB,CACvB,KAAM,CAAE,iBAAAkB,GAAqB,KAAK,MAC5B,CAAE,aAAAC,GAAiB,KAAK,MAE9B,OACE,EAAC,OAAI,UAAU,iCAAA,IACZ,MAAA,CAAI,UAAU,wBAAuB,MAAI,EAC1C,EAAC,MAAA,CACC,UAAU,kCACV,QAAS,IAAM,KAAK,eAAA,CAAe,EAEnC,EAAC,MAAA,CAAI,UAAU,iCAAA,EACb,EAAC,MAAA,CAAI,UAAU,6BAAA,EACb,EAAC,MAAA,CAAI,UAAU,6BAAA,EACb,EAACpB,EAAA,CACC,SAAUmB,EACV,KAAK,QAAA,CAAA,CAET,EACA,EAAC,MAAA,CAAI,UAAU,kCACb,EAAC,MAAA,CAAI,UAAU,6BAAA,EACZ,KAAK,gBAAgBA,CAAgB,CACxC,CACF,CACF,CACF,EACCd,EAAKN,EAAM,aAAc,CAAE,UAAW,8BAA+B,CAAA,EAGvEqB,GAAgB,KAAK,wBACxB,CAEJ,CAEQ,gBAAuB,CAC7B,KAAK,MAAM,aAAe,CAAC,KAAK,MAAM,YACxC,CAEQ,gBAAgBlB,EAA6C,CACnE,OAAKA,GAGEhB,EAAQgB,EAAU,MAAM,GAAK,OACtC,CAEQ,wBAA2C,CACjD,KAAM,CAAE,UAAAZ,GAAc,KAAK,MAGrB+B,GAAkB/B,GAAa,CAAA,GAAI,OAAOY,GAAY,CAAC,CAACA,CAAQ,EAEtE,OAAImB,EAAe,SAAW,EAE1B,EAAC,MAAA,CAAI,UAAU,6BAAA,EACb,EAAC,MAAA,CAAI,UAAU,mDAAA,EACZC,EAAI,WAAW,MAAM,+BAA+B,CACvD,CACF,IAKD,MAAA,CAAI,UAAU,6BAAA,EACZD,EAAe,IAAInB,GAClB,EAAC,MAAA,CACC,IAAKA,EAAS,GACd,UAAU,8BACV,QAAS,IAAM,KAAK,eAAeA,CAAQ,CAAA,EAE3C,EAAC,OAAI,UAAU,6BAAA,IACZF,EAAA,CAAa,SAAAE,EAAoB,KAAK,OAAA,CAAQ,CACjD,IACC,MAAA,CAAI,UAAU,+BACZhB,EAAQgB,EAAU,MAAM,CAC3B,CAAA,CAEH,CACH,CAEJ,CAEQ,eAAeA,EAAoC,CACzD,KAAM,CAAE,iBAAAqB,EAAkB,eAAAC,CAAA,EAAmB,KAAK,MAElDD,EAAiBrB,CAAQ,EACzB,KAAK,MAAM,aAAe,GAGtBsB,GACFA,EAAA,CAEJ,CACF,CCvGA,MAAqBC,UAAoBP,CAA4B,CACnE,MAAyB,CACvB,KAAM,CACJ,OAAAQ,EACA,iBAAAP,EACA,eAAAQ,EACA,eAAAH,EACA,gBAAAI,CAAA,EACE,KAAK,MAEHC,EAAY,KAAK,aAAaV,CAAgB,EAC9CW,EAAY,KAAK,aAAaX,CAAgB,EAC9CY,EAAM,KAAK,OAAOZ,CAAgB,EAExC,OACE,EAAC,OAAI,UAAU,8BAAA,IACZ,MAAA,CAAI,UAAU,4BACb,EAAC,MAAA,CAAI,UAAU,sBAAA,EACZG,EAAI,WAAW,MAAM,8BAA8B,CACtD,EAEA,EAAC,MAAA,CAAI,UAAU,4BAAA,EACb,EAAC,QAAA,CACC,KAAK,OACL,UAAU,uBACV,YAAY,aACZ,MAAOI,EACP,QAAUf,GAAaa,EAAgBb,EAAE,OAA4B,KAAK,CAAA,CAAA,EAE5E,EAACqB,EAAA,CACC,UAAU,2BACV,QAASJ,EACT,SAAUD,CAAA,EAETL,EAAI,WAAW,MAAM,kCAAkC,CAAA,CAE5D,EAEA,EAAC,MAAA,CAAI,UAAU,6BAAA,EACb,EAAC,MAAA,CAAI,UAAU,yBAAA,EACb,EAAC,OAAA,CAAK,UAAU,2BAAA,EACbA,EAAI,WAAW,MAAM,iCAAiC,CACzD,EACA,EAAC,OAAA,CAAK,UAAU,2BAAA,EACbjB,EAAKN,EAAM,KAAK,EAAE,IAAE8B,EAAU,MAAIC,CACrC,CACF,EACA,EAAC,MAAA,CAAI,UAAU,yBAAA,EACb,EAAC,OAAA,CAAK,UAAU,2BAAA,EACbR,EAAI,WAAW,MAAM,6BAA6B,CACrD,EACA,EAAC,OAAA,CAAK,UAAU,2BAAA,EACbjB,EAAKN,EAAM,KAAK,EAAE,IAAEgC,CACvB,CACF,CACF,CACF,CACF,CAEJ,CAEQ,aAAa7B,EAA6C,CAChE,OAAKA,GACEhB,EAAQgB,EAAU,WAAW,GAAKJ,EAAS,UACpD,CAEQ,aAAaI,EAA6C,CAChE,OAAKA,GACEhB,EAAQgB,EAAU,WAAW,GAAKJ,EAAS,UACpD,CAEQ,OAAOI,EAA6C,CAC1D,OAAKA,GACEhB,EAAQgB,EAAU,KAAK,GAAKJ,EAAS,GAC9C,CACF,CC5EA,MAAqBmC,UAAqBf,CAA6B,CACrE,MAAyB,CACvB,KAAM,CACJ,eAAAgB,EACA,iBAAAf,EACA,YAAAgB,EACA,uBAAAC,EACA,oBAAAC,CAAA,EACE,KAAK,MAEH5B,EAAS,KAAK,UAAUU,CAAgB,EAE9C,OACE,EAAC,MAAA,CAAI,UAAU,+BAAA,EACb,EAAC,MAAA,CAAI,UAAU,0BAAA,EACb,EAAC,MAAA,CAAI,UAAU,8BAAA,IACZ,OAAA,CAAK,UAAU,sBAAA,EACbG,EAAI,WAAW,MAAM,gCAAiC,CAAE,OAAAb,CAAA,CAAQ,EACjE,EAAC,OAAA,CAAK,UAAU,yBAAA,EAA0B,GAAC,CAC7C,EACA,EAAC,MAAA,CACC,UAAU,6BACV,QAAS,IAAM4B,EAAoB,CAACF,CAAW,CAAA,EAE9C9B,EAAKN,EAAM,QAAQ,EACnBuB,EAAI,WAAW,MAAM,oCAAoC,CAAA,CAE9D,EAEA,EAAC,MAAA,CAAI,UAAU,6BAAA,EACb,EAAC,QAAA,CACC,KAAK,OACL,UAAU,uBACV,YAAaA,EAAI,WAAW,MAAM,2CAA2C,EAC7E,MAAOY,EACP,QAAUvB,GAAayB,EAAwBzB,EAAE,OAA4B,KAAK,CAAA,CAAA,EAEpF,EAAC,SAAA,CACC,UAAU,6BACV,QAAS,IAAM,KAAK,mBAAA,CAAmB,EAEtCN,EAAKN,EAAM,KAAK,CAAA,CAErB,CACF,CACF,CAEJ,CAEQ,UAAUG,EAA6C,CAC7D,OAAKA,GACEhB,EAAQgB,EAAU,QAAQ,GAAK,EACxC,CAEA,MAAc,oBAAoC,CAChD,KAAM,CAAE,uBAAAkC,GAA2B,KAAK,MAExC,GAAI,CACF,GAAI,UAAU,WAAa,UAAU,UAAU,SAAU,CACvD,MAAME,EAAO,MAAM,UAAU,UAAU,SAAA,EACvCF,EAAuBE,EAAK,MAAM,EAClC,EAAE,OAAA,CACJ,CACF,OAASC,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,EACrDjB,EAAI,OAAO,KAAK,CACd,KAAM,QACN,YAAa,EAAA,EACZA,EAAI,WAAW,MAAM,kCAAkC,CAAC,CAC7D,CACF,CACF,CCtEA,MAAqBkB,UAAqBtB,CAA6B,CACrE,MAAyB,CACvB,KAAM,CACJ,OAAAQ,EACA,iBAAAP,EACA,WAAAsB,EACA,UAAAC,EACA,SAAAC,CAAA,EACE,KAAK,MAEHC,EAAgB,WAAWlB,CAAM,GAAK,EACtCK,EAAM,KAAK,OAAOZ,CAAgB,EAClC0B,EAAc,KAAK,IAAI,EAAGD,EAAgBb,CAAG,EAC7CtB,EAAS,KAAK,UAAUU,CAAgB,EAE9C,OACE,EAAC,MAAA,CAAI,UAAU,8BAAA,EACb,EAACa,EAAA,CACC,UAAU,8BACV,QAASS,EACT,SAAU,CAACC,EACX,QAASC,CAAA,EAERrB,EAAI,WAAW,MAAM,8BAA8B,CAAA,EAGrDsB,EAAgB,GACf,EAAC,MAAA,CAAI,UAAU,4BAAA,EACZtB,EAAI,WAAW,MAAM,gCAAiC,CACrD,OAAQuB,EAAY,QAAQ/C,EAAS,iBAAiB,EACtD,OAAAW,CAAA,CACD,CACH,CAEJ,CAEJ,CAEQ,OAAOP,EAA6C,CAC1D,OAAKA,GACEhB,EAAQgB,EAAU,KAAK,GAAKJ,EAAS,GAC9C,CAEQ,UAAUI,EAA6C,CAC7D,OAAKA,GACEhB,EAAQgB,EAAU,QAAQ,GAAK,EACxC,CACF,CC9CA,MAAqB4C,UAAuB5B,CAA+B,CACzE,MAAyB,CACvB,KAAM,CACJ,UAAA5B,EACA,SAAAyD,EACA,eAAApB,EACA,WAAAc,EACA,iBAAAO,EACA,gBAAApB,EACA,SAAAe,CAAA,EACE,KAAK,MAET,MAAO,CACL,EAAC1B,EAAA,CACC,UAAA3B,EACA,iBAAkByD,EAAS,iBAC3B,iBAAmB7C,GAAa8C,EAAiB,CAAE,iBAAkB9C,EAAU,EAC/E,eAAgB,IAAM8C,EAAiB,CAAE,OAAQ,GAAI,CAAA,CAAA,EAGvD,EAACvB,EAAA,CACC,OAAQsB,EAAS,OACjB,iBAAkBA,EAAS,iBAC3B,eAAApB,EACA,eAAiBD,GAAWsB,EAAiB,CAAE,OAAAtB,EAAQ,EACvD,gBAAAE,CAAA,CAAA,EAGF,EAACK,EAAA,CACC,eAAgBc,EAAS,eACzB,iBAAkBA,EAAS,iBAC3B,YAAaA,EAAS,YACtB,uBAAyBb,GAAmBc,EAAiB,CAAE,eAAAd,EAAgB,EAC/E,oBAAsBC,GAAgBa,EAAiB,CAAE,YAAAb,EAAa,CAAA,CAAA,EAGxE,EAACK,EAAA,CACC,OAAQO,EAAS,OACjB,iBAAkBA,EAAS,iBAC3B,eAAgBA,EAAS,eACzB,WAAAN,EACA,UAAW,KAAK,UAAA,EAChB,SAAAE,CAAA,CAAA,CACF,CAEJ,CAEQ,WAAqB,CAC3B,KAAM,CAAE,SAAAI,EAAU,WAAAN,CAAA,EAAe,KAAK,MAChC,CAAE,iBAAAtB,EAAkB,OAAAO,EAAQ,eAAAQ,CAAA,EAAmBa,EAErD,MAAO,CAAC,EACN5B,GACAO,GACAQ,GACA,CAACO,GACD,WAAWf,CAAM,EAAI,EAEzB,CACF,CClEA,MAAqBuB,UAAoB/B,CAA4B,CACnE,MAAyB,CACvB,KAAM,CAAE,OAAAgC,EAAQ,UAAA/C,EAAY,EAAA,EAAO,KAAK,MAElCgD,EAAc,KAAK,eAAeD,CAAM,EACxCE,EAAc,KAAK,eAAeF,CAAM,EAE9C,OACE,EAAC,OAAI,UAAW,gCAAgCC,CAAW,IAAIhD,CAAS,IACrEiD,CACH,CAEJ,CAEQ,eAAeF,EAA4B,CACjD,OAAOrD,EAAiBqD,CAAM,GAAKrD,EAAiB,OACtD,CAEQ,eAAeqD,EAA4B,CACjD,OAAO5B,EAAI,WAAW,MAAM,2BAA2B4B,CAAM,EAAE,CACjE,CACF,CCnBA,MAAqBG,UAAoBnC,CAA4B,CACnE,MAAyB,CACvB,KAAM,CAAE,QAAAoC,EAAS,UAAAhE,CAAA,EAAc,KAAK,MAGpC,GAAI,CAACgE,EACH,OAAO,KAGT,MAAM/D,EAAa,KAAK,cAAc+D,CAAO,EACvCpD,EAAWb,EAAiBC,EAAWC,CAAU,EAEjD2D,EAAUhE,EAAQoE,EAAS,QAAQ,GAAK,UACxCC,EAAO5D,EAAgB2D,EAAS,WAAW,EAC3C5B,EAASxC,EAAQoE,EAAS,QAAQ,GAAK,EACvCpB,EAAiBhD,EAAQoE,EAAS,gBAAgB,GAAK,GAE7D,eAAQ,IAAI,gCAAiC/D,EAAY,uBAAwBD,EAAU,QAAU,CAAE,GAAIF,EAAYK,CAAC,EAAG,KAAMP,EAAQO,EAAG,MAAM,CAAA,EAAI,CAAC,EAGrJ,EAAC,MAAA,CAAI,IAAKL,EAAYkE,CAAO,EAAG,UAAU,4BAAA,EACxC,EAAC,MAAA,CAAI,UAAU,8BAAA,IACZ,MAAA,CAAI,UAAU,gCAAA,EACb,EAAC,MAAA,CAAI,UAAU,6BAAA,EACb,EAACtD,EAAA,CAAa,SAAAE,EAAoB,KAAK,QAAQ,CACjD,IACC,MAAA,CAAI,UAAU,4BAAA,EACb,EAAC,MAAA,CAAI,UAAU,sCACZ,KAAK,gBAAgBA,CAAQ,CAChC,EACA,EAAC,OAAI,UAAU,4BAAA,EACZqD,EAAK,qBAAqB,IAAEA,EAAK,mBAAA,CACpC,CACF,CACF,EACA,EAACN,EAAA,CAAY,OAAAC,EAAgB,CAC/B,EACA,EAAC,MAAA,CAAI,UAAU,mCACZ,MAAA,CAAI,UAAU,8BAAA,EACb,EAAC,OAAA,CAAK,UAAU,+BACb5B,EAAI,WAAW,MAAM,iCAAiC,EAAE,GAC3D,EACA,EAAC,OAAA,CAAK,UAAU,6BAAA,EACbI,EAAO,IAAE,KAAK,kBAAkBxB,CAAQ,CAC3C,CACF,EACA,EAAC,MAAA,CAAI,UAAU,+BAAA,EACb,EAAC,OAAA,CAAK,UAAU,+BACboB,EAAI,WAAW,MAAM,kCAAkC,EAAE,GAC5D,EACA,EAAC,OAAA,CAAK,UAAU,6BAAA,EACbY,CACH,CACF,CACF,CACF,CAEJ,CAEQ,cAAcoB,EAA6C,CACjE,OAAOpE,EAAQoE,EAAS,YAAY,GAC5BA,EAAQ,eAAe,UAAU,MAAM,IAAO,EACxD,CAEQ,gBAAgBpD,EAA6C,CACnE,OAAKA,GACEhB,EAAQgB,EAAU,MAAM,GAAK,kBACtC,CAEQ,kBAAkBA,EAA6C,CACrE,OAAKA,GACEhB,EAAQgB,EAAU,QAAQ,GAAK,EACxC,CACF,CC3EA,MAAqBsD,UAAmBtC,CAA2B,CACjE,MAAyB,CACvB,KAAM,CAAE,SAAAuC,EAAU,MAAAC,EAAO,YAAAC,EAAa,UAAAxD,EAAY,EAAA,EAAO,KAAK,MAE9D,OACE,EAAC,MAAA,CAAI,UAAW,6BAA6BA,CAAS,IACpD,EAAC,MAAA,CAAI,UAAU,0BAAA,EACZE,EAAKoD,CAAQ,CAChB,EACA,EAAC,KAAA,CAAG,UAAU,2BAAA,EACXC,CACH,EACA,EAAC,IAAA,CAAE,UAAU,iCAAA,EACVC,CACH,CACF,CAEJ,CACF,CCtBA,SAAwBC,EAAaC,EAA4C,CAC/E,KAAM,CAAE,UAAA1D,EAAY,EAAA,EAAO0D,EAE3B,OACE,EAAC,OAAI,UAAW,0BAA0B1D,CAAS,IACjD,EAAC2D,MAAiB,CACpB,CAEJ,CCDA,MAAqBC,UAA0B7C,CAAkC,CAC/E,MAAyB,CACvB,KAAM,CAAE,SAAA8C,EAAU,UAAA1E,EAAW,QAAA2E,CAAA,EAAY,KAAK,MAE9C,OAAIA,EACK,EAACL,EAAA,CAAa,UAAU,+BAAA,CAAgC,EAG7D,CAACI,GAAYA,EAAS,SAAW,EAEjC,EAACR,EAAA,CACC,SAAS,iBACT,MAAOlC,EAAI,WAAW,MAAM,sCAAsC,EAClE,YAAaA,EAAI,WAAW,MAAM,4CAA4C,EAC9E,UAAU,6BAAA,CAAA,IAMb,MAAA,CAAI,UAAU,4BAAA,EACZ0C,EAAS,IAAIV,GACZ,EAACD,EAAA,CACC,IAAK,KAAK,cAAcC,CAAO,EAC/B,QAAAA,EACA,UAAAhE,CAAA,CAAA,CAEH,CACH,CAEJ,CAEQ,cAAcgE,EAAoC,CAExD,OAAI,OAAOA,EAAQ,IAAO,WACjB,WAAWA,EAAQ,GAAA,CAAI,GAEzB,WAAWA,EAAQ,IAAM,KAAK,QAAQ,EAC/C,CACF,CC1CA,MAAqBY,UAAuBC,CAAK,CAAjD,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAQ,MAA6B,CACnC,UAAW,CAAA,EACX,SAAU,CAAA,EACV,QAAS,GACT,eAAgB,GAChB,YAAa,EACb,WAAY,GACZ,UAAWC,EAAO,YAAY,CAAA,EAGhC,KAAQ,SAA+B,CACrC,OAAQA,EAAO,EAAE,EACjB,iBAAkBA,EAAkC,IAAI,EACxD,eAAgBA,EAAO,EAAE,EACzB,YAAaA,EAAO,EAAK,CAAA,CAC3B,CAEA,OAAOnE,EAAyB,CAC9B,MAAM,OAAOA,CAAK,EAElBqB,EAAI,SAASA,EAAI,WAAW,MAAM,6BAA6B,CAAC,EAEhE,KAAK,SAAA,EACL,KAAK,gBAAA,CACP,CAEA,MAAO,CACL,OAAI,KAAK,MAAM,QAEX,EAAC,MAAA,CAAI,UAAU,gBAAA,EACb,EAAC,MAAA,CAAI,UAAU,wBAAA,EACb,EAACwC,EAAA,IAAiB,CACpB,CACF,EAKF,EAAC,MAAA,CAAI,UAAU,gBAAA,EACb,EAAC,MAAA,CAAI,UAAU,sBAAA,EACZ,KAAK,aAAA,EACN,EAAC,MAAA,CAAI,UAAU,wBAAA,EACZ,KAAK,MAAM,UAAA,IAAgB,aAAe,KAAK,oBAAA,EAAwB,KAAK,iBAAA,CAC/E,CACF,CACF,CAEJ,CAEQ,cAAiC,CACvC,SACG,MAAA,CAAI,UAAU,yBACb,EAAC,MAAA,CAAI,UAAU,qBAAA,EACb,EAAC,MAAA,CACC,UAAW,sBAAsB,KAAK,MAAM,cAAgB,aAAe,SAAW,EAAE,GACxF,QAAS,IAAM,KAAK,gBAAgB,YAAY,CAAA,EAE/CxC,EAAI,WAAW,MAAM,kCAAkC,CAAA,EAE1D,EAAC,MAAA,CACC,UAAW,sBAAsB,KAAK,MAAM,cAAgB,UAAY,SAAW,EAAE,GACrF,QAAS,IAAM,KAAK,gBAAgB,SAAS,CAAA,EAE5CA,EAAI,WAAW,MAAM,+BAA+B,CAAA,CAEzD,EACA,EAACU,EAAA,CACC,UAAU,uBACV,KAAK,eACL,QAAS,IAAMV,EAAI,QAAQ,KAAA,CAAK,CAAA,CAEpC,CAEJ,CAEQ,qBAAwC,CAG9C,OAFwB,KAAK,MAAM,WAAa,IAAI,OAAOpB,GAAY,CAAC,CAACA,CAAQ,EAE9D,SAAW,EAE1B,EAAC,MAAA,CAAI,UAAU,2BAAA,EACb,EAAC,MAAA,CAAI,UAAU,0BAAA,EACZ,KAAK,cAAc,CACtB,IACC,KAAA,CAAG,UAAU,2BAAA,EACXoB,EAAI,WAAW,MAAM,+BAA+B,CACvD,EACA,EAAC,IAAA,CAAE,UAAU,iCAAA,EACVA,EAAI,WAAW,MAAM,2CAA2C,CACnE,CACF,EAKF,EAACwB,EAAA,CACC,UAAW,KAAK,MAAM,UACtB,SAAU,KAAK,wBAAA,EACf,eAAgB,KAAK,MAAM,eAC3B,WAAY,KAAK,MAAM,WACvB,iBAAkB,KAAK,qBAAqB,KAAK,IAAI,EACrD,gBAAiB,KAAK,oBAAoB,KAAK,IAAI,EACnD,SAAU,KAAK,aAAa,KAAK,IAAI,CAAA,CAAA,CAG3C,CAEQ,kBAAqC,CAC3C,OACE,EAACiB,EAAA,CACC,SAAU,KAAK,MAAM,SACrB,UAAW,KAAK,MAAM,UACtB,QAAS,EAAA,CAAA,CAGf,CAEQ,gBAAgBM,EAAqC,CAC3D,KAAK,MAAM,UAAUA,CAAG,CAC1B,CAEQ,yBAA0B,CAChC,MAAO,CACL,iBAAkB,KAAK,SAAS,iBAAA,EAChC,OAAQ,KAAK,SAAS,OAAA,EACtB,eAAgB,KAAK,SAAS,eAAA,EAC9B,YAAa,KAAK,SAAS,YAAA,CAAY,CAE3C,CAEQ,qBAAqBC,EAAyC,CAChEA,EAAK,mBAAqB,QAC5B,KAAK,SAAS,iBAAiBA,EAAK,gBAAgB,EAElDA,EAAK,SAAW,QAClB,KAAK,SAAS,OAAOA,EAAK,MAAM,EAE9BA,EAAK,iBAAmB,QAC1B,KAAK,SAAS,eAAeA,EAAK,cAAc,EAE9CA,EAAK,cAAgB,QACvB,KAAK,SAAS,YAAYA,EAAK,WAAW,CAE9C,CAEQ,qBAA4B,CAClC,MAAMnD,EAAmB,KAAK,SAAS,iBAAA,EACvC,GAAI,CAACA,EAAkB,OAEvB,MAAMY,EAAM7C,EAAQiC,EAAkB,KAAK,GAAK,EAC1CW,EAAY5C,EAAQiC,EAAkB,WAAW,GAAK,IAC5D,IAAIoD,EAAkB,KAAK,MAAM,YAAcxC,EAE3CD,EAAY,KAAYyC,EAAkBzC,IAC5CyC,EAAkBzC,GAGhByC,EAAkB,GACpB,KAAK,SAAS,OAAOA,EAAgB,SAAA,CAAU,CAEnD,CAEA,MAAc,cAA8B,CAC1C,GAAI,KAAK,MAAM,WAAY,OAE3B,MAAMpD,EAAmB,KAAK,SAAS,iBAAA,EACjCO,EAAS,KAAK,SAAS,OAAA,EACvBQ,EAAiB,KAAK,SAAS,eAAA,EAErC,GAAI,GAACf,GAAoB,CAACO,GAAU,CAACQ,GAIrC,MAAK,MAAM,WAAa,GAExB,GAAI,CACF,MAAMsC,EAAW,MAAMlD,EAAI,QAAQ,CACjC,OAAQ,OACR,IAAKA,EAAI,MAAM,UAAU,QAAQ,EAAI,uBACrC,KAAM,CACJ,KAAM,CACJ,KAAM,sBACN,WAAY,CACV,WAAYlC,EAAY+B,CAAgB,EACxC,OAAQ,WAAWO,CAAM,EACzB,eAAAQ,EACA,YAAa,KAAK,SAAS,YAAA,CAAY,CACzC,CACF,CACF,CACD,EAEDZ,EAAI,MAAM,YAAYkD,CAAQ,EAE9B,KAAK,SAAS,OAAO,EAAE,EACvB,KAAK,SAAS,eAAe,EAAE,EAC1B,KAAK,SAAS,eACjB,KAAK,SAAS,iBAAiB,IAAI,EAGrC,KAAK,gBAAA,EACL,KAAK,uBAAA,EAELlD,EAAI,OAAO,KACT,CAAE,KAAM,UAAW,YAAa,EAAA,EAChCA,EAAI,WAAW,MAAM,iCAAiC,CAAA,CAG1D,OAASiB,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,EACjDjB,EAAI,OAAO,KACT,CAAE,KAAM,QAAS,YAAa,EAAA,EAC9BA,EAAI,WAAW,MAAM,+BAA+B,CAAA,CAExD,QAAA,CACE,KAAK,MAAM,WAAa,EAC1B,EACF,CAEA,MAAc,UAA0B,CACtC,GAAI,CACF,KAAM,CAACmD,EAAmBC,CAAgB,EAAI,MAAM,QAAQ,IAAI,CAC9DpD,EAAI,QAAQ,CACV,OAAQ,MACR,IAAKA,EAAI,MAAM,UAAU,QAAQ,EAAI,uBAAA,CACtC,EACDA,EAAI,QAAQ,CACV,OAAQ,MACR,IAAKA,EAAI,MAAM,UAAU,QAAQ,EAAI,sBAAA,CACtC,CAAA,CACF,EAEDA,EAAI,MAAM,YAAYmD,CAAiB,EACvCnD,EAAI,MAAM,YAAYoD,CAAgB,EAEtC,KAAK,MAAM,UAAYpD,EAAI,MAAM,IAAI,sBAAsB,EAC3D,KAAK,MAAM,SAAWA,EAAI,MAAM,IAAI,qBAAqB,EACzD,KAAK,MAAM,QAAU,EACvB,OAASiB,EAAO,CACd,QAAQ,MAAM,sBAAuBA,CAAK,EAC1C,KAAK,MAAM,QAAU,EACvB,CACF,CAEA,MAAc,iBAAiC,CAC7C,GAAI,CACF,KAAK,MAAM,eAAiB,GAC5B,KAAK,MAAM,YAAcjB,EAAI,QAAQ,MAAM,UAAU,OAAO,GAAK,EACjE,KAAK,MAAM,eAAiB,EAC9B,OAASiB,EAAO,CACd,QAAQ,MAAM,8BAA+BA,CAAK,EAClD,KAAK,MAAM,eAAiB,EAC9B,CACF,CAEA,MAAc,wBAAwC,CACpD,GAAI,CACF,MAAMiC,EAAW,MAAMlD,EAAI,QAAQ,CACjC,OAAQ,MACR,IAAKA,EAAI,MAAM,UAAU,QAAQ,EAAI,sBAAA,CACtC,EAEDA,EAAI,MAAM,YAAYkD,CAAQ,EAC9B,KAAK,MAAM,SAAWlD,EAAI,MAAM,IAAI,qBAAqB,CAC3D,OAASiB,EAAO,CACd,QAAQ,MAAM,qCAAsCA,CAAK,CAC3D,CACF,CACF,CChRA,MAAqBoC,UAA2BC,CAAM,CAAtD,aAAA,CAAA,MAAA,GAAA,SAAA,EAEE,KAAA,KAAOA,EAAM,UAAkB,MAAM,EACrC,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,UAAYA,EAAM,UAAkB,WAAW,EAC/C,KAAA,UAAYA,EAAM,UAAkB,WAAW,EAC/C,KAAA,IAAMA,EAAM,UAAkB,KAAK,EAGnC,KAAA,QAAUA,EAAM,UAAyB,SAAS,EAClD,KAAA,UAAYA,EAAM,UAAyB,WAAW,EAGtD,KAAA,SAAWA,EAAM,UAAmB,UAAU,EAG9C,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,CAAA,CAG5D,aAAc,CACZ,MAAO,yBAAyB,KAAK,GAAA,CAAI,EAC3C,CAGA,aAAsB,CACpB,MAAMnE,EAAS,KAAK,OAAA,EACdD,EAAO,KAAK,KAAA,EAClB,OAAOC,EAAS,GAAGD,CAAI,KAAKC,CAAM,IAAMD,CAC1C,CAEA,cAAckB,EAAyB,CACrC,MAAMmD,EAAM,KAAK,UAAA,EACXC,EAAM,KAAK,UAAA,EACjB,OAAOpD,GAAUmD,GAAOnD,GAAUoD,CACpC,CAEA,aAAapD,EAAwB,CACnC,OAAOA,EAAS,KAAK,IAAA,CACvB,CACF,CCqBO,MAAMqD,EAAoB,CAC/B,QAAS,UACT,SAAU,WACV,SAAU,UACZ,EC/DA,MAAqBC,UAA0BJ,CAAM,CAArD,aAAA,CAAA,MAAA,GAAA,SAAA,EAEE,KAAA,OAASA,EAAM,UAAkB,QAAQ,EACzC,KAAA,eAAiBA,EAAM,UAAkB,gBAAgB,EACzD,KAAA,OAASA,EAAM,UAA4B,QAAQ,EAGnD,KAAA,WAAaA,EAAM,UAAkB,YAAY,EACjD,KAAA,OAASA,EAAM,UAAkB,QAAQ,EAGzC,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAC5D,KAAA,UAAYA,EAAM,UAAU,YAAaA,EAAM,aAAa,EAG5D,KAAA,KAAOA,EAAM,OAAa,MAAM,EAChC,KAAA,SAAWA,EAAM,OAA2B,UAAU,CAAA,CAGtD,aAAc,CACZ,MAAO,wBAAwB,KAAK,GAAA,CAAI,EAC1C,CAGA,WAAqB,CACnB,OAAO,KAAK,WAAaG,EAAkB,OAC7C,CAEA,YAAsB,CACpB,OAAO,KAAK,WAAaA,EAAkB,QAC7C,CAEA,YAAsB,CACpB,OAAO,KAAK,WAAaA,EAAkB,QAC7C,CAEA,eAAyB,CACvB,OAAO,KAAK,UAAA,CACd,CAGA,aAAsB,CACpB,MAAM7B,EAAS,KAAK,OAAA,EACpB,OAAO,IAAI,WAAW,MAAM,2BAA2BA,CAAM,EAAE,CACjE,CAEA,aAAsB,CAEpB,OADe,KAAK,OAAA,EACZ,CACN,KAAK6B,EAAkB,SACrB,MAAO,UACT,KAAKA,EAAkB,SACrB,MAAO,SACT,KAAKA,EAAkB,QACvB,QACE,MAAO,SAAA,CAEb,CACF,CC7DA,MAAqBE,UAAqB/D,CAA0B,CAClE,MAAyB,CACvB,GAAI,CAACI,EAAI,QAAQ,KACf,OAAO,KAIT,MAAM4D,GADY5D,EAAI,MAAM,UAAU,2BAA2B,GAAK,WACtC,QAAQ,UAAWA,EAAI,QAAQ,KAAK,UAAU,OAAO,CAAC,EAEtF,OACE,EAAC,MAAA,CACC,GAAG,wBACH,UAAU,sEAAA,IAET,MAAA,CAAI,UAAU,uCACb,EAAC,OAAA,OACE,IAAA,CAAE,UAAU,iBAAiB,MAAO,CAAE,aAAc,MAAO,MAAO,OAAO,CAAG,CAC/E,EACC4D,CACH,EAEA,EAAC,OAAI,UAAU,qCAAA,IACZ,IAAA,CAAE,UAAU,gBAAgB,CAC/B,EAEA,EAAC,MAAA,CACC,UAAU,kCACV,QAAS,KAAK,sBAAsB,KAAK,IAAI,EAC7C,MAAM,IAAA,EAEN,EAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,EAC1C,EAAC,QAAK,MAAO,CAAE,WAAY,MAAO,SAAU,MAAA,CAAO,EAAG,IAAE,CAAA,CAC1D,CAGN,CAKQ,sBAAsBvE,EAAgB,CAC5CA,EAAE,eAAA,EACFA,EAAE,gBAAA,EAEF,OAAO,SAAS,KAAO,aACzB,CACF,CChDO,MAAMwE,CAAc,CAGjB,aAAc,CAAC,CAEvB,OAAc,aAA6B,CACzC,OAAKA,EAAc,WACjBA,EAAc,SAAW,IAAIA,GAExBA,EAAc,QACvB,CAKO,YAAsB,CAC3B,GAAI,CAEF,OADkB7D,EAAI,SAAS,IAAI,WAAW,IACzB,OACvB,MAAQ,CACN,MAAO,EACT,CACF,CACF,CChBAA,EAAI,aAAa,IAAI,wBAAyB,IAAM,CAElDA,EAAI,MAAM,OAAO,sBAAsB,EAAIqD,EAC3CrD,EAAI,MAAM,OAAO,qBAAqB,EAAI0D,EAE1C1D,EAAI,OAAO,WAAa,CAAE,KAAM,cAAe,UAAW4C,CAAA,EAE1DkB,EAAAA,OAAOC,EAAgB,UAAW,QAAS,SAAUC,EAAsB,CACrEhE,EAAI,QAAQ,MACdgE,EAAM,IACJ,aACAC,EAAW,UACT,CACE,KAAMjE,EAAI,MAAM,YAAY,EAC5B,KAAM,4BAAA,EAERA,EAAI,WAAW,MAAM,2CAA2C,CAAA,EAElE,EAAA,CAGN,CAAC,EAGD8D,EAAAA,OAAOI,EAAc,UAAW,OAAQ,SAAUvF,EAAO,CAEvD,MAAMwF,EAAgBN,EAAc,YAAA,EAChC7D,EAAI,QAAQ,MAAQmE,EAAc,cAEpCxF,EAAM,SAAS,KAAKgF,EAAa,UAAA,CAAW,CAEhD,CAAC,CACH,CAAC"}