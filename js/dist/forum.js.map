{"version":3,"file":"forum.js","sources":["../src/forum/components/WithdrawalPage.tsx","../src/forum/index.ts"],"sourcesContent":["import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Select from 'flarum/common/components/Select';\nimport Stream from 'flarum/common/utils/Stream';\nimport dayjs from 'flarum/common/utils/dayjs';\nimport type Mithril from 'mithril';\n\ninterface WithdrawalPlatform {\n  id: number;\n  attributes: {\n    name: string;\n  };\n}\n\ninterface WithdrawalRequest {\n  id: number;\n  attributes: {\n    amount: number;\n    accountDetails: string;\n    status: string;\n    createdAt: string;\n  };\n  relationships: {\n    platform: {\n      data: { id: number };\n    };\n  };\n}\n\nexport default class WithdrawalPage extends Page {\n  private platforms: WithdrawalPlatform[] = [];\n  private requests: WithdrawalRequest[] = [];\n  private loading = true;\n  private submitting = false;\n  private loadingBalance = true;\n  private userBalance = 0;\n\n  private amount = Stream('');\n  private selectedPlatform = Stream('');\n  private accountDetails = Stream('');\n\n  oninit(vnode: Mithril.VnodeDOM) {\n    super.oninit(vnode);\n\n    app.setTitle(app.translator.trans('withdrawal.forum.page.title'));\n\n    this.loadData();\n    this.loadUserBalance();\n  }\n\n  view() {\n    if (this.loading) {\n      return (\n        <div className=\"WithdrawalPage\">\n          <div className=\"container\">\n            <LoadingIndicator />\n          </div>\n        </div>\n      );\n    }\n\n    const minAmount = app.forum.attribute('withdrawal.minAmount') || 0;\n    const maxAmount = app.forum.attribute('withdrawal.maxAmount') || 10000;\n    const fee = app.forum.attribute('withdrawal.fee') || 0;\n\n    return (\n      <div className=\"WithdrawalPage\">\n        <div className=\"container\">\n          <div className=\"WithdrawalPage-header\">\n            <h1>{app.translator.trans('withdrawal.forum.page.title')}</h1>\n            <p>{app.translator.trans('withdrawal.forum.page.description')}</p>\n          </div>\n\n          <div className=\"WithdrawalPage-content\">\n            {this.renderBalanceSection()}\n            {this.renderInfoSection(minAmount, maxAmount, fee)}\n            \n            <div className=\"WithdrawalPage-form\">\n              <h3>{app.translator.trans('withdrawal.forum.form.title')}</h3>\n              \n              <div className=\"WithdrawalPage-formGroup\">\n                <label>{app.translator.trans('withdrawal.forum.form.platform')}</label>\n                <Select\n                  options={this.getPlatformOptions()}\n                  value={this.selectedPlatform()}\n                  onchange={this.selectedPlatform}\n                />\n              </div>\n\n              <div className=\"WithdrawalPage-formGroup\">\n                <label>{app.translator.trans('withdrawal.forum.form.amount')}</label>\n                <div className=\"WithdrawalPage-amountInput\">\n                  <input\n                    type=\"number\"\n                    className=\"FormControl\"\n                    placeholder={app.translator.trans('withdrawal.forum.form.amount_placeholder')}\n                    value={this.amount()}\n                    oninput={(e: Event) => this.amount((e.target as HTMLInputElement).value)}\n                    min={minAmount}\n                    max={maxAmount}\n                    step=\"0.01\"\n                  />\n                  <Button\n                    className=\"Button Button--secondary WithdrawalPage-allButton\"\n                    onclick={this.fillAllAmount.bind(this)}\n                  >\n                    {app.translator.trans('withdrawal.forum.form.all_button')}\n                  </Button>\n                </div>\n              </div>\n\n              {this.renderFinalAmountCalculation(fee)}\n\n              <div className=\"WithdrawalPage-formGroup\">\n                <label>{app.translator.trans('withdrawal.forum.form.account_details')}</label>\n                <div className=\"WithdrawalPage-accountInput\">\n                  <textarea\n                    className=\"FormControl\"\n                    placeholder={app.translator.trans('withdrawal.forum.form.account_details_placeholder')}\n                    value={this.accountDetails()}\n                    oninput={(e: Event) => this.accountDetails((e.target as HTMLTextAreaElement).value)}\n                    rows={3}\n                  />\n                  <Button\n                    className=\"Button Button--secondary WithdrawalPage-pasteButton\"\n                    onclick={this.pasteFromClipboard.bind(this)}\n                  >\n                    {app.translator.trans('withdrawal.forum.form.paste_button')}\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"WithdrawalPage-formGroup\">\n                <Button\n                  className=\"Button Button--primary\"\n                  loading={this.submitting}\n                  disabled={!this.canSubmit()}\n                  onclick={this.submit.bind(this)}\n                >\n                  {app.translator.trans('withdrawal.forum.form.submit')}\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"WithdrawalPage-history\">\n              <h3>{app.translator.trans('withdrawal.forum.history.title')}</h3>\n              {this.requests.length === 0 ? (\n                <p>{app.translator.trans('withdrawal.forum.history.empty')}</p>\n              ) : (\n                <div className=\"WithdrawalPage-historyList\">\n                  {this.requests.map((request) => this.renderRequest(request))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderRequest(request: WithdrawalRequest): Mithril.Children {\n    const platform = this.platforms.find(p => p.id == request.relationships.platform.data.id);\n    const statusClass = `status-${request.attributes.status}`;\n\n    return (\n      <div key={request.id} className={`WithdrawalRequest ${statusClass}`}>\n        <div className=\"WithdrawalRequest-info\">\n          <span className=\"WithdrawalRequest-amount\">${request.attributes.amount}</span>\n          <span className=\"WithdrawalRequest-platform\">{platform?.attributes.name}</span>\n          <span className=\"WithdrawalRequest-date\">\n            {dayjs(request.attributes.createdAt).format('YYYY-MM-DD HH:mm')}\n          </span>\n        </div>\n        <div className=\"WithdrawalRequest-status\">\n          <span className={`Badge Badge--${request.attributes.status}`}>\n            {app.translator.trans(`withdrawal.forum.status.${request.attributes.status}`)}\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  private renderBalanceSection(): Mithril.Children {\n    return (\n      <div className=\"WithdrawalPage-balance\">\n        <h3>{app.translator.trans('withdrawal.forum.balance.title')}</h3>\n        <div className=\"WithdrawalPage-balanceAmount\">\n          {this.loadingBalance ? (\n            <span className=\"loading\">{app.translator.trans('withdrawal.forum.balance.loading')}</span>\n          ) : (\n            <span className=\"amount\">{app.translator.trans('withdrawal.forum.balance.amount', { amount: this.userBalance })}</span>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private renderInfoSection(minAmount: number, maxAmount: number, fee: number): Mithril.Children {\n    return (\n      <div className=\"WithdrawalPage-info\">\n        <div className=\"WithdrawalPage-infoRow\">\n          <span className=\"WithdrawalPage-infoIcon\">ðŸ’°</span>\n          <span className=\"WithdrawalPage-infoText\">\n            {app.translator.trans('withdrawal.forum.info.minimum_amount', { amount: minAmount })}\n          </span>\n        </div>\n        <div className=\"WithdrawalPage-infoRow\">\n          <span className=\"WithdrawalPage-infoIcon\">ðŸ’°</span>\n          <span className=\"WithdrawalPage-infoText\">\n            {app.translator.trans('withdrawal.forum.info.maximum_amount', { amount: maxAmount })}\n          </span>\n        </div>\n        <div className=\"WithdrawalPage-infoRow\">\n          <span className=\"WithdrawalPage-infoIcon\">ðŸ’¸</span>\n          <span className=\"WithdrawalPage-infoText\">\n            {app.translator.trans('withdrawal.forum.info.withdrawal_fee', { amount: fee })}\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  private renderFinalAmountCalculation(fee: number): Mithril.Children {\n    const amount = parseFloat(this.amount()) || 0;\n    const finalAmount = Math.max(0, amount - fee);\n\n    if (amount > 0) {\n      return (\n        <div className=\"WithdrawalPage-finalAmount\">\n          <span className=\"WithdrawalPage-finalAmountLabel\">\n            {app.translator.trans('withdrawal.forum.info.final_amount', { amount: finalAmount.toFixed(2) })}\n          </span>\n        </div>\n      );\n    }\n    return null;\n  }\n\n\n  private getPlatformOptions(): Record<string, string> {\n    const options: Record<string, string> = {\n      '': app.translator.trans('withdrawal.forum.form.select_platform')\n    };\n\n    this.platforms.forEach(platform => {\n      options[platform.id.toString()] = platform.attributes.name;\n    });\n\n    return options;\n  }\n\n  private canSubmit(): boolean {\n    return !!(\n      this.selectedPlatform() &&\n      this.amount() &&\n      this.accountDetails() &&\n      !this.submitting\n    );\n  }\n\n  private fillAllAmount(): void {\n    this.amount(this.userBalance.toString());\n  }\n\n  private async pasteFromClipboard(): Promise<void> {\n    try {\n      if (navigator.clipboard && navigator.clipboard.readText) {\n        const text = await navigator.clipboard.readText();\n        this.accountDetails(text);\n        m.redraw();\n      }\n    } catch (error) {\n      console.error('Failed to read from clipboard:', error);\n      // Fallback for browsers without clipboard API\n      app.alerts.show({\n        type: 'error',\n        message: 'Clipboard access not available. Please paste manually.'\n      });\n    }\n  }\n\n\n  private async submit(): Promise<void> {\n    if (!this.canSubmit()) return;\n\n    this.submitting = true;\n\n    try {\n      const data = {\n        type: 'withdrawal-requests',\n        attributes: {\n          platformId: parseInt(this.selectedPlatform()),\n          amount: parseFloat(this.amount()),\n          accountDetails: this.accountDetails()\n        }\n      };\n\n      await app.request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/withdrawal-requests',\n        body: { data }\n      });\n\n      app.alerts.show({\n        type: 'success',\n        message: app.translator.trans('withdrawal.forum.form.success')\n      });\n\n      this.amount('');\n      this.selectedPlatform('');\n      this.accountDetails('');\n\n      this.loadRequests();\n    } catch (error) {\n      console.error('Error submitting withdrawal request:', error);\n      app.alerts.show({\n        type: 'error',\n        message: app.translator.trans('withdrawal.forum.form.error')\n      });\n    } finally {\n      this.submitting = false;\n      m.redraw();\n    }\n  }\n\n  private async loadData(): Promise<void> {\n    try {\n      await Promise.all([\n        this.loadPlatforms(),\n        this.loadRequests()\n      ]);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      this.loading = false;\n      m.redraw();\n    }\n  }\n\n  private async loadPlatforms(): Promise<void> {\n    const response = await app.request({\n      method: 'GET',\n      url: app.forum.attribute('apiUrl') + '/withdrawal-platforms'\n    });\n    this.platforms = response.data || [];\n  }\n\n  private async loadRequests(): Promise<void> {\n    const response = await app.request({\n      method: 'GET',\n      url: app.forum.attribute('apiUrl') + '/withdrawal-requests?include=platform'\n    });\n    this.requests = response.data || [];\n  }\n\n  private async loadUserBalance(): Promise<void> {\n    try {\n      // For now, we'll mock the balance - in a real implementation, \n      // this would fetch from the money extension API\n      // TODO: Integrate with antoinefr/flarum-ext-money extension\n      this.userBalance = app.session.user?.attribute('money') || 0;\n      this.loadingBalance = false;\n      m.redraw();\n    } catch (error) {\n      console.error('Error loading user balance:', error);\n      this.loadingBalance = false;\n      m.redraw();\n    }\n  }\n\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport WithdrawalPage from './components/WithdrawalPage';\n\napp.initializers.add('wusong8899-withdrawal', () => {\n  app.routes.withdrawal = { path: '/withdrawal', component: WithdrawalPage };\n\n  extend(HeaderSecondary.prototype, 'items', function (items: ItemList<any>) {\n    if (app.session.user) {\n      items.add(\n        'withdrawal',\n        LinkButton.component(\n          {\n            href: app.route('withdrawal'),\n            icon: 'fas fa-money-bill-transfer',\n          },\n          app.translator.trans('withdrawal.forum.header.withdrawal_button')\n        ),\n        10\n      );\n    }\n  });\n});"],"names":["WithdrawalPage","Page","Stream","vnode","app","LoadingIndicator","minAmount","maxAmount","fee","Select","Button","request","platform","p","statusClass","dayjs","amount","finalAmount","options","text","error","data","response","extend","HeaderSecondary","items","LinkButton"],"mappings":"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"}