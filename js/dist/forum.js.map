{"version":3,"file":"forum.js","sources":["../src/forum/components/withdrawal/utils/modelHelpers.ts","../src/forum/components/withdrawal/utils/constants.ts","../src/forum/components/withdrawal/common/PlatformIcon.tsx","../src/forum/components/withdrawal/forms/PlatformSelector.tsx","../src/forum/components/withdrawal/forms/AmountInput.tsx","../src/forum/components/withdrawal/forms/AddressInput.tsx","../src/forum/components/withdrawal/forms/MessageInput.tsx","../src/forum/components/withdrawal/forms/SubmitButton.tsx","../src/forum/components/withdrawal/forms/WithdrawalForm.tsx","../src/forum/components/withdrawal/common/StatusBadge.tsx","../src/forum/components/withdrawal/history/HistoryItem.tsx","../src/forum/components/withdrawal/common/EmptyState.tsx","../src/forum/components/withdrawal/common/LoadingState.tsx","../src/forum/components/withdrawal/history/WithdrawalHistory.tsx","../src/forum/components/deposit/selectors/CurrencySelector.tsx","../src/forum/components/deposit/selectors/NetworkSelector.tsx","../src/forum/components/deposit/components/AddressDisplay.tsx","../src/forum/components/deposit/components/QRCodeDisplay.tsx","../src/forum/components/deposit/history/DepositHistory.tsx","../src/forum/components/FundsPage.tsx","../src/common/models/WithdrawalPlatform.ts","../src/common/types/index.ts","../src/common/models/WithdrawalRequest.ts","../src/common/models/DepositPlatform.ts","../src/common/models/DepositAddress.ts","../src/common/models/DepositTransaction.ts","../src/forum/components/MoneyDisplay.tsx","../src/forum/components/MobileMoneyDisplay.tsx","../src/forum/utils/ConfigManager.ts","../src/forum/utils/MobileDetector.ts","../src/forum/index.ts"],"sourcesContent":["/**\n * Helper functions for accessing Flarum model data\n * These handle both Model instances and plain object data\n */\n\n/**\n * Get ID from Flarum model or plain object\n */\nexport const getId = (obj: any): string | number => {\n  return typeof obj.id === 'function' ? obj.id() : obj.id;\n};\n\n/**\n * Get attribute value from Flarum model or plain object\n */\nexport const getAttr = (obj: any, attr: string): any => {\n  if (typeof obj[attr] === 'function') {\n    return obj[attr]();\n  }\n  return obj.attributes ? obj.attributes[attr] : obj[attr];\n};\n\n/**\n * Get string representation of ID for comparison\n */\nexport const getIdString = (obj: any): string => {\n  return String(getId(obj));\n};\n\n/**\n * Find platform by ID with proper type handling\n */\nexport const findPlatformById = (platforms: any[], platformId: string | number): any => {\n  const platformIdStr = String(platformId);\n  return platforms.find(p => {\n    const pId = getId(p);\n    return String(pId) === platformIdStr;\n  });\n};\n\n/**\n * Safe date creation from model attribute\n */\nexport const getDateFromAttr = (obj: any, attr: string): Date => {\n  const dateStr = getAttr(obj, attr);\n  return dateStr ? new Date(dateStr) : new Date();\n};","import type { StatusType, StatusClass } from '../types/interfaces';\n\n/**\n * Withdrawal request status constants\n */\nexport const WITHDRAWAL_STATUS: Record<string, StatusType> = {\n  PENDING: 'pending',\n  APPROVED: 'approved',\n  REJECTED: 'rejected',\n} as const;\n\n/**\n * Status class mapping for UI styling\n */\nexport const STATUS_CLASS_MAP: Record<StatusType, StatusClass> = {\n  pending: 'warning',\n  approved: 'success',\n  rejected: 'danger',\n} as const;\n\n/**\n * Tab types\n */\nexport const TABS = {\n  WITHDRAWAL: 'withdrawal',\n  HISTORY: 'history',\n} as const;\n\n/**\n * Default values\n */\nexport const DEFAULTS = {\n  MIN_AMOUNT: 0.001,\n  MAX_AMOUNT: 10,\n  FEE: 0.0005,\n  BALANCE_PRECISION: 8,\n} as const;\n\n/**\n * CSS class names\n */\nexport const CSS_CLASSES = {\n  WITHDRAWAL_PAGE: 'WithdrawalPage',\n  MODAL: 'WithdrawalPage-modal',\n  HEADER: 'WithdrawalPage-header',\n  TABS: 'WithdrawalPage-tabs',\n  TAB: 'WithdrawalPage-tab',\n  TAB_ACTIVE: 'active',\n  CONTENT: 'WithdrawalPage-content',\n  LOADING: 'WithdrawalPage-loading',\n  EMPTY_STATE: 'WithdrawalPage-emptyState',\n} as const;\n\n/**\n * Icon names\n */\nexport const ICONS = {\n  CLOSE: 'fas fa-times',\n  COINS: 'fas fa-coins',\n  HISTORY: 'fas fa-history',\n  BITCOIN: 'fas fa-bitcoin',\n  CHEVRON_DOWN: 'fas fa-chevron-down',\n  PASTE: 'fas fa-paste',\n  BOOKMARK: 'fas fa-bookmark',\n} as const;","import icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { ICONS } from '../utils/constants';\n\ninterface PlatformIconProps {\n  platform: WithdrawalPlatform | null;\n  className?: string;\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport default class PlatformIcon {\n  view(vnode: Mithril.Vnode<PlatformIconProps>): Mithril.Children {\n    const { platform, className = '', size = 'medium' } = vnode.attrs;\n\n    // Add null checks to prevent errors\n    if (!platform) {\n      return icon(ICONS.COINS, { className: `crypto-icon default ${className}` });\n    }\n\n    // Handle both Model instances and plain objects\n    const iconUrl = getAttr(platform, 'iconUrl');\n    const iconClass = getAttr(platform, 'iconClass');\n    const name = getAttr(platform, 'name');\n    const symbol = getAttr(platform, 'symbol');\n\n    // Size classes\n    const sizeClass = `platform-icon-${size}`;\n\n    // Priority: iconUrl > iconClass > default\n    if (iconUrl) {\n      return (\n        <img \n          src={iconUrl} \n          alt={name || 'Platform'}\n          className={`platform-icon-image ${sizeClass} ${className}`}\n          onerror={(e) => {\n            // Fallback to iconClass or default icon if image fails to load\n            const target = e.target as HTMLImageElement;\n            target.style.display = 'none';\n            const fallbackIcon = document.createElement('i');\n            const fallbackIconClass = iconClass || ICONS.COINS;\n            fallbackIcon.className = `${fallbackIconClass} crypto-icon ${className}`;\n            target.parentElement?.appendChild(fallbackIcon);\n          }}\n        />\n      );\n    }\n\n    // Use Font Awesome icon class if specified, otherwise default\n    const finalIconClass = iconClass || ICONS.COINS;\n    const finalSymbol = symbol?.toLowerCase() || 'default';\n    return icon(finalIconClass, { \n      className: `crypto-icon ${finalSymbol} ${sizeClass} ${className}` \n    });\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport PlatformIcon from '../common/PlatformIcon';\nimport { getAttr } from '../utils/modelHelpers';\nimport { ICONS } from '../utils/constants';\n\ninterface PlatformSelectorProps {\n  platforms: WithdrawalPlatform[];\n  selectedPlatform: WithdrawalPlatform | null;\n  onPlatformSelect: (platform: WithdrawalPlatform) => void;\n  onAmountChange?: () => void; // Callback when platform changes to clear amount\n}\n\ninterface PlatformSelectorState {\n  showDropdown: boolean;\n}\n\nexport default class PlatformSelector extends Component<PlatformSelectorProps, PlatformSelectorState> {\n  oninit(vnode: Mithril.Vnode<PlatformSelectorProps, PlatformSelectorState>) {\n    super.oninit(vnode);\n    this.state = {\n      showDropdown: false,\n    };\n  }\n\n  view(): Mithril.Children {\n    const { selectedPlatform } = this.attrs;\n    const { showDropdown } = this.state;\n\n    return (\n      <div className=\"WithdrawalPage-platformSelector\">\n        <div className=\"WithdrawalPage-label\">提取平台</div>\n        <div \n          className=\"WithdrawalPage-platformDropdown\" \n          onclick={() => this.toggleDropdown()}\n        >\n          <div className=\"WithdrawalPage-platformSelected\">\n            <div className=\"WithdrawalPage-platformInfo\">\n              <div className=\"WithdrawalPage-platformIcon\">\n                <PlatformIcon \n                  platform={selectedPlatform} \n                  size=\"medium\"\n                />\n              </div>\n              <div className=\"WithdrawalPage-platformDetails\">\n                <div className=\"WithdrawalPage-platformName\">\n                  {this.getPlatformName(selectedPlatform)}\n                </div>\n              </div>\n            </div>\n          </div>\n          {icon(ICONS.CHEVRON_DOWN, { className: 'WithdrawalPage-dropdownIcon' })}\n        </div>\n\n        {showDropdown && this.renderPlatformDropdown()}\n      </div>\n    );\n  }\n\n  private toggleDropdown(): void {\n    this.state.showDropdown = !this.state.showDropdown;\n  }\n\n  private getPlatformName(platform: WithdrawalPlatform | null): string {\n    if (!platform) {\n      return '请选择平台';\n    }\n    return getAttr(platform, 'name') || '请选择平台';\n  }\n\n  private renderPlatformDropdown(): Mithril.Children {\n    const { platforms } = this.attrs;\n\n    // Ensure platforms array is valid and filter out invalid items\n    const validPlatforms = (platforms || []).filter(platform => !!platform);\n\n    if (validPlatforms.length === 0) {\n      return (\n        <div className=\"WithdrawalPage-dropdownMenu\">\n          <div className=\"WithdrawalPage-dropdownItem WithdrawalPage-noData\">\n            {app.translator.trans('withdrawal.forum.no_platforms')}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"WithdrawalPage-dropdownMenu\">\n        {validPlatforms.map(platform => (\n          <div \n            key={platform.id}\n            className=\"WithdrawalPage-dropdownItem\"\n            onclick={() => this.selectPlatform(platform)}\n          >\n            <div className=\"WithdrawalPage-platformIcon\">\n              <PlatformIcon platform={platform} size=\"small\" />\n            </div>\n            <div className=\"WithdrawalPage-platformName\">\n              {getAttr(platform, 'name')}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private selectPlatform(platform: WithdrawalPlatform): void {\n    const { onPlatformSelect, onAmountChange } = this.attrs;\n    \n    onPlatformSelect(platform);\n    this.state.showDropdown = false;\n    \n    // Clear amount when switching platforms\n    if (onAmountChange) {\n      onAmountChange();\n    }\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { DEFAULTS, ICONS } from '../utils/constants';\n\ninterface AmountInputProps {\n  amount: string;\n  selectedPlatform: WithdrawalPlatform | null;\n  loadingBalance: boolean;\n  onAmountChange: (amount: string) => void;\n  onFillAllAmount: () => void;\n}\n\nexport default class AmountInput extends Component<AmountInputProps> {\n  view(): Mithril.Children {\n    const { \n      amount, \n      selectedPlatform, \n      loadingBalance,\n      onAmountChange,\n      onFillAllAmount \n    } = this.attrs;\n\n    const minAmount = this.getMinAmount(selectedPlatform);\n    const maxAmount = this.getMaxAmount(selectedPlatform);\n    const fee = this.getFee(selectedPlatform);\n\n    return (\n      <div className=\"WithdrawalPage-amountSection\">\n        <div className=\"WithdrawalPage-formGroup\">\n          <div className=\"WithdrawalPage-label\">\n            {app.translator.trans('withdrawal.forum.form.amount')}\n          </div>\n\n          <div className=\"WithdrawalPage-amountInput\">\n            <input\n              type=\"text\"\n              className=\"WithdrawalPage-input\"\n              placeholder=\"0.00000000\"\n              value={amount}\n              oninput={(e: Event) => onAmountChange((e.target as HTMLInputElement).value)}\n            />\n            <Button\n              className=\"WithdrawalPage-allButton\"\n              onclick={onFillAllAmount}\n              disabled={loadingBalance}\n            >\n              {app.translator.trans('withdrawal.forum.form.all_button')}\n            </Button>\n          </div>\n\n          <div className=\"WithdrawalPage-amountLimits\">\n            <div className=\"WithdrawalPage-limitRow\">\n              <span className=\"WithdrawalPage-limitLabel\">\n                {app.translator.trans('withdrawal.forum.limits.min_max')}\n              </span>\n              <span className=\"WithdrawalPage-limitValue\">\n                {icon(ICONS.COINS)} {minAmount} ~ {maxAmount}\n              </span>\n            </div>\n            <div className=\"WithdrawalPage-limitRow\">\n              <span className=\"WithdrawalPage-limitLabel\">\n                {app.translator.trans('withdrawal.forum.limits.fee')}\n              </span>\n              <span className=\"WithdrawalPage-limitValue\">\n                {icon(ICONS.COINS)} {fee}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private getMinAmount(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.MIN_AMOUNT;\n    return getAttr(platform, 'minAmount') || DEFAULTS.MIN_AMOUNT;\n  }\n\n  private getMaxAmount(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.MAX_AMOUNT;\n    return getAttr(platform, 'maxAmount') || DEFAULTS.MAX_AMOUNT;\n  }\n\n  private getFee(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.FEE;\n    return getAttr(platform, 'fee') || DEFAULTS.FEE;\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { ICONS } from '../utils/constants';\n\ninterface AddressInputProps {\n  accountDetails: string;\n  selectedPlatform: WithdrawalPlatform | null;\n  saveAddress: boolean;\n  onAccountDetailsChange: (details: string) => void;\n  onSaveAddressToggle: (save: boolean) => void;\n}\n\nexport default class AddressInput extends Component<AddressInputProps> {\n  view(): Mithril.Children {\n    const { \n      accountDetails, \n      selectedPlatform, \n      saveAddress,\n      onAccountDetailsChange,\n      onSaveAddressToggle\n    } = this.attrs;\n\n    const symbol = this.getSymbol(selectedPlatform);\n\n    return (\n      <div className=\"WithdrawalPage-addressSection\">\n        <div className=\"WithdrawalPage-formGroup\">\n          <div className=\"WithdrawalPage-addressHeader\">\n            <span className=\"WithdrawalPage-label\">\n              {app.translator.trans('withdrawal.forum.form.address', { symbol })}\n              <span className=\"WithdrawalPage-required\">*</span>\n            </span>\n            <div \n              className=\"WithdrawalPage-saveAddress\" \n              onclick={() => onSaveAddressToggle(!saveAddress)}\n            >\n              {icon(ICONS.BOOKMARK)}\n              {app.translator.trans('withdrawal.forum.form.save_address')}\n            </div>\n          </div>\n\n          <div className=\"WithdrawalPage-addressInput\">\n            <input\n              type=\"text\"\n              className=\"WithdrawalPage-input\"\n              placeholder={app.translator.trans('withdrawal.forum.form.address_placeholder')}\n              value={accountDetails}\n              oninput={(e: Event) => onAccountDetailsChange((e.target as HTMLInputElement).value)}\n            />\n            <button \n              className=\"WithdrawalPage-pasteButton\" \n              onclick={() => this.pasteFromClipboard()}\n            >\n              {icon(ICONS.PASTE)}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private getSymbol(platform: WithdrawalPlatform | null): string {\n    if (!platform) return '';\n    return getAttr(platform, 'symbol') || '';\n  }\n\n  private async pasteFromClipboard(): Promise<void> {\n    const { onAccountDetailsChange } = this.attrs;\n    \n    try {\n      if (navigator.clipboard && navigator.clipboard.readText) {\n        const text = await navigator.clipboard.readText();\n        onAccountDetailsChange(text.trim());\n        m.redraw();\n      }\n    } catch (error) {\n      console.error('Failed to read from clipboard:', error);\n      app.alerts.show({\n        type: 'error',\n        dismissible: true\n      }, app.translator.trans('withdrawal.forum.clipboard_error'));\n    }\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\n\ninterface MessageInputProps {\n  message: string;\n  onMessageChange: (message: string) => void;\n}\n\nexport default class MessageInput extends Component<MessageInputProps> {\n  view(): Mithril.Children {\n    const { \n      message,\n      onMessageChange\n    } = this.attrs;\n\n    return (\n      <div className=\"WithdrawalPage-messageSection\">\n        <div className=\"WithdrawalPage-formGroup\">\n          <span className=\"WithdrawalPage-label\">\n            {app.translator.trans('withdrawal.forum.form.message')}\n          </span>\n          <textarea\n            className=\"WithdrawalPage-textarea\"\n            placeholder={app.translator.trans('withdrawal.forum.form.message_placeholder')}\n            value={message}\n            rows={3}\n            maxlength={500}\n            oninput={(e: Event) => onMessageChange((e.target as HTMLTextAreaElement).value)}\n          />\n          <div className=\"WithdrawalPage-helperText\">\n            {app.translator.trans('withdrawal.forum.form.message_helper')} ({message.length}/500)\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform } from '../types/interfaces';\nimport { getAttr } from '../utils/modelHelpers';\nimport { DEFAULTS } from '../utils/constants';\n\ninterface SubmitButtonProps {\n  amount: string;\n  selectedPlatform: WithdrawalPlatform | null;\n  accountDetails: string;\n  submitting: boolean;\n  canSubmit: boolean;\n  onSubmit: () => void;\n}\n\nexport default class SubmitButton extends Component<SubmitButtonProps> {\n  view(): Mithril.Children {\n    const { \n      amount, \n      selectedPlatform, \n      submitting, \n      canSubmit, \n      onSubmit \n    } = this.attrs;\n\n    const numericAmount = parseFloat(amount) || 0;\n    const fee = this.getFee(selectedPlatform);\n    const finalAmount = Math.max(0, numericAmount - fee);\n    const symbol = this.getSymbol(selectedPlatform);\n\n    return (\n      <div className=\"WithdrawalPage-submitSection\">\n        <Button\n          className=\"WithdrawalPage-submitButton\"\n          loading={submitting}\n          disabled={!canSubmit}\n          onclick={onSubmit}\n        >\n          {app.translator.trans('withdrawal.forum.form.submit')}\n        </Button>\n\n        {numericAmount > 0 && (\n          <div className=\"WithdrawalPage-finalAmount\">\n            {app.translator.trans('withdrawal.forum.final_amount', { \n              amount: finalAmount.toFixed(DEFAULTS.BALANCE_PRECISION), \n              symbol \n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private getFee(platform: WithdrawalPlatform | null): number {\n    if (!platform) return DEFAULTS.FEE;\n    return getAttr(platform, 'fee') || DEFAULTS.FEE;\n  }\n\n  private getSymbol(platform: WithdrawalPlatform | null): string {\n    if (!platform) return '';\n    return getAttr(platform, 'symbol') || '';\n  }\n}","import Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform, WithdrawalFormData } from '../types/interfaces';\nimport PlatformSelector from './PlatformSelector';\nimport AmountInput from './AmountInput';\nimport AddressInput from './AddressInput';\nimport MessageInput from './MessageInput';\nimport SubmitButton from './SubmitButton';\n\ninterface WithdrawalFormProps {\n  platforms: WithdrawalPlatform[];\n  formData: WithdrawalFormData;\n  loadingBalance: boolean;\n  submitting: boolean;\n  onFormDataChange: (data: Partial<WithdrawalFormData>) => void;\n  onFillAllAmount: () => void;\n  onSubmit: () => void;\n}\n\nexport default class WithdrawalForm extends Component<WithdrawalFormProps> {\n  view(): Mithril.Children {\n    const { \n      platforms, \n      formData, \n      loadingBalance,\n      submitting,\n      onFormDataChange,\n      onFillAllAmount,\n      onSubmit \n    } = this.attrs;\n\n    return [\n      <PlatformSelector \n        platforms={platforms}\n        selectedPlatform={formData.selectedPlatform}\n        onPlatformSelect={(platform) => onFormDataChange({ selectedPlatform: platform })}\n        onAmountChange={() => onFormDataChange({ amount: '' })}\n      />,\n      \n      <AmountInput \n        amount={formData.amount}\n        selectedPlatform={formData.selectedPlatform}\n        loadingBalance={loadingBalance}\n        onAmountChange={(amount) => onFormDataChange({ amount })}\n        onFillAllAmount={onFillAllAmount}\n      />,\n      \n      <AddressInput \n        accountDetails={formData.accountDetails}\n        selectedPlatform={formData.selectedPlatform}\n        saveAddress={formData.saveAddress}\n        onAccountDetailsChange={(accountDetails) => onFormDataChange({ accountDetails })}\n        onSaveAddressToggle={(saveAddress) => onFormDataChange({ saveAddress })}\n      />,\n      \n      <MessageInput \n        message={formData.message}\n        onMessageChange={(message) => onFormDataChange({ message })}\n      />,\n      \n      <SubmitButton \n        amount={formData.amount}\n        selectedPlatform={formData.selectedPlatform}\n        accountDetails={formData.accountDetails}\n        submitting={submitting}\n        canSubmit={this.canSubmit()}\n        onSubmit={onSubmit}\n      />\n    ];\n  }\n\n  private canSubmit(): boolean {\n    const { formData, submitting } = this.attrs;\n    const { selectedPlatform, amount, accountDetails } = formData;\n\n    return !!(\n      selectedPlatform &&\n      amount &&\n      accountDetails &&\n      !submitting &&\n      parseFloat(amount) > 0\n    );\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { StatusType } from '../types/interfaces';\nimport { STATUS_CLASS_MAP } from '../utils/constants';\n\ninterface StatusBadgeProps {\n  status: StatusType;\n  className?: string;\n}\n\nexport default class StatusBadge extends Component<StatusBadgeProps> {\n  view(): Mithril.Children {\n    const { status, className = '' } = this.attrs;\n    \n    const statusClass = this.getStatusClass(status);\n    const statusLabel = this.getStatusLabel(status);\n\n    return (\n      <div className={`WithdrawalPage-historyStatus ${statusClass} ${className}`}>\n        {statusLabel}\n      </div>\n    );\n  }\n\n  private getStatusClass(status: StatusType): string {\n    return STATUS_CLASS_MAP[status] || STATUS_CLASS_MAP.pending;\n  }\n\n  private getStatusLabel(status: StatusType): string {\n    return app.translator.trans(`withdrawal.forum.status.${status}`);\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform, WithdrawalRequest, StatusType } from '../types/interfaces';\nimport PlatformIcon from '../common/PlatformIcon';\nimport StatusBadge from '../common/StatusBadge';\nimport { getAttr, findPlatformById, getDateFromAttr, getIdString } from '../utils/modelHelpers';\n\ninterface HistoryItemProps {\n  request: WithdrawalRequest;\n  platforms: WithdrawalPlatform[];\n}\n\nexport default class HistoryItem extends Component<HistoryItemProps> {\n  view(): Mithril.Children {\n    const { request, platforms } = this.attrs;\n\n    // Add null checks and handle both Model instances and plain objects\n    if (!request) {\n      return null;\n    }\n\n    const platformId = this.getPlatformId(request);\n    const platform = findPlatformById(platforms, platformId);\n    \n    const status = (getAttr(request, 'status') || 'pending') as StatusType;\n    const date = getDateFromAttr(request, 'createdAt');\n    const amount = getAttr(request, 'amount') || 0;\n    const accountDetails = getAttr(request, 'accountDetails') || '';\n\n    console.log('Looking for platform with ID:', platformId, 'Available platforms:', platforms.map(p => ({ id: getIdString(p), name: getAttr(p, 'name') })));\n\n    return (\n      <div key={getIdString(request)} className=\"WithdrawalPage-historyItem\">\n        <div className=\"WithdrawalPage-historyHeader\">\n          <div className=\"WithdrawalPage-historyPlatform\">\n            <div className=\"WithdrawalPage-platformIcon\">\n              <PlatformIcon platform={platform} size=\"small\" />\n            </div>\n            <div className=\"WithdrawalPage-historyInfo\">\n              <div className=\"WithdrawalPage-historyPlatformName\">\n                {this.getPlatformName(platform)}\n              </div>\n              <div className=\"WithdrawalPage-historyDate\">\n                {date.toLocaleDateString()} {date.toLocaleTimeString()}\n              </div>\n            </div>\n          </div>\n          <StatusBadge status={status} />\n        </div>\n        <div className=\"WithdrawalPage-historyDetails\">\n          <div className=\"WithdrawalPage-historyAmount\">\n            <span className=\"WithdrawalPage-historyLabel\">\n              {app.translator.trans('withdrawal.forum.history.amount')}:\n            </span>\n            <span className=\"WithdrawalPage-historyValue\">\n              {amount} {this.getPlatformSymbol(platform)}\n            </span>\n          </div>\n          <div className=\"WithdrawalPage-historyAddress\">\n            <span className=\"WithdrawalPage-historyLabel\">\n              {app.translator.trans('withdrawal.forum.history.address')}:\n            </span>\n            <span className=\"WithdrawalPage-historyValue\">\n              {accountDetails}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private getPlatformId(request: WithdrawalRequest): string | number {\n    return getAttr(request, 'platformId') || \n           (request.relationships?.platform?.data?.id) || '';\n  }\n\n  private getPlatformName(platform: WithdrawalPlatform | null): string {\n    if (!platform) return 'Unknown Platform';\n    return getAttr(platform, 'name') || 'Unknown Platform';\n  }\n\n  private getPlatformSymbol(platform: WithdrawalPlatform | null): string {\n    if (!platform) return '';\n    return getAttr(platform, 'symbol') || '';\n  }\n}","import Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\n\ninterface EmptyStateProps {\n  iconName: string;\n  title: string;\n  description: string;\n  className?: string;\n}\n\nexport default class EmptyState extends Component<EmptyStateProps> {\n  view(): Mithril.Children {\n    const { iconName, title, description, className = '' } = this.attrs;\n    \n    return (\n      <div className={`WithdrawalPage-emptyState ${className}`}>\n        <div className=\"WithdrawalPage-emptyIcon\">\n          {icon(iconName)}\n        </div>\n        <h3 className=\"WithdrawalPage-emptyTitle\">\n          {title}\n        </h3>\n        <p className=\"WithdrawalPage-emptyDescription\">\n          {description}\n        </p>\n      </div>\n    );\n  }\n}","import LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport type Mithril from 'mithril';\n\ninterface LoadingStateProps {\n  className?: string;\n}\n\nexport default function LoadingState(props: LoadingStateProps): Mithril.Children {\n  const { className = '' } = props;\n  \n  return (\n    <div className={`WithdrawalPage-loading ${className}`}>\n      <LoadingIndicator />\n    </div>\n  );\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type { WithdrawalPlatform, WithdrawalRequest } from '../types/interfaces';\nimport HistoryItem from './HistoryItem';\nimport EmptyState from '../common/EmptyState';\nimport LoadingState from '../common/LoadingState';\n\ninterface WithdrawalHistoryProps {\n  requests: WithdrawalRequest[];\n  platforms: WithdrawalPlatform[];\n  loading: boolean;\n}\n\nexport default class WithdrawalHistory extends Component<WithdrawalHistoryProps> {\n  view(): Mithril.Children {\n    const { requests, platforms, loading } = this.attrs;\n\n    if (loading) {\n      return <LoadingState className=\"WithdrawalPage-historyLoading\" />;\n    }\n\n    if (!requests || requests.length === 0) {\n      return (\n        <EmptyState\n          iconName=\"fas fa-history\"\n          title={app.translator.trans('withdrawal.forum.history.empty.title')}\n          description={app.translator.trans('withdrawal.forum.history.empty.description')}\n          className=\"WithdrawalPage-historyEmpty\"\n        />\n      );\n    }\n\n    return (\n      <div className=\"WithdrawalPage-historyList\">\n        {requests.map(request => (\n          <HistoryItem\n            key={this.getRequestKey(request)}\n            request={request}\n            platforms={platforms}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  private getRequestKey(request: WithdrawalRequest): string {\n    // Handle both Flarum Model instances and plain objects\n    if (typeof request.id === 'function') {\n      return `request-${request.id()}`;\n    }\n    return `request-${request.id || Math.random()}`;\n  }\n}","import Component from 'flarum/common/Component';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\n\r\nexport interface CurrencySelectorAttrs {\r\n  currencies: string[];\r\n  selected: string;\r\n  onSelect: (currency: string) => void;\r\n  loading: boolean;\r\n}\r\n\r\nexport default class CurrencySelector extends Component<CurrencySelectorAttrs> {\r\n  private isOpen = Stream(false);\r\n\r\n  view(vnode: Mithril.Vnode<CurrencySelectorAttrs>) {\r\n    const { currencies, selected, loading } = vnode.attrs;\r\n\r\n    return (\r\n      <div className={`CurrencySelector ${this.isOpen() ? 'open' : ''}`}>\r\n        <div \r\n          className=\"CurrencySelector-trigger\"\r\n          onclick={() => !loading && this.isOpen(!this.isOpen())}\r\n        >\r\n          <div className=\"CurrencySelector-content\">\r\n            {loading ? (\r\n              <div className=\"CurrencySelector-loading\">\r\n                <i className=\"fas fa-spinner fa-spin\"></i>\r\n                <span>Loading currencies...</span>\r\n              </div>\r\n            ) : selected ? (\r\n              <div className=\"CurrencySelector-selected\">\r\n                <div className=\"CurrencySelector-icon\">\r\n                  {this.getCurrencyIcon(selected)}\r\n                </div>\r\n                <span className=\"CurrencySelector-label\">{selected}</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"CurrencySelector-placeholder\">\r\n                <div className=\"CurrencySelector-icon\">\r\n                  {icon('fas fa-coins')}\r\n                </div>\r\n                <span className=\"CurrencySelector-label\">Select Currency</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"CurrencySelector-arrow\">\r\n            {icon('fas fa-chevron-down')}\r\n          </div>\r\n        </div>\r\n\r\n        {this.isOpen() && !loading && (\r\n          <div className=\"CurrencySelector-dropdown\">\r\n            {currencies.map(currency => (\r\n              <div\r\n                key={currency}\r\n                className={`CurrencySelector-option ${currency === selected ? 'selected' : ''}`}\r\n                onclick={() => this.handleSelect(currency, vnode.attrs.onSelect)}\r\n              >\r\n                <div className=\"CurrencySelector-optionIcon\">\r\n                  {this.getCurrencyIcon(currency)}\r\n                </div>\r\n                <span className=\"CurrencySelector-optionLabel\">{currency}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  oncreate(vnode: Mithril.VnodeDOM) {\r\n    super.oncreate(vnode);\r\n    \r\n    // Close dropdown when clicking outside\r\n    document.addEventListener('click', this.handleOutsideClick);\r\n  }\r\n\r\n  onremove(vnode: Mithril.VnodeDOM) {\r\n    super.onremove(vnode);\r\n    document.removeEventListener('click', this.handleOutsideClick);\r\n  }\r\n\r\n  private handleOutsideClick = (e: MouseEvent) => {\r\n    const element = this.element;\r\n    if (element && !element.contains(e.target as Node)) {\r\n      this.isOpen(false);\r\n      m.redraw();\r\n    }\r\n  };\r\n\r\n  private handleSelect(currency: string, onSelect: (currency: string) => void): void {\r\n    onSelect(currency);\r\n    this.isOpen(false);\r\n  }\r\n\r\n  private getCurrencyIcon(currency: string): Mithril.Children {\r\n    // You can customize icons per currency here\r\n    switch (currency) {\r\n      case 'USDT':\r\n        return <span className=\"CurrencySelector-currencyIcon usdt\">₮</span>;\r\n      case 'USDC':\r\n        return <span className=\"CurrencySelector-currencyIcon usdc\">$</span>;\r\n      case 'BTC':\r\n        return <span className=\"CurrencySelector-currencyIcon btc\">₿</span>;\r\n      case 'ETH':\r\n        return <span className=\"CurrencySelector-currencyIcon eth\">Ξ</span>;\r\n      default:\r\n        return icon('fas fa-coins');\r\n    }\r\n  }\r\n}","import Component from 'flarum/common/Component';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\n\r\nexport interface NetworkSelectorAttrs {\r\n  networks: string[];\r\n  selected: string;\r\n  onSelect: (network: string) => void;\r\n  loading: boolean;\r\n  disabled: boolean;\r\n}\r\n\r\nexport default class NetworkSelector extends Component<NetworkSelectorAttrs> {\r\n  private isOpen = Stream(false);\r\n\r\n  view(vnode: Mithril.Vnode<NetworkSelectorAttrs>) {\r\n    const { networks, selected, loading, disabled } = vnode.attrs;\r\n\r\n    return (\r\n      <div className={`NetworkSelector ${this.isOpen() ? 'open' : ''} ${disabled ? 'disabled' : ''}`}>\r\n        <div \r\n          className=\"NetworkSelector-trigger\"\r\n          onclick={() => !loading && !disabled && this.isOpen(!this.isOpen())}\r\n        >\r\n          <div className=\"NetworkSelector-content\">\r\n            {loading ? (\r\n              <div className=\"NetworkSelector-loading\">\r\n                <i className=\"fas fa-spinner fa-spin\"></i>\r\n                <span>Loading networks...</span>\r\n              </div>\r\n            ) : disabled ? (\r\n              <div className=\"NetworkSelector-placeholder\">\r\n                <div className=\"NetworkSelector-icon\">\r\n                  {icon('fas fa-network-wired')}\r\n                </div>\r\n                <span className=\"NetworkSelector-label\">Select currency first</span>\r\n              </div>\r\n            ) : selected ? (\r\n              <div className=\"NetworkSelector-selected\">\r\n                <div className=\"NetworkSelector-icon\">\r\n                  {this.getNetworkIcon(selected)}\r\n                </div>\r\n                <span className=\"NetworkSelector-label\">{selected}</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"NetworkSelector-placeholder\">\r\n                <div className=\"NetworkSelector-icon\">\r\n                  {icon('fas fa-network-wired')}\r\n                </div>\r\n                <span className=\"NetworkSelector-label\">Select Network</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"NetworkSelector-arrow\">\r\n            {icon('fas fa-chevron-down')}\r\n          </div>\r\n        </div>\r\n\r\n        {this.isOpen() && !loading && !disabled && (\r\n          <div className=\"NetworkSelector-dropdown\">\r\n            {networks.map(network => (\r\n              <div\r\n                key={network}\r\n                className={`NetworkSelector-option ${network === selected ? 'selected' : ''}`}\r\n                onclick={() => this.handleSelect(network, vnode.attrs.onSelect)}\r\n              >\r\n                <div className=\"NetworkSelector-optionIcon\">\r\n                  {this.getNetworkIcon(network)}\r\n                </div>\r\n                <span className=\"NetworkSelector-optionLabel\">{network}</span>\r\n                <span className=\"NetworkSelector-optionDesc\">{this.getNetworkDescription(network)}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  oncreate(vnode: Mithril.VnodeDOM) {\r\n    super.oncreate(vnode);\r\n    \r\n    // Close dropdown when clicking outside\r\n    document.addEventListener('click', this.handleOutsideClick);\r\n  }\r\n\r\n  onremove(vnode: Mithril.VnodeDOM) {\r\n    super.onremove(vnode);\r\n    document.removeEventListener('click', this.handleOutsideClick);\r\n  }\r\n\r\n  private handleOutsideClick = (e: MouseEvent) => {\r\n    const element = this.element;\r\n    if (element && !element.contains(e.target as Node)) {\r\n      this.isOpen(false);\r\n      m.redraw();\r\n    }\r\n  };\r\n\r\n  private handleSelect(network: string, onSelect: (network: string) => void): void {\r\n    onSelect(network);\r\n    this.isOpen(false);\r\n  }\r\n\r\n  private getNetworkIcon(network: string): Mithril.Children {\r\n    // You can customize icons per network here\r\n    switch (network) {\r\n      case 'TRC20':\r\n        return <span className=\"NetworkSelector-networkIcon trc20\">T</span>;\r\n      case 'ERC20':\r\n        return <span className=\"NetworkSelector-networkIcon erc20\">E</span>;\r\n      case 'BSC':\r\n      case 'BEP20':\r\n        return <span className=\"NetworkSelector-networkIcon bsc\">B</span>;\r\n      case 'POLYGON':\r\n        return <span className=\"NetworkSelector-networkIcon polygon\">P</span>;\r\n      default:\r\n        return icon('fas fa-network-wired');\r\n    }\r\n  }\r\n\r\n  private getNetworkDescription(network: string): string {\r\n    // Network descriptions for better UX\r\n    switch (network) {\r\n      case 'TRC20':\r\n        return 'TRON network - Low fees';\r\n      case 'ERC20':\r\n        return 'Ethereum network - High security';\r\n      case 'BSC':\r\n      case 'BEP20':\r\n        return 'Binance Smart Chain - Fast & cheap';\r\n      case 'POLYGON':\r\n        return 'Polygon network - Very low fees';\r\n      default:\r\n        return 'Blockchain network';\r\n    }\r\n  }\r\n}","import Component from 'flarum/common/Component';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport type Mithril from 'mithril';\r\n\r\nexport interface AddressDisplayAttrs {\r\n  address: string;\r\n  loading: boolean;\r\n  onCopy: () => void;\r\n}\r\n\r\nexport default class AddressDisplay extends Component<AddressDisplayAttrs> {\r\n  view(vnode: Mithril.Vnode<AddressDisplayAttrs>) {\r\n    const { address, loading, onCopy } = vnode.attrs;\r\n\r\n    return (\r\n      <div className=\"AddressDisplay\">\r\n        {loading ? (\r\n          <div className=\"AddressDisplay-loading\">\r\n            <i className=\"fas fa-spinner fa-spin\"></i>\r\n            <span>Generating address...</span>\r\n          </div>\r\n        ) : address ? (\r\n          <div className=\"AddressDisplay-content\">\r\n            <div className=\"AddressDisplay-address\" title={address}>\r\n              {address}\r\n            </div>\r\n            <div className=\"AddressDisplay-actions\">\r\n              <button\r\n                className=\"AddressDisplay-copyBtn\"\r\n                onclick={onCopy}\r\n                title=\"Copy address\"\r\n              >\r\n                {icon('fas fa-copy')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"AddressDisplay-placeholder\">\r\n            <span>No address available</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import Component from 'flarum/common/Component';\r\nimport DepositPlatform from '../../../common/models/DepositPlatform';\r\nimport type Mithril from 'mithril';\r\n\r\nexport interface ImageDisplayAttrs {\r\n  platform: DepositPlatform | null;\r\n  loading?: boolean;\r\n  size?: number;\r\n}\r\n\r\nexport default class ImageDisplay extends Component<ImageDisplayAttrs> {\r\n  view(vnode: Mithril.Vnode<ImageDisplayAttrs>) {\r\n    const { platform, loading, size = 160 } = vnode.attrs;\r\n\r\n    return (\r\n      <div className=\"ImageDisplay\" style={{ width: `${size}px`, height: `${size}px` }}>\r\n        {loading ? (\r\n          <div className=\"ImageDisplay-loading\">\r\n            <i className=\"fas fa-spinner fa-spin\"></i>\r\n          </div>\r\n        ) : platform && platform.qrCodeImageUrl() ? (\r\n          <img \r\n            src={platform.qrCodeImageUrl()} \r\n            alt={`${platform.name()} QR Code`}\r\n            className=\"ImageDisplay-image\"\r\n            style={{ \r\n              maxWidth: '100%', \r\n              maxHeight: '100%',\r\n              objectFit: 'contain'\r\n            }}\r\n            onerror=\"this.style.display='none'; this.nextElementSibling.style.display='block';\"\r\n          />\r\n        ) : (\r\n          <div className=\"ImageDisplay-placeholder\">\r\n            <i className=\"fas fa-image\"></i>\r\n            <div>No Image</div>\r\n          </div>\r\n        )}\r\n        <div className=\"ImageDisplay-error\" style={{ display: 'none' }}>\r\n          <i className=\"fas fa-exclamation-triangle\"></i>\r\n          <div>Image Load Failed</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import Component from 'flarum/common/Component';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport type Mithril from 'mithril';\r\nimport type DepositTransaction from '../../../common/models/DepositTransaction';\r\nimport type DepositPlatform from '../../../common/models/DepositPlatform';\r\nimport { getAttr } from '../../withdrawal/utils/modelHelpers';\r\n\r\nexport interface DepositHistoryAttrs {\r\n  transactions: DepositTransaction[];\r\n  platforms: DepositPlatform[];\r\n  loading: boolean;\r\n}\r\n\r\nexport default class DepositHistory extends Component<DepositHistoryAttrs> {\r\n  view(vnode: Mithril.Vnode<DepositHistoryAttrs>) {\r\n    const { transactions, loading } = vnode.attrs;\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className=\"DepositHistory\">\r\n          <div className=\"DepositHistory-loading\">\r\n            <i className=\"fas fa-spinner fa-spin\"></i>\r\n            <span>Loading deposit history...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!transactions || transactions.length === 0) {\r\n      return (\r\n        <div className=\"DepositHistory\">\r\n          <div className=\"DepositHistory-empty\">\r\n            <div className=\"DepositHistory-emptyIcon\">\r\n              {icon('fas fa-inbox')}\r\n            </div>\r\n            <h3>No deposits yet</h3>\r\n            <p>Your deposit transactions will appear here once you make a deposit.</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"DepositHistory\">\r\n        <div className=\"DepositHistory-header\">\r\n          <h3>Deposit History</h3>\r\n          <span className=\"DepositHistory-count\">{transactions.length} transactions</span>\r\n        </div>\r\n        \r\n        <div className=\"DepositHistory-list\">\r\n          {transactions.map(transaction => this.renderTransaction(transaction))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderTransaction(transaction: DepositTransaction): Mithril.Children {\r\n    const platform = transaction.platform?.();\r\n    const amount = getAttr(transaction, 'amount') || 0;\r\n    const status = getAttr(transaction, 'status') || '';\r\n    const statusColor = getAttr(transaction, 'statusColor') || 'secondary';\r\n    const transactionHash = getAttr(transaction, 'transactionHash');\r\n    const explorerUrl = getAttr(transaction, 'explorerUrl');\r\n    const createdAt = getAttr(transaction, 'createdAt');\r\n    const completedAt = getAttr(transaction, 'completedAt');\r\n    const confirmations = getAttr(transaction, 'confirmations') || 0;\r\n    const requiredConfirmations = getAttr(transaction, 'requiredConfirmations') || 1;\r\n\r\n    return (\r\n      <div key={getAttr(transaction, 'id')} className=\"DepositHistory-item\">\r\n        <div className=\"DepositHistory-itemHeader\">\r\n          <div className=\"DepositHistory-itemPlatform\">\r\n            {platform && (\r\n              <>\r\n                <div className=\"DepositHistory-itemIcon\">\r\n                  {this.renderPlatformIcon(platform)}\r\n                </div>\r\n                <div className=\"DepositHistory-itemInfo\">\r\n                  <span className=\"DepositHistory-itemCurrency\">\r\n                    {getAttr(platform, 'symbol')}\r\n                  </span>\r\n                  <span className=\"DepositHistory-itemNetwork\">\r\n                    {getAttr(platform, 'network')}\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"DepositHistory-itemAmount\">\r\n            <span className=\"DepositHistory-itemAmountValue\">\r\n              +{amount} {platform ? getAttr(platform, 'symbol') : ''}\r\n            </span>\r\n            <div className={`DepositHistory-itemStatus status-${statusColor}`}>\r\n              {this.getStatusIcon(status)}\r\n              {this.getStatusText(status)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"DepositHistory-itemDetails\">\r\n          <div className=\"DepositHistory-itemMeta\">\r\n            <span className=\"DepositHistory-itemTime\">\r\n              {createdAt ? humanTime(createdAt) : 'Unknown time'}\r\n            </span>\r\n            \r\n            {status === 'confirmed' || status === 'completed' ? (\r\n              <span className=\"DepositHistory-itemConfirmations\">\r\n                {confirmations}/{requiredConfirmations} confirmations\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n\r\n          {transactionHash && (\r\n            <div className=\"DepositHistory-itemHash\">\r\n              <span className=\"DepositHistory-itemHashLabel\">Transaction:</span>\r\n              {explorerUrl ? (\r\n                <a \r\n                  href={explorerUrl} \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"DepositHistory-itemHashLink\"\r\n                >\r\n                  {this.formatHash(transactionHash)}\r\n                  {icon('fas fa-external-link-alt')}\r\n                </a>\r\n              ) : (\r\n                <span className=\"DepositHistory-itemHashText\">\r\n                  {this.formatHash(transactionHash)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {completedAt && (\r\n            <div className=\"DepositHistory-itemCompleted\">\r\n              <span>Credited: {humanTime(completedAt)}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderPlatformIcon(platform: DepositPlatform): Mithril.Children {\r\n    const iconUrl = getAttr(platform, 'iconUrl');\r\n    const iconClass = getAttr(platform, 'iconClass');\r\n    const symbol = getAttr(platform, 'symbol');\r\n\r\n    if (iconUrl) {\r\n      return <img src={iconUrl} alt={symbol} className=\"DepositHistory-platformImg\" />;\r\n    }\r\n\r\n    if (iconClass) {\r\n      return icon(iconClass);\r\n    }\r\n\r\n    // Default currency icons\r\n    switch (symbol) {\r\n      case 'USDT':\r\n        return <span className=\"DepositHistory-currencyIcon usdt\">₮</span>;\r\n      case 'USDC':\r\n        return <span className=\"DepositHistory-currencyIcon usdc\">$</span>;\r\n      case 'BTC':\r\n        return <span className=\"DepositHistory-currencyIcon btc\">₿</span>;\r\n      case 'ETH':\r\n        return <span className=\"DepositHistory-currencyIcon eth\">Ξ</span>;\r\n      default:\r\n        return icon('fas fa-coins');\r\n    }\r\n  }\r\n\r\n  private getStatusIcon(status: string): Mithril.Children {\r\n    switch (status) {\r\n      case 'pending':\r\n        return icon('fas fa-clock');\r\n      case 'confirmed':\r\n        return icon('fas fa-check-circle');\r\n      case 'completed':\r\n        return icon('fas fa-check-double');\r\n      case 'failed':\r\n        return icon('fas fa-times-circle');\r\n      case 'cancelled':\r\n        return icon('fas fa-ban');\r\n      default:\r\n        return icon('fas fa-question-circle');\r\n    }\r\n  }\r\n\r\n  private getStatusText(status: string): string {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'Pending';\r\n      case 'confirmed':\r\n        return 'Confirmed';\r\n      case 'completed':\r\n        return 'Completed';\r\n      case 'failed':\r\n        return 'Failed';\r\n      case 'cancelled':\r\n        return 'Cancelled';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n\r\n  private formatHash(hash: string): string {\r\n    if (hash.length <= 16) return hash;\r\n    return `${hash.substring(0, 8)}...${hash.substring(hash.length - 8)}`;\r\n  }\r\n}","import app from 'flarum/forum/app';\r\nimport Page from 'flarum/common/components/Page';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport m from 'mithril';\r\nimport type Mithril from 'mithril';\r\n\r\n// Withdrawal imports\r\nimport type { WithdrawalPlatform, WithdrawalFormData } from './withdrawal/types/interfaces';\r\nimport WithdrawalForm from './withdrawal/forms/WithdrawalForm';\r\nimport WithdrawalHistory from './withdrawal/history/WithdrawalHistory';\r\n\r\n// Deposit imports\r\nimport type { DepositFormData, DepositAddressData } from './deposit/types/interfaces';\r\nimport type DepositPlatform from '../common/models/DepositPlatform';\r\nimport CurrencySelector from './deposit/selectors/CurrencySelector';\r\nimport NetworkSelector from './deposit/selectors/NetworkSelector';\r\nimport AddressDisplay from './deposit/components/AddressDisplay';\r\nimport ImageDisplay from './deposit/components/QRCodeDisplay';\r\nimport DepositHistory from './deposit/history/DepositHistory';\r\n\r\n// Utilities\r\nimport { getAttr, getIdString } from './withdrawal/utils/modelHelpers';\r\n\r\ntype TabType = 'withdrawal' | 'deposit' | 'withdrawal-history' | 'deposit-history';\r\n\r\ninterface FundsPageState {\r\n  // Withdrawal state\r\n  withdrawalPlatforms: WithdrawalPlatform[];\r\n  withdrawalRequests: any[];\r\n  userBalance: number;\r\n  loadingBalance: boolean;\r\n  submitting: boolean;\r\n  \r\n  // Deposit state\r\n  depositPlatforms: DepositPlatform[];\r\n  depositTransactions: any[];\r\n  \r\n  // Shared state\r\n  loading: boolean;\r\n  activeTab: Stream<TabType>;\r\n}\r\n\r\nexport default class FundsPage extends Page {\r\n  private state: FundsPageState = {\r\n    withdrawalPlatforms: [],\r\n    withdrawalRequests: [],\r\n    userBalance: 0,\r\n    loadingBalance: true,\r\n    submitting: false,\r\n    depositPlatforms: [],\r\n    depositTransactions: [],\r\n    loading: true,\r\n    activeTab: Stream('withdrawal')\r\n  };\r\n\r\n  // Withdrawal form data\r\n  private withdrawalFormData: WithdrawalFormData = {\r\n    amount: Stream(''),\r\n    selectedPlatform: Stream<WithdrawalPlatform | null>(null),\r\n    accountDetails: Stream(''),\r\n    message: Stream(''),\r\n    saveAddress: Stream(false)\r\n  };\r\n\r\n  // Deposit form data and address\r\n  private depositFormData: DepositFormData = {\r\n    selectedPlatform: Stream<DepositPlatform | null>(null)\r\n  };\r\n\r\n  private depositAddressData: DepositAddressData = {\r\n    address: '',\r\n    platform: null as any,\r\n    loading: false\r\n  };\r\n\r\n  private currencies: string[] = [];\r\n  private networks: string[] = [];\r\n  private selectedCurrency = Stream<string>('');\r\n  private selectedNetwork = Stream<string>('');\r\n\r\n  oninit(vnode: Mithril.VnodeDOM) {\r\n    super.oninit(vnode);\r\n\r\n    // Parse URL to determine initial tab\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const tabParam = urlParams.get('tab');\r\n    const pathTab = this.getTabFromPath();\r\n    \r\n    if (pathTab) {\r\n      this.state.activeTab(pathTab);\r\n    } else if (tabParam && this.isValidTab(tabParam)) {\r\n      this.state.activeTab(tabParam as TabType);\r\n    }\r\n\r\n    // Set page title based on active tab\r\n    this.updatePageTitle();\r\n\r\n    // Load data for both systems\r\n    this.loadAllData();\r\n  }\r\n\r\n  private getTabFromPath(): TabType | null {\r\n    const path = window.location.pathname;\r\n    if (path.includes('/funds/withdrawal')) return 'withdrawal';\r\n    if (path.includes('/funds/deposit')) return 'deposit';\r\n    if (path.includes('/funds/withdrawal-history')) return 'withdrawal-history';\r\n    if (path.includes('/funds/deposit-history')) return 'deposit-history';\r\n    return null;\r\n  }\r\n\r\n  private isValidTab(tab: string): boolean {\r\n    return ['withdrawal', 'deposit', 'withdrawal-history', 'deposit-history'].includes(tab);\r\n  }\r\n\r\n  private updatePageTitle(): void {\r\n    const tab = this.state.activeTab();\r\n    let titleKey = 'withdrawal.forum.page.title'; // default\r\n    \r\n    switch (tab) {\r\n      case 'withdrawal':\r\n      case 'withdrawal-history':\r\n        titleKey = 'withdrawal.forum.page.title';\r\n        break;\r\n      case 'deposit':\r\n      case 'deposit-history':\r\n        titleKey = 'withdrawal.forum.deposit.page.title';\r\n        break;\r\n    }\r\n    \r\n    app.setTitle(app.translator.trans(titleKey));\r\n  }\r\n\r\n  view() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"FundsPage\">\r\n          <div className=\"FundsPage-loading\">\r\n            <LoadingIndicator />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"FundsPage\">\r\n        <div className=\"FundsPage-modal\">\r\n          {this.renderHeader()}\r\n          <div className=\"FundsPage-content\">\r\n            {this.renderActiveTab()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderHeader(): Mithril.Children {\r\n    const activeTab = this.state.activeTab();\r\n    \r\n    return (\r\n      <div className=\"FundsPage-header\">\r\n        <div className=\"FundsPage-tabs\">\r\n          <div \r\n            className={`FundsPage-tab ${activeTab === 'withdrawal' ? 'active' : ''}`}\r\n            onclick={() => this.handleTabChange('withdrawal')}\r\n          >\r\n            {app.translator.trans('withdrawal.forum.tabs.withdrawal')}\r\n          </div>\r\n          <div \r\n            className={`FundsPage-tab ${activeTab === 'deposit' ? 'active' : ''}`}\r\n            onclick={() => this.handleTabChange('deposit')}\r\n          >\r\n            {app.translator.trans('withdrawal.forum.deposit.tabs.deposit')}\r\n          </div>\r\n          <div \r\n            className={`FundsPage-tab ${activeTab === 'withdrawal-history' ? 'active' : ''}`}\r\n            onclick={() => this.handleTabChange('withdrawal-history')}\r\n          >\r\n            {app.translator.trans('withdrawal.forum.tabs.history')}\r\n          </div>\r\n          <div \r\n            className={`FundsPage-tab ${activeTab === 'deposit-history' ? 'active' : ''}`}\r\n            onclick={() => this.handleTabChange('deposit-history')}\r\n          >\r\n            {app.translator.trans('withdrawal.forum.deposit.tabs.history')}\r\n          </div>\r\n        </div>\r\n        <Button\r\n          className=\"FundsPage-close\"\r\n          icon=\"fas fa-times\"\r\n          onclick={() => app.history.back()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderActiveTab(): Mithril.Children {\r\n    const activeTab = this.state.activeTab();\r\n    \r\n    switch (activeTab) {\r\n      case 'withdrawal':\r\n        return this.renderWithdrawalTab();\r\n      case 'deposit':\r\n        return this.renderDepositTab();\r\n      case 'withdrawal-history':\r\n        return this.renderWithdrawalHistoryTab();\r\n      case 'deposit-history':\r\n        return this.renderDepositHistoryTab();\r\n      default:\r\n        return this.renderWithdrawalTab();\r\n    }\r\n  }\r\n\r\n  private renderWithdrawalTab(): Mithril.Children {\r\n    const validPlatforms = (this.state.withdrawalPlatforms || []).filter(platform => !!platform);\r\n\r\n    if (validPlatforms.length === 0) {\r\n      return (\r\n        <div className=\"FundsPage-withdrawalTab\">\r\n          <div className=\"WithdrawalPage-emptyState\">\r\n            <div className=\"WithdrawalPage-emptyIcon\">\r\n              {icon('fas fa-coins')}\r\n            </div>\r\n            <h3 className=\"WithdrawalPage-emptyTitle\">\r\n              {app.translator.trans('withdrawal.forum.no_platforms')}\r\n            </h3>\r\n            <p className=\"WithdrawalPage-emptyDescription\">\r\n              {app.translator.trans('withdrawal.forum.no_platforms_description')}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"FundsPage-withdrawalTab\">\r\n        <WithdrawalForm\r\n          platforms={this.state.withdrawalPlatforms}\r\n          formData={this.getWithdrawalFormDataForComponent()}\r\n          loadingBalance={this.state.loadingBalance}\r\n          submitting={this.state.submitting}\r\n          onFormDataChange={this.handleWithdrawalFormDataChange.bind(this)}\r\n          onFillAllAmount={this.handleFillAllAmount.bind(this)}\r\n          onSubmit={this.handleWithdrawalSubmit.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderDepositTab(): Mithril.Children {\r\n    const availablePlatforms = (this.state.depositPlatforms || []).filter(platform => \r\n      platform && getAttr(platform, 'isActive')\r\n    );\r\n\r\n    if (availablePlatforms.length === 0) {\r\n      return (\r\n        <div className=\"FundsPage-emptyState\">\r\n          <div className=\"FundsPage-emptyIcon\">\r\n            {icon('fas fa-coins')}\r\n          </div>\r\n          <h3 className=\"FundsPage-emptyTitle\">\r\n            {app.translator.trans('withdrawal.forum.deposit.no_platforms')}\r\n          </h3>\r\n          <p className=\"FundsPage-emptyDescription\">\r\n            {app.translator.trans('withdrawal.forum.deposit.no_platforms_description')}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"FundsPage-depositTab\">\r\n        {this.renderDepositSelectors()}\r\n        {this.renderDepositInfo()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderDepositSelectors(): Mithril.Children {\r\n    return (\r\n      <div className=\"FundsPage-selectors\">\r\n        <CurrencySelector\r\n          currencies={this.currencies}\r\n          selected={this.selectedCurrency()}\r\n          onSelect={(currency) => this.handleCurrencyChange(currency)}\r\n          loading={this.state.loading}\r\n        />\r\n        <NetworkSelector\r\n          networks={this.networks}\r\n          selected={this.selectedNetwork()}\r\n          onSelect={(network) => this.handleNetworkChange(network)}\r\n          loading={this.state.loading || !this.selectedCurrency()}\r\n          disabled={!this.selectedCurrency()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderDepositInfo(): Mithril.Children {\r\n    const platform = this.depositFormData.selectedPlatform();\r\n    \r\n    if (!platform) {\r\n      return (\r\n        <div className=\"FundsPage-selectPrompt\">\r\n          <p>{app.translator.trans('withdrawal.forum.deposit.select_currency_network')}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const minAmount = getAttr(platform, 'minAmount') || 0;\r\n    const warningText = getAttr(platform, 'warningText') || \r\n      app.translator.trans('withdrawal.forum.deposit.default_warning', {\r\n        currency: getAttr(platform, 'symbol'),\r\n        network: getAttr(platform, 'network'),\r\n        minAmount\r\n      });\r\n\r\n    return (\r\n      <div className=\"FundsPage-depositInfo\">\r\n        <p className=\"FundsPage-instructionText\">\r\n          {app.translator.trans('withdrawal.forum.deposit.scan_or_use_address')}\r\n        </p>\r\n        \r\n        <AddressDisplay\r\n          address={this.depositAddressData.address}\r\n          loading={this.depositAddressData.loading}\r\n          onCopy={this.handleCopyAddress.bind(this)}\r\n        />\r\n        \r\n        <p className=\"FundsPage-minAmountText\">\r\n          {app.translator.trans('withdrawal.forum.deposit.min_amount', {\r\n            amount: minAmount,\r\n            currency: getAttr(platform, 'symbol')\r\n          })}\r\n        </p>\r\n        \r\n        <div className=\"FundsPage-qrContainer\">\r\n          <ImageDisplay\r\n            platform={this.depositAddressData.platform}\r\n            loading={this.depositAddressData.loading}\r\n            size={160}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"FundsPage-infoPanel\">\r\n          <i className=\"fas fa-info-circle\"></i>\r\n          <span>{warningText}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderWithdrawalHistoryTab(): Mithril.Children {\r\n    return (\r\n      <div className=\"FundsPage-withdrawalTab\">\r\n        <WithdrawalHistory\r\n          requests={this.state.withdrawalRequests}\r\n          platforms={this.state.withdrawalPlatforms}\r\n          loading={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderDepositHistoryTab(): Mithril.Children {\r\n    return (\r\n      <DepositHistory\r\n        transactions={this.state.depositTransactions}\r\n        platforms={this.state.depositPlatforms}\r\n        loading={false}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleTabChange(tab: TabType): void {\r\n    this.state.activeTab(tab);\r\n    this.updatePageTitle();\r\n    \r\n    // Update URL without page reload\r\n    const url = new URL(window.location.href);\r\n    url.searchParams.set('tab', tab);\r\n    window.history.replaceState({}, '', url.toString());\r\n  }\r\n\r\n  // Withdrawal methods (copied from WithdrawalPage)\r\n  private getWithdrawalFormDataForComponent() {\r\n    return {\r\n      selectedPlatform: this.withdrawalFormData.selectedPlatform(),\r\n      amount: this.withdrawalFormData.amount(),\r\n      accountDetails: this.withdrawalFormData.accountDetails(),\r\n      message: this.withdrawalFormData.message(),\r\n      saveAddress: this.withdrawalFormData.saveAddress()\r\n    };\r\n  }\r\n\r\n  private handleWithdrawalFormDataChange(data: Partial<WithdrawalFormData>): void {\r\n    if (data.selectedPlatform !== undefined) {\r\n      this.withdrawalFormData.selectedPlatform(data.selectedPlatform);\r\n    }\r\n    if (data.amount !== undefined) {\r\n      this.withdrawalFormData.amount(data.amount);\r\n    }\r\n    if (data.accountDetails !== undefined) {\r\n      this.withdrawalFormData.accountDetails(data.accountDetails);\r\n    }\r\n    if (data.message !== undefined) {\r\n      this.withdrawalFormData.message(data.message);\r\n    }\r\n    if (data.saveAddress !== undefined) {\r\n      this.withdrawalFormData.saveAddress(data.saveAddress);\r\n    }\r\n  }\r\n\r\n  private async handleFillAllAmount(): Promise<void> {\r\n    const selectedPlatform = this.withdrawalFormData.selectedPlatform();\r\n    if (!selectedPlatform) return;\r\n\r\n    if (this.state.loadingBalance) return;\r\n\r\n    try {\r\n      await this.loadUserBalance(true);\r\n\r\n      const fee = getAttr(selectedPlatform, 'fee') || 0;\r\n      const maxAmount = getAttr(selectedPlatform, 'maxAmount') || Infinity;\r\n      let availableAmount = this.state.userBalance - fee;\r\n      \r\n      if (maxAmount < Infinity && availableAmount > maxAmount) {\r\n        availableAmount = maxAmount;\r\n      }\r\n      \r\n      if (availableAmount > 0) {\r\n        this.withdrawalFormData.amount(availableAmount.toString());\r\n      } else {\r\n        app.alerts.show(\r\n          { type: 'warning', dismissible: true },\r\n          app.translator.trans('withdrawal.forum.insufficient_balance')\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error refreshing balance:', error);\r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.forum.balance_refresh_error')\r\n      );\r\n    }\r\n  }\r\n\r\n  private async handleWithdrawalSubmit(): Promise<void> {\r\n    if (this.state.submitting) return;\r\n\r\n    const selectedPlatform = this.withdrawalFormData.selectedPlatform();\r\n    const amount = this.withdrawalFormData.amount();\r\n    const accountDetails = this.withdrawalFormData.accountDetails();\r\n\r\n    if (!selectedPlatform || !amount || !accountDetails) {\r\n      return;\r\n    }\r\n\r\n    // Validation logic (copied from WithdrawalPage)\r\n    const amountNum = parseFloat(amount);\r\n    \r\n    if (isNaN(amountNum) || amountNum <= 0) {\r\n      app.alerts.show(\r\n        { type: 'warning', dismissible: true },\r\n        app.translator.trans('withdrawal.forum.invalid_amount')\r\n      );\r\n      return;\r\n    }\r\n    \r\n    const minAmount = getAttr(selectedPlatform, 'minAmount') || 0;\r\n    const maxAmount = getAttr(selectedPlatform, 'maxAmount') || Infinity;\r\n    \r\n    if (amountNum < minAmount) {\r\n      app.alerts.show(\r\n        { type: 'warning', dismissible: true },\r\n        app.translator.trans('withdrawal.forum.amount_below_minimum', { \r\n          amount: amountNum, \r\n          minimum: minAmount,\r\n          platform: getAttr(selectedPlatform, 'name') \r\n        })\r\n      );\r\n      return;\r\n    }\r\n    \r\n    if (amountNum > maxAmount) {\r\n      app.alerts.show(\r\n        { type: 'warning', dismissible: true },\r\n        app.translator.trans('withdrawal.forum.amount_above_maximum', { \r\n          amount: amountNum, \r\n          maximum: maxAmount,\r\n          platform: getAttr(selectedPlatform, 'name') \r\n        })\r\n      );\r\n      return;\r\n    }\r\n    \r\n    const fee = getAttr(selectedPlatform, 'fee') || 0;\r\n    const totalRequired = amountNum + fee;\r\n    \r\n    if (this.state.userBalance < totalRequired) {\r\n      const feeText = fee > 0 ? app.translator.trans('withdrawal.forum.including_fee', { fee }) : '';\r\n      app.alerts.show(\r\n        { type: 'warning', dismissible: true },\r\n        app.translator.trans('withdrawal.forum.insufficient_balance_detailed', {\r\n          required: totalRequired,\r\n          available: this.state.userBalance,\r\n          feeText\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.state.submitting = true;\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/withdrawal-requests',\r\n        body: {\r\n          data: {\r\n            type: 'withdrawal-requests',\r\n            attributes: {\r\n              platformId: getIdString(selectedPlatform),\r\n              amount: parseFloat(amount),\r\n              accountDetails,\r\n              message: this.withdrawalFormData.message(),\r\n              saveAddress: this.withdrawalFormData.saveAddress()\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      app.store.pushPayload(response);\r\n\r\n      this.withdrawalFormData.amount('');\r\n      this.withdrawalFormData.accountDetails('');\r\n      this.withdrawalFormData.message('');\r\n      if (!this.withdrawalFormData.saveAddress()) {\r\n        this.withdrawalFormData.selectedPlatform(null);\r\n      }\r\n\r\n      this.loadUserBalance();\r\n      this.loadWithdrawalRequests();\r\n\r\n      app.alerts.show(\r\n        { type: 'success', dismissible: true },\r\n        app.translator.trans('withdrawal.forum.submit_success')\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Withdrawal request failed:', error);\r\n      \r\n      let errorMessage = app.translator.trans('withdrawal.forum.error');\r\n      \r\n      if (error && error.response && error.response.errors) {\r\n        const errors = error.response.errors;\r\n        if (Array.isArray(errors) && errors.length > 0) {\r\n          const firstError = errors[0];\r\n          if (firstError.detail) {\r\n            errorMessage = firstError.detail;\r\n          }\r\n        }\r\n      } else if (error && error.responseText) {\r\n        if (error.responseText.includes('<b>Fatal error</b>') || error.responseText.includes('<!DOCTYPE')) {\r\n          errorMessage = app.translator.trans('withdrawal.forum.server_error');\r\n        } else {\r\n          try {\r\n            const response = JSON.parse(error.responseText);\r\n            if (response.errors && Array.isArray(response.errors) && response.errors.length > 0) {\r\n              const firstError = response.errors[0];\r\n              if (firstError.detail) {\r\n                errorMessage = firstError.detail;\r\n              }\r\n            }\r\n          } catch {\r\n            errorMessage = app.translator.trans('withdrawal.forum.server_error');\r\n          }\r\n        }\r\n      }\r\n      \r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        errorMessage\r\n      );\r\n    } finally {\r\n      this.state.submitting = false;\r\n    }\r\n  }\r\n\r\n  // Deposit methods (copied from DepositPage)\r\n  private handleCurrencyChange(currency: string): void {\r\n    this.selectedCurrency(currency);\r\n    this.selectedNetwork('');\r\n    this.depositFormData.selectedPlatform(null);\r\n    this.updateNetworks();\r\n  }\r\n\r\n  private handleNetworkChange(network: string): void {\r\n    this.selectedNetwork(network);\r\n    this.updateSelectedPlatform();\r\n  }\r\n\r\n  private handleCopyAddress(): void {\r\n    if (this.depositAddressData.address) {\r\n      navigator.clipboard.writeText(this.depositAddressData.address).then(() => {\r\n        app.alerts.show(\r\n          { type: 'success', dismissible: true },\r\n          app.translator.trans('withdrawal.forum.deposit.address_copied')\r\n        );\r\n      }).catch(() => {\r\n        app.alerts.show(\r\n          { type: 'error', dismissible: true },\r\n          app.translator.trans('withdrawal.forum.deposit.copy_failed')\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateNetworks(): void {\r\n    const currency = this.selectedCurrency();\r\n    if (!currency) {\r\n      this.networks = [];\r\n      return;\r\n    }\r\n\r\n    this.networks = this.state.depositPlatforms\r\n      .filter(platform => getAttr(platform, 'symbol') === currency && getAttr(platform, 'isActive'))\r\n      .map(platform => getAttr(platform, 'network'))\r\n      .filter((network, index, arr) => arr.indexOf(network) === index);\r\n  }\r\n\r\n  private updateSelectedPlatform(): void {\r\n    const currency = this.selectedCurrency();\r\n    const network = this.selectedNetwork();\r\n    \r\n    if (!currency || !network) {\r\n      this.depositFormData.selectedPlatform(null);\r\n      return;\r\n    }\r\n\r\n    const platform = this.state.depositPlatforms.find(p => \r\n      getAttr(p, 'symbol') === currency && \r\n      getAttr(p, 'network') === network && \r\n      getAttr(p, 'isActive')\r\n    );\r\n\r\n    if (platform) {\r\n      this.depositFormData.selectedPlatform(platform);\r\n      this.loadDepositAddress(platform);\r\n    }\r\n  }\r\n\r\n  // Data loading methods\r\n  private async loadAllData(): Promise<void> {\r\n    try {\r\n      await Promise.all([\r\n        this.loadWithdrawalData(),\r\n        this.loadDepositData(),\r\n        this.loadUserBalance()\r\n      ]);\r\n      \r\n      this.state.loading = false;\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n      this.state.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async loadWithdrawalData(): Promise<void> {\r\n    const [platformsResponse, requestsResponse] = await Promise.all([\r\n      app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/withdrawal-platforms'\r\n      }),\r\n      app.request({\r\n        method: 'GET', \r\n        url: app.forum.attribute('apiUrl') + '/withdrawal-requests'\r\n      })\r\n    ]);\r\n\r\n    app.store.pushPayload(platformsResponse);\r\n    app.store.pushPayload(requestsResponse);\r\n\r\n    this.state.withdrawalPlatforms = app.store.all('withdrawal-platforms');\r\n    this.state.withdrawalRequests = app.store.all('withdrawal-requests');\r\n  }\r\n\r\n  private async loadDepositData(): Promise<void> {\r\n    const [platformsResponse, transactionsResponse] = await Promise.all([\r\n      app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/deposit-platforms'\r\n      }),\r\n      app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/deposit-transactions'\r\n      })\r\n    ]);\r\n\r\n    app.store.pushPayload(platformsResponse);\r\n    app.store.pushPayload(transactionsResponse);\r\n    \r\n    this.state.depositPlatforms = app.store.all('deposit-platforms');\r\n    this.state.depositTransactions = app.store.all('deposit-transactions');\r\n    \r\n    // Extract unique currencies\r\n    this.currencies = this.state.depositPlatforms\r\n      .filter(platform => getAttr(platform, 'isActive'))\r\n      .map(platform => getAttr(platform, 'symbol'))\r\n      .filter((currency, index, arr) => arr.indexOf(currency) === index);\r\n  }\r\n\r\n  private async loadUserBalance(forceRefresh = false): Promise<void> {\r\n    try {\r\n      this.state.loadingBalance = true;\r\n      \r\n      if (forceRefresh && app.session.user) {\r\n        const response = await app.request({\r\n          method: 'GET',\r\n          url: `${app.forum.attribute('apiUrl')}/users/${app.session.user.id()}`\r\n        });\r\n        \r\n        app.store.pushPayload(response);\r\n        \r\n        const updatedUser = app.store.getById('users', app.session.user.id());\r\n        if (updatedUser) {\r\n          this.state.userBalance = parseFloat(updatedUser.attribute('money')) || 0;\r\n        } else {\r\n          this.state.userBalance = 0;\r\n        }\r\n      } else {\r\n        this.state.userBalance = parseFloat(app.session.user?.attribute('money')) || 0;\r\n      }\r\n      \r\n      this.state.loadingBalance = false;\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error loading user balance:', error);\r\n      this.state.loadingBalance = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async loadWithdrawalRequests(): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/withdrawal-requests'\r\n      });\r\n\r\n      app.store.pushPayload(response);\r\n      this.state.withdrawalRequests = app.store.all('withdrawal-requests');\r\n    } catch (error) {\r\n      console.error('Error loading withdrawal requests:', error);\r\n    }\r\n  }\r\n\r\n  private async loadDepositAddress(platform: DepositPlatform): Promise<void> {\r\n    this.depositAddressData.loading = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/deposit-address',\r\n        params: {\r\n          platform_id: getAttr(platform, 'id')\r\n        }\r\n      });\r\n\r\n      const addressData = response.data;\r\n      this.depositAddressData = {\r\n        address: addressData.attributes.address,\r\n        addressTag: addressData.attributes.addressTag,\r\n        platform,\r\n        loading: false\r\n      };\r\n\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Error loading deposit address:', error);\r\n      this.depositAddressData.loading = false;\r\n      \r\n      app.alerts.show(\r\n        { type: 'error', dismissible: true },\r\n        app.translator.trans('withdrawal.forum.deposit.address_load_error')\r\n      );\r\n      \r\n      m.redraw();\r\n    }\r\n  }\r\n}","import Model from 'flarum/common/Model';\r\n\r\n/**\r\n * WithdrawalPlatform model for Flarum\r\n * \r\n * This model represents a withdrawal platform that users can use\r\n * to withdraw their virtual currency.\r\n */\r\nexport default class WithdrawalPlatform extends Model {\r\n  // Basic attributes\r\n  name = Model.attribute<string>('name');\r\n  symbol = Model.attribute<string>('symbol');\r\n  minAmount = Model.attribute<number>('minAmount');\r\n  maxAmount = Model.attribute<number>('maxAmount');\r\n  fee = Model.attribute<number>('fee');\r\n  \r\n  // Optional attributes\r\n  iconUrl = Model.attribute<string | null>('iconUrl');\r\n  iconClass = Model.attribute<string | null>('iconClass');\r\n  \r\n  // Status\r\n  isActive = Model.attribute<boolean>('isActive');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-platforms/${this.id()}`;\r\n  }\r\n  \r\n  // Helper methods\r\n  displayName(): string {\r\n    const symbol = this.symbol();\r\n    const name = this.name();\r\n    return symbol ? `${name} (${symbol})` : name;\r\n  }\r\n  \r\n  isValidAmount(amount: number): boolean {\r\n    const min = this.minAmount();\r\n    const max = this.maxAmount();\r\n    return amount >= min && amount <= max;\r\n  }\r\n  \r\n  getTotalCost(amount: number): number {\r\n    return amount + this.fee();\r\n  }\r\n}","/**\r\n * Shared type definitions for the Withdrawal extension\r\n */\r\n\r\n/**\r\n * Withdrawal platform data structure\r\n */\r\nexport interface WithdrawalPlatformData {\r\n  id: string | number;\r\n  name: string;\r\n  symbol: string;\r\n  minAmount: number;\r\n  maxAmount: number;\r\n  fee: number;\r\n  iconUrl?: string | null;\r\n  iconClass?: string | null;\r\n  isActive: boolean;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * Withdrawal request data structure\r\n */\r\nexport interface WithdrawalRequestData {\r\n  id: string | number;\r\n  amount: number;\r\n  accountDetails: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  platformId: number;\r\n  userId: number;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n/**\r\n * User withdrawal data extension\r\n */\r\nexport interface UserWithdrawalData {\r\n  money?: number;\r\n  withdrawalRequests?: WithdrawalRequestData[];\r\n}\r\n\r\n/**\r\n * API response structures\r\n */\r\nexport interface ApiSuccessResponse<T = any> {\r\n  data: T;\r\n}\r\n\r\nexport interface ApiErrorResponse {\r\n  errors: Array<{\r\n    status: string;\r\n    code: string;\r\n    title: string;\r\n    detail?: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Form validation errors\r\n */\r\nexport interface ValidationErrors {\r\n  [field: string]: string[];\r\n}\r\n\r\n/**\r\n * Configuration constants\r\n */\r\nexport const WITHDRAWAL_STATUS = {\r\n  PENDING: 'pending',\r\n  APPROVED: 'approved',\r\n  REJECTED: 'rejected',\r\n} as const;\r\n\r\nexport type WithdrawalStatus = typeof WITHDRAWAL_STATUS[keyof typeof WITHDRAWAL_STATUS];\r\n\r\n/**\r\n * Default values\r\n */\r\nexport const DEFAULT_MIN_AMOUNT = 0.001;\r\nexport const DEFAULT_MAX_AMOUNT = 10;\r\nexport const DEFAULT_FEE = 0.0005;\r\n\r\n/**\r\n * Helper type guards\r\n */\r\nexport function isWithdrawalPlatform(obj: any): obj is WithdrawalPlatformData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'name' in obj &&\r\n    'symbol' in obj &&\r\n    'minAmount' in obj &&\r\n    'maxAmount' in obj;\r\n}\r\n\r\nexport function isWithdrawalRequest(obj: any): obj is WithdrawalRequestData {\r\n  return obj &&\r\n    typeof obj === 'object' &&\r\n    'id' in obj &&\r\n    'amount' in obj &&\r\n    'accountDetails' in obj &&\r\n    'status' in obj &&\r\n    'platformId' in obj &&\r\n    'userId' in obj;\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport WithdrawalPlatform from './WithdrawalPlatform';\r\nimport { WithdrawalStatus, WITHDRAWAL_STATUS } from '../types';\r\n\r\n/**\r\n * WithdrawalRequest model for Flarum\r\n * \r\n * This model represents a user's withdrawal request.\r\n */\r\nexport default class WithdrawalRequest extends Model {\r\n  // Basic attributes\r\n  amount = Model.attribute<number>('amount');\r\n  accountDetails = Model.attribute<string>('accountDetails');\r\n  message = Model.attribute<string>('message');\r\n  status = Model.attribute<WithdrawalStatus>('status');\r\n  \r\n  // Foreign keys\r\n  platformId = Model.attribute<number>('platformId');\r\n  userId = Model.attribute<number>('userId');\r\n  \r\n  // Timestamps\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n  \r\n  // Relationships\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<WithdrawalPlatform>('platform');\r\n  \r\n  // Computed properties\r\n  apiEndpoint() {\r\n    return `/withdrawal-requests/${this.id()}`;\r\n  }\r\n  \r\n  // Status helpers\r\n  isPending(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.PENDING;\r\n  }\r\n  \r\n  isApproved(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.APPROVED;\r\n  }\r\n  \r\n  isRejected(): boolean {\r\n    return this.status() === WITHDRAWAL_STATUS.REJECTED;\r\n  }\r\n  \r\n  canBeModified(): boolean {\r\n    return this.isPending();\r\n  }\r\n  \r\n  // Display helpers\r\n  statusLabel(): string {\r\n    const status = this.status();\r\n    return app.translator.trans(`withdrawal.forum.status.${status}`);\r\n  }\r\n  \r\n  statusColor(): string {\r\n    const status = this.status();\r\n    switch (status) {\r\n      case WITHDRAWAL_STATUS.APPROVED:\r\n        return 'success';\r\n      case WITHDRAWAL_STATUS.REJECTED:\r\n        return 'danger';\r\n      case WITHDRAWAL_STATUS.PENDING:\r\n      default:\r\n        return 'warning';\r\n    }\r\n  }\r\n}","import Model from 'flarum/common/Model';\r\n\r\nexport default class DepositPlatform extends Model {\r\n  name = Model.attribute('name');\r\n  symbol = Model.attribute('symbol');\r\n  network = Model.attribute('network');\r\n  networkTypeId = Model.attribute('networkTypeId');\r\n  displayName = Model.attribute('displayName');\r\n  minAmount = Model.attribute('minAmount');\r\n  maxAmount = Model.attribute('maxAmount');\r\n  address = Model.attribute('address');\r\n  qrCodeImageUrl = Model.attribute('qrCodeImageUrl');\r\n  iconUrl = Model.attribute('iconUrl');\r\n  iconClass = Model.attribute('iconClass');\r\n  warningText = Model.attribute('warningText');\r\n  networkConfig = Model.attribute('networkConfig');\r\n  isActive = Model.attribute('isActive');\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport DepositPlatform from './DepositPlatform';\r\n\r\nexport default class DepositAddress extends Model {\r\n  address = Model.attribute('address');\r\n  addressTag = Model.attribute('addressTag');\r\n  fullAddress = Model.attribute('fullAddress');\r\n  isActive = Model.attribute('isActive');\r\n  lastUsedAt = Model.attribute('lastUsedAt', Model.transformDate);\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<DepositPlatform>('platform');\r\n}","import Model from 'flarum/common/Model';\r\nimport User from 'flarum/common/models/User';\r\nimport DepositPlatform from './DepositPlatform';\r\nimport DepositAddress from './DepositAddress';\r\n\r\nexport default class DepositTransaction extends Model {\r\n  amount = Model.attribute('amount');\r\n  fee = Model.attribute('fee');\r\n  creditedAmount = Model.attribute('creditedAmount');\r\n  transactionHash = Model.attribute('transactionHash');\r\n  fromAddress = Model.attribute('fromAddress');\r\n  memo = Model.attribute('memo');\r\n  userMessage = Model.attribute('userMessage');\r\n  status = Model.attribute('status');\r\n  statusColor = Model.attribute('statusColor');\r\n  blockchainData = Model.attribute('blockchainData');\r\n  confirmations = Model.attribute('confirmations');\r\n  requiredConfirmations = Model.attribute('requiredConfirmations');\r\n  hasEnoughConfirmations = Model.attribute('hasEnoughConfirmations');\r\n  canBeCompleted = Model.attribute('canBeCompleted');\r\n  explorerUrl = Model.attribute('explorerUrl');\r\n  detectedAt = Model.attribute('detectedAt', Model.transformDate);\r\n  confirmedAt = Model.attribute('confirmedAt', Model.transformDate);\r\n  completedAt = Model.attribute('completedAt', Model.transformDate);\r\n  adminNotes = Model.attribute('adminNotes');\r\n  createdAt = Model.attribute('createdAt', Model.transformDate);\r\n  updatedAt = Model.attribute('updatedAt', Model.transformDate);\r\n\r\n  user = Model.hasOne<User>('user');\r\n  platform = Model.hasOne<DepositPlatform>('platform');\r\n  depositAddress = Model.hasOne<DepositAddress>('depositAddress');\r\n  processedBy = Model.hasOne<User>('processedBy');\r\n}","import Component, { ComponentAttrs } from 'flarum/common/Component';\r\nimport app from 'flarum/forum/app';\r\nimport type Mithril from 'mithril';\r\n\r\n/**\r\n * MoneyDisplay component shows the user's money balance with withdrawal button\r\n */\r\nexport default class MoneyDisplay extends Component<ComponentAttrs> {\r\n  view(): Mithril.Children {\r\n    if (!app.session.user) {\r\n      return null;\r\n    }\r\n\r\n    const moneyName = app.forum.attribute('antoinefr-money.moneyname') || '[money]';\r\n    const userMoneyText = moneyName.replace('[money]', app.session.user.attribute(\"money\"));\r\n    const iconUrl = app.forum.attribute('wusong8899-withdrawal.moneyIconUrl');\r\n\r\n    return (\r\n      <div\r\n        id=\"moneyDisplayContainer\"\r\n        className=\"client1-header-adv-wrapper clientCustomizeWithdrawalHeaderTotalMoney\"\r\n      >\r\n        <div className=\"clientCustomizeWithdrawalHeaderText\">\r\n          {iconUrl && iconUrl.trim() && (\r\n            <span style={{  \r\n              borderRadius: '50%', \r\n              padding: '6px 8px', \r\n              marginRight: '8px',\r\n              display: 'inline-flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center'\r\n            }}>\r\n              <img \r\n                src={iconUrl} \r\n                alt=\"Money icon\" \r\n                style={{ \r\n                  width: '20px', \r\n                  height: '20px'\r\n                }}\r\n                onError={(e: Event) => {\r\n                  // Hide image if it fails to load\r\n                  const target = e.target as HTMLImageElement;\r\n                  target.style.display = 'none';\r\n                }}\r\n              />\r\n            </span>\r\n          )}\r\n          {userMoneyText}\r\n        </div>\r\n        \r\n        <div className=\"clientCustomizeWithdrawalHeaderIcon\">\r\n          <i className=\"fas fa-wallet\" />\r\n        </div>\r\n\r\n        <div className=\"clientCustomizeWithdrawalButtons\">\r\n          <div\r\n            className=\"clientCustomizeWithdrawalButton\"\r\n            onclick={this.handleWithdrawalClick.bind(this)}\r\n            title=\"提款\"\r\n          >\r\n            <i className=\"fas fa-money-bill-transfer\" />\r\n            <span style={{ marginLeft: '4px', fontSize: '12px' }}>提款</span>\r\n          </div>\r\n          <div\r\n            className=\"clientCustomizeDepositButton\"\r\n            onclick={this.handleDepositClick.bind(this)}\r\n            title=\"存款\"\r\n            style={{ marginLeft: '8px' }}\r\n          >\r\n            <i className=\"fas fa-coins\" />\r\n            <span style={{ marginLeft: '4px', fontSize: '12px' }}>存款</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle withdrawal button click\r\n   */\r\n  private handleWithdrawalClick(e: Event): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // Navigate to funds page with withdrawal tab\r\n    window.location.href = '/funds?tab=withdrawal';\r\n  }\r\n\r\n  /**\r\n   * Handle deposit button click\r\n   */\r\n  private handleDepositClick(e: Event): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // Navigate to funds page with deposit tab\r\n    window.location.href = '/funds?tab=deposit';\r\n  }\r\n}","import Component, { ComponentAttrs } from 'flarum/common/Component';\nimport app from 'flarum/forum/app';\nimport type Mithril from 'mithril';\n\n/**\n * MobileMoneyDisplay component for mobile navigation bar\n * Shows user's money balance with withdrawal button in mobile navigation\n */\nexport default class MobileMoneyDisplay extends Component<ComponentAttrs> {\n  view(): Mithril.Children {\n    // Note: Mobile detection and user authentication are now handled in index.ts\n    // This component assumes it should render when called\n    const userMoney = app.session.user?.attribute('money') || 0;\n    const iconUrl = app.forum.attribute('wusong8899-withdrawal.moneyIconUrl');\n\n    return (\n      <div className=\"Navigation-mobileMoneyDisplay\">\n        <div \n          className=\"Navigation-moneySection\"\n          onclick={this.handleWithdrawalClick.bind(this)}\n          title={`余额: ${userMoney} - 点击提款`}\n        >\n          {/* 货币图标和金额显示 */}\n          <div className=\"Navigation-moneyText\">\n            {iconUrl && iconUrl.trim() && (\n              <span style={{  \n                borderRadius: '50%', \n                padding: '4px 6px', \n                marginRight: '6px',\n                display: 'inline-flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}>\n                <img \n                  src={iconUrl} \n                  alt=\"Money icon\" \n                  style={{ \n                    width: '18px', \n                    height: '18px'\n                  }}\n                  onError={(e: Event) => {\n                    // Hide image if it fails to load\n                    const target = e.target as HTMLImageElement;\n                    target.style.display = 'none';\n                  }}\n                />\n              </span>\n            )}\n            <span className=\"Navigation-moneyAmount\">{userMoney}</span>\n          </div>\n          \n          {/* 提款按钮 */}\n          <div className=\"Navigation-withdrawalButton\">\n            <i className=\"fas fa-money-bill-transfer\" />\n            <span>提款</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Handle withdrawal button click\n   */\n  private handleWithdrawalClick(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log('MobileMoneyDisplay clicked!'); // 调试日志\n    \n    try {\n      // Navigate to unified funds page with withdrawal tab\n      window.location.href = '/funds?tab=withdrawal';\n    } catch (error) {\n      console.error('Navigation error:', error);\n      // 备用方案\n      window.location.href = '/funds?tab=withdrawal';\n    }\n  }\n}","import app from 'flarum/forum/app';\r\n\r\n/**\r\n * ConfigManager utility for flarum-withdrawal extension\r\n */\r\nexport class ConfigManager {\r\n  private static instance: ConfigManager;\r\n\r\n  private constructor() {}\r\n\r\n  public static getInstance(): ConfigManager {\r\n    if (!ConfigManager.instance) {\r\n      ConfigManager.instance = new ConfigManager();\r\n    }\r\n    return ConfigManager.instance;\r\n  }\r\n\r\n  /**\r\n   * Check if current page is the tags page (main forum page)\r\n   */\r\n  public isTagsPage(): boolean {\r\n    try {\r\n      const routeName = app.current?.get('routeName');\r\n      return routeName === 'index';\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}","/**\n * Check if the current device is mobile based on screen width\n */\nexport function isMobile(): boolean {\n  return window.innerWidth <= 767;\n}\n\n/**\n * Check if the current device is tablet\n */\nexport function isTablet(): boolean {\n  return window.innerWidth >= 768 && window.innerWidth <= 1024;\n}\n\n/**\n * Check if the current device is desktop\n */\nexport function isDesktop(): boolean {\n  return window.innerWidth > 1024;\n}\n\n/**\n * Check if the current device is mobile or tablet\n */\nexport function isMobileOrTablet(): boolean {\n  return isMobile() || isTablet();\n}\n\n/**\n * Get the current breakpoint\n */\nexport function getCurrentBreakpoint(): 'mobile' | 'tablet' | 'desktop' {\n  if (isMobile()) return 'mobile';\n  if (isTablet()) return 'tablet';\n  return 'desktop';\n}\n\n/**\n * Check if touch is supported\n */\nexport function isTouchDevice(): boolean {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n}\n\n// For backward compatibility\nexport const MobileDetector = {\n  isMobile,\n  isTablet,\n  isDesktop,\n  isMobileOrTablet,\n  getCurrentBreakpoint,\n  isTouchDevice\n};","import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport HeaderPrimary from 'flarum/forum/components/HeaderPrimary';\r\nimport Navigation from 'flarum/common/components/Navigation';\r\nimport FundsPage from './components/FundsPage';\r\nimport WithdrawalPlatform from '../common/models/WithdrawalPlatform';\r\nimport WithdrawalRequest from '../common/models/WithdrawalRequest';\r\nimport DepositPlatform from '../common/models/DepositPlatform';\r\nimport DepositAddress from '../common/models/DepositAddress';\r\nimport DepositTransaction from '../common/models/DepositTransaction';\r\nimport MoneyDisplay from './components/MoneyDisplay';\r\nimport MobileMoneyDisplay from './components/MobileMoneyDisplay';\r\nimport { ConfigManager } from './utils/ConfigManager';\r\nimport { MobileDetector } from './utils/MobileDetector';\r\n\r\napp.initializers.add('wusong8899-withdrawal', () => {\r\n  // Register models in store\r\n  app.store.models['withdrawal-platforms'] = WithdrawalPlatform;\r\n  app.store.models['withdrawal-requests'] = WithdrawalRequest;\r\n  app.store.models['deposit-platforms'] = DepositPlatform;\r\n  app.store.models['deposit-addresses'] = DepositAddress;\r\n  app.store.models['deposit-transactions'] = DepositTransaction;\r\n\r\n  // New unified funds page\r\n  app.routes.funds = { path: '/funds', component: FundsPage };\r\n  \r\n  // Legacy routes for backward compatibility - redirect to funds page\r\n  app.routes.withdrawal = { path: '/withdrawal', component: FundsPage };\r\n  app.routes.deposit = { path: '/deposit', component: FundsPage };\r\n\r\n\r\n  // Add money display to header primary (desktop)\r\n  extend(HeaderPrimary.prototype, 'view', function (vnode) {\r\n    // Only add on tags page for logged-in users and on desktop\r\n    const configManager = ConfigManager.getInstance();\r\n    if (app.session.user && configManager.isTagsPage() && !MobileDetector.isMobile()) {\r\n      // Add money display to the header primary view\r\n      vnode.children.push(MoneyDisplay.component());\r\n    }\r\n  });\r\n\r\n  // Add mobile money display to navigation using component extension\r\n  extend(Navigation.prototype, 'view', function (vnode) {\r\n    // Only work on mobile devices (viewport width <= 768px)\r\n    if (window.innerWidth > 768) {\r\n      return;\r\n    }\r\n\r\n    // Only work on homepage\r\n    const routeName = app.current.get('routeName');\r\n    if (routeName !== 'tags') {\r\n      return;\r\n    }\r\n\r\n    // Only work for logged-in users\r\n    if (!app.session.user) {\r\n      return;\r\n    }\r\n\r\n    if (!vnode || !vnode.children || !Array.isArray(vnode.children)) {\r\n      return;\r\n    }\r\n\r\n    // Check if we already added the money display component to avoid duplication\r\n    const hasMoneyDisplay = vnode.children.some((child: any) =>\r\n      child && child.attrs && child.attrs.className &&\r\n      child.attrs.className.includes('Navigation-mobileMoneyDisplay')\r\n    );\r\n\r\n    if (!hasMoneyDisplay) {\r\n      // Add MobileMoneyDisplay component to navigation\r\n      vnode.children.push(MobileMoneyDisplay.component({\r\n        className: \"item-withdrawal Navigation-mobileMoneyDisplay\"\r\n      }));\r\n    }\r\n  });\r\n});"],"names":["getId","obj","getAttr","attr","getIdString","findPlatformById","platforms","platformId","platformIdStr","p","pId","getDateFromAttr","dateStr","STATUS_CLASS_MAP","DEFAULTS","ICONS","PlatformIcon","vnode","platform","className","size","icon","iconUrl","iconClass","name","symbol","sizeClass","e","target","fallbackIcon","fallbackIconClass","finalIconClass","finalSymbol","PlatformSelector","Component","selectedPlatform","showDropdown","validPlatforms","app","onPlatformSelect","onAmountChange","AmountInput","amount","loadingBalance","onFillAllAmount","minAmount","maxAmount","fee","Button","AddressInput","accountDetails","saveAddress","onAccountDetailsChange","onSaveAddressToggle","text","error","MessageInput","message","onMessageChange","SubmitButton","submitting","canSubmit","onSubmit","numericAmount","finalAmount","WithdrawalForm","formData","onFormDataChange","StatusBadge","status","statusClass","statusLabel","HistoryItem","request","date","EmptyState","iconName","title","description","LoadingState","props","LoadingIndicator","WithdrawalHistory","requests","loading","CurrencySelector","Stream","element","m","currencies","selected","currency","onSelect","NetworkSelector","networks","disabled","network","AddressDisplay","address","onCopy","ImageDisplay","DepositHistory","transactions","transaction","statusColor","transactionHash","explorerUrl","createdAt","completedAt","confirmations","requiredConfirmations","humanTime","hash","FundsPage","Page","tabParam","pathTab","path","tab","titleKey","activeTab","warningText","url","data","availableAmount","amountNum","totalRequired","feeText","response","errorMessage","errors","firstError","index","arr","platformsResponse","requestsResponse","transactionsResponse","forceRefresh","updatedUser","addressData","WithdrawalPlatform","Model","min","max","WITHDRAWAL_STATUS","WithdrawalRequest","DepositPlatform","DepositAddress","DepositTransaction","MoneyDisplay","userMoneyText","MobileMoneyDisplay","userMoney","ConfigManager","isMobile","isTablet","isDesktop","isMobileOrTablet","getCurrentBreakpoint","isTouchDevice","MobileDetector","extend","HeaderPrimary","configManager","Navigation","child"],"mappings":"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"}